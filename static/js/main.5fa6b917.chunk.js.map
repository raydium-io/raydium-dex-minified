{"version":3,"sources":["wallet-adapters/ledger/core.ts","assets/logo1.svg","assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","wallet-adapters/types.ts","wallet-adapters/ledger/index.tsx","wallet-adapters/solong/index.tsx","wallet-adapters/phantom/index.tsx","wallet-adapters/math/index.tsx","utils/wallet.tsx","wallet-adapters/sollet-extension/index.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","components/CustomMarketDialog.jsx","components/layout/FloatingElement.jsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/DeprecatedMarketsInstructions.js","components/LinkAddress.tsx","utils/useInterval.tsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/StandaloneBalancesDisplay.tsx","components/TradingView/saveLoadAdapter.tsx","charting_library/charting_library.esm.js","utils/Datafeed.tsx","components/TradingView/index.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","pages/TradePage.tsx","components/WalletConnect.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","components/CustomClusterEndpointDialog.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","App.tsx","serviceWorker.js","index.js"],"names":["ledgerSend","transport","instruction","p1","payload","a","p2","payloadOffset","length","chunk","slice","console","log","toString","send","Error","reply","harden","n","getSolanaDerivationPath","account","change","undefined","derivationPath","Buffer","alloc","offset","writeUInt8","writeUInt32BE","signTransaction","transaction","messageBytes","serializeMessage","signBytes","bytes","numPaths","concat","getPublicKey","publicKeyBytes","PublicKey","module","exports","isValidPublicKey","key","sleep","ms","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","includes","split","parseInt","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","abbreviateAddress","address","size","base58","toBase58","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","map","refreshIntervalsOnError","x","previousRefreshInterval","add","assert","delete","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","refreshAllCaches","setCache","initializeOnly","endpoints","url","weight","ENDPOINTS","name","endpoint","pointer","api","getRandomEndpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","currentItem","previousInfoRef","useRef","current","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","DEFAULT_PUBLIC_KEY","LedgerWalletAdapter","_connecting","_publicKey","_transport","transactions","result","signed","signature","addSignature","TransportWebUSB","create","emit","disconnect","close","EventEmitter","SolongWalletAdapter","_onProcess","_connected","connect","bind","solong","window","signAllTransactions","selectAccount","then","catch","finally","PhantomWalletAdapter","_handleConnect","args","_handleDisconnect","solana","isPhantom","_provider","isConnected","autoApprove","open","on","MathWalletAdapter","isMathWallet","getAccount","ASSET_URL","WALLET_PROVIDERS","icon","adapter","_","network","sollet","Wallet","WalletContext","WalletProvider","autoConnect","setAutoConnect","providerUrl","setProviderUrl","provider","wallet","setWallet","updateWallet","readyState","removeEventListener","addEventListener","connected","setConnected","walletPublicKey","substring","isModalVisible","setIsModalVisible","select","providerName","title","okText","visible","okButtonProps","display","onCancel","width","onClick","alt","height","src","marginRight","textAlign","marginBottom","useWallet","setProvider","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","error","Component","createTokenAccountTransaction","mintPublicKey","newAccount","Transaction","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","space","programId","createAccount","initializeAccount","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","createAccountTransaction","createAccountSigner","quoteMintAddress","referrerQuoteWallet","supportsReferralFees","quoteToken","getTokenByMintAddress","referrer","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","t","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","feeDiscountPubkey","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","createAccountSigners","payer","matchOrderstransaction","startTime","getUnixTs","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","endTime","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransactions","transactionsAndSigners","signedTransactions","signedTransaction","sendSignedTransaction","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","rawTransaction","serialize","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","reject","onSignature","e","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offsetOf","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useCustomMarkets","useAllMarkets","mintsToTickers","TOKEN_MINTS","customMarketInfo","customMarket","baseLabel","quoteLabel","useMintInfos","useTokenAccounts","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","mintAddress","NATIVE_SOL","cloneDeep","token","TOKENS","symbol","WSOL","BTC","ETH","USDT","WUSDT","USDC","WUSDC","YFI","LINK","XRP","SUSHI","ALEPH","SXP","HGET","CREAM","UBXT","HNT","FRONT","AKRO","HXRO","UNI","SRM","FTT","MSRM","TOMO","KARMA","LUA","MATH","KEEP","SWAG","FIDA","KIN","MAPS","OXY","RAY","xCOPE","COPE","STEP","MEDIA","ROPE","MER","TULIP","WOO","SNY","BOP","SLRS","SAMO","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","_MARKETS","deprecated","MARKETS","item","USE_MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","indexItem","baseCurrency","quoteCurrency","setCustomMarkets","MarketProvider","setMarketAddress","marketInfos","setMarket","setMarketName","getTradePageUrl","saved","useSelectedTokenAccounts","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useLocallyStoredFeeDiscountKey","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useAllOpenOrdersBalances","useMarketInfos","stringProgramId","flat","useAllOpenOrdersAccounts","loadedOpenOrdersAccounts","mintInfosConnected","marketsByAddress","openOrdersBalances","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","total","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","Text","CustomMarketDialog","onAddCustomMarket","onClose","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","onOk","disabled","placeholder","onChange","suffix","LoadingOutlined","marginTop","gutter","Wrapper","styled","FloatingElement","stretchVertical","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","onSettleFunds","rowItem","setRowItem","dataIndex","render","ghost","fontSize","paddingBottom","overflowX","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","cancel","orderId","orderInfos","text","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","LinkAddress","shorten","LinkOutlined","cursor","useInterval","delay","savedCallback","setInterval","clearInterval","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","index","bidsToDisplay","asksToDisplay","flex","overflow","borderTop","borderBottom","paddingRight","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","ArrowDownOutlined","DepositDialog","coinMint","depositCoin","baseOrQuote","paddingTop","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","onSelect","newSelectedTokenAccounts","Option","code","shape","CopyOutlined","navigator","clipboard","writeText","RowBox","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","align","logo1","CHARTS_KEY","STUDIES_KEY","getAllCharts","charts","removeChart","chartId","chart","saveChart","chartData","content","timestamp","splice","getChartContent","getAllStudyTemplates","studies","removeStudyTemplate","study","saveStudyTemplate","getStudyTemplateContent","assign","o","arguments","r","prototype","hasOwnProperty","call","apply","isArray","mobile","disabled_features","enabled_features","interval","timezone","container_id","library_path","locale","widgetbar","details","watchlist","watchlist_settings","default_symbols","overrides","studies_overrides","trading_customization","position","brokerConfig","configFlags","fullscreen","autosize","debug","logo","time_frames","resolution","client_id","user_id","charts_storage_api_version","favorites","intervals","chartTypes","_id","_ready","_readyHandlers","_onWindowResize","_autoResizeChart","datafeed","_options","preset","theme","loading_screen","_create","onChartReady","headerReady","_innerWindowLoaded","_innerWindow","onGrayedObjectClicked","_innerAPI","onShortcut","createShortcutAction","subscribe","unsubscribe","getLanguage","setSymbol","changeSymbol","_iFrame","parentNode","removeChild","closePopupsAndDialogs","selectLineTool","selectedLineTool","save","loadChart","extendedData","getSavedCharts","loadChartFromServer","saveChartToServer","removeChartFromServer","onContextMenu","createButton","showNoticeDialog","showConfirmDialog","showLoadChartDialog","showSaveAsChartDialog","symbolInterval","getSymbolInterval","mainSeriesPriceFormatter","getIntervals","getStudiesList","addCustomCSSFile","applyOverrides","applyStudiesOverrides","watchList","activeChart","chartsCount","layout","setLayout","layoutName","changeTheme","getTheme","takeScreenshot","lockAllDrawingTools","hideAllDrawingTools","drawOnAllCharts","magnetEnabled","magnetMode","undoRedoState","setIntervalLinkingEnabled","setTimeFrame","symbolSync","intervalSync","crosshairSync","timeSync","getAllFeatures","takeClientScreenshot","tradingViewApi","contentWindow","innerHeight","_render","getElementById","innerHTML","querySelector","widgetReady","initializationFinished","customFormatters","custom_formatters","brokerFactory","broker_factory","studiesOverrides","tradingCustomization","disabledFeatures","enabledFeatures","broker_config","restConfig","numeric_formatting","rss_news_feed","newsProvider","news_provider","loadLastChart","load_last_chart","saveLoadAdapter","save_load_adapter","settingsAdapter","settings_adapter","getCustomIndicators","custom_indicators_getter","saved_data","chartContent","encodeURIComponent","timeframe","toolbar_bg","replace","studies_access","drawings_access","String","charts_storage_url","custom_css_url","auto_save_delay","snapshot_url","study_count_limit","symbol_search_request_delay","compare_symbols","TradingView","version","X","A","F","apiGet","N","tVDWs","d","Qeeef","B","_lodash","method","M","j","f","TextEncoder","crypto","Uint8Array","w","DSQWA","H","K","rlUik","MtwRi","cPLzc","FyLkI","l","makeDataFeed","subscriptions","onReady","supported_resolutions","supports_group_request","supports_marks","supports_search","supports_timescale_marks","searchSymbol","userInput","exchange","symbolType","onResult","resolveSymbol","symbolName","onSymboleResolvedCallback","onResolveErrorCallback","extension","getBars","symbolInfo","onHistoryCallback","onErrorCallback","firstDataRequest","ceil","convertResolution","parseCandles","nodeData","subscribeBars","onRealtimeCallback","subscriberUID","onResetCacheNeededCallback","stop","candle","reduceTs","lastCandle","time","c","high","h","low","volume","v","unsubscribeBars","ts","resolutionTv","candles","TVChartContainer","defaultProps","containerId","libraryPath","chartsStorageUrl","chartsStorageApiVersion","clientId","userId","tvWidgetRef","chartProperties","savedProperties","obj","prefix","restrict","restrictTo","recurse","newKey","flatten","widgetOptions","initialSettings","showRelativePriceControl","showCurrencyRiskInQty","showPercentRiskInQty","showBracketsInCurrency","showBracketsInPercent","hideFloatingPanel","setValue","removeValue","tvWidget","widget","className","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","autoSettleEnabled","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","warmUpCache","findBestFeeDiscountKey","autoSettle","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","flexDirection","border","background","fontStyle","fontWeight","defaultValue","bordered","left","top","borderRadius","onSetQuoteSize","tipFormatter","marks","paddingLeft","checked","block","toUpperCase","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","overflowY","toLocaleTimeString","FillsTable","fills","fill","useFills","liquidity","feeCost","FeesTable","balance","feeTier","marginLeft","format","getFeeRates","taker","SRM_MINT","MSRM_MINT","Paragraph","Tabs","TabPane","Index","activeKeyStr","setActiveKeyStr","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","Select","OptGroup","TradePage","useParams","history","useHistory","TradePageInner","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","componentProps","onChangeOrderRef","component","newMarKets","newCustomMarkets","MarketSelector","onDeleteCustomMarket","trigger","InfoCircleOutlined","PlusCircleOutlined","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","indexOf","DeleteOutlined","stopPropagation","nativeEvent","stopImmediatePropagation","arr","addList","reList","uniqueArray","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","WalletConnect","menu","Item","overlay","OpenOrdersPage","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","_openOrders","getOpenOrdersForMarket","getAllOpenOrders","prev","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersFree","openOrdersTotal","defaultActiveKey","tab","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","addonBefore","SwapOutlined","ConvertPage","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","endpointInfoCustom","handler","tradePageUrl","pathname","handleError","getEpochInfo","newCustomEndpoints","wrap","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","options","ticker","validateStatus","hasFeedback","help","parsed","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","newPoolAddress","setNewPoolAddress","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","AssetInput","mintInput","setQuantity","parsedQuantity","old","MintName","showAddress","mintKey","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","onSubmit","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","isPoolToken","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","getAssociatedTokenAddress","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","wrappedSolAccount","transfer","source","destination","closeAccount","approveDelegate","setFeeRate","updateFee","makeTransaction","Group","PoolPage","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5fa6b917.chunk.js","sourcesContent":["import type Transport from '@ledgerhq/hw-transport';\r\nimport type { Transaction } from '@solana/web3.js';\r\n\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nconst INS_GET_PUBKEY = 0x05;\r\nconst INS_SIGN_MESSAGE = 0x06;\r\n\r\nconst P1_NON_CONFIRM = 0x00;\r\nconst P1_CONFIRM = 0x01;\r\n\r\nconst P2_EXTEND = 0x01;\r\nconst P2_MORE = 0x02;\r\n\r\nconst MAX_PAYLOAD = 255;\r\n\r\nconst LEDGER_CLA = 0xe0;\r\n\r\n/*\r\n * Helper for chunked send of large payloads\r\n */\r\nasync function ledgerSend(\r\n  transport: Transport,\r\n  instruction: number,\r\n  p1: number,\r\n  payload: Buffer,\r\n) {\r\n  let p2 = 0;\r\n  let payloadOffset = 0;\r\n\r\n  if (payload.length > MAX_PAYLOAD) {\r\n    while (payload.length - payloadOffset > MAX_PAYLOAD) {\r\n      const chunk = payload.slice(payloadOffset, payloadOffset + MAX_PAYLOAD);\r\n      payloadOffset += MAX_PAYLOAD;\r\n      console.log(\r\n        'send',\r\n        (p2 | P2_MORE).toString(16),\r\n        chunk.length.toString(16),\r\n        chunk,\r\n      );\r\n      const reply = await transport.send(\r\n        LEDGER_CLA,\r\n        instruction,\r\n        p1,\r\n        p2 | P2_MORE,\r\n        chunk,\r\n      );\r\n      if (reply.length !== 2) {\r\n        throw new Error('Received unexpected reply payload');\r\n      }\r\n      p2 |= P2_EXTEND;\r\n    }\r\n  }\r\n\r\n  const chunk = payload.slice(payloadOffset);\r\n  console.log('send', p2.toString(16), chunk.length.toString(16), chunk);\r\n  const reply = await transport.send(LEDGER_CLA, instruction, p1, p2, chunk);\r\n\r\n  return reply.slice(0, reply.length - 2);\r\n}\r\n\r\nconst BIP32_HARDENED_BIT = (1 << 31) >>> 0;\r\nfunction harden(n: number = 0) {\r\n  return (n | BIP32_HARDENED_BIT) >>> 0;\r\n}\r\n\r\nexport function getSolanaDerivationPath(account?: number, change?: number) {\r\n  var length;\r\n  if (account !== undefined) {\r\n    if (change !== undefined) {\r\n      length = 4;\r\n    } else {\r\n      length = 3;\r\n    }\r\n  } else {\r\n    length = 2;\r\n  }\r\n\r\n  var derivationPath = Buffer.alloc(1 + length * 4);\r\n  // eslint-disable-next-line\r\n  var offset = 0;\r\n  offset = derivationPath.writeUInt8(length, offset);\r\n  offset = derivationPath.writeUInt32BE(harden(44), offset); // Using BIP44\r\n  offset = derivationPath.writeUInt32BE(harden(501), offset); // Solana's BIP44 path\r\n\r\n  if (length > 2) {\r\n    offset = derivationPath.writeUInt32BE(harden(account), offset);\r\n    if (length === 4) {\r\n      // @FIXME: https://github.com/project-serum/spl-token-wallet/issues/59\r\n      offset = derivationPath.writeUInt32BE(harden(change), offset);\r\n    }\r\n  }\r\n\r\n  return derivationPath;\r\n}\r\n\r\nexport async function signTransaction(\r\n  transport: Transport,\r\n  transaction: Transaction,\r\n  derivationPath: Buffer = getSolanaDerivationPath(),\r\n) {\r\n  const messageBytes = transaction.serializeMessage();\r\n  return signBytes(transport, messageBytes, derivationPath);\r\n}\r\n\r\nexport async function signBytes(\r\n  transport: Transport,\r\n  bytes: Buffer,\r\n  derivationPath: Buffer = getSolanaDerivationPath(),\r\n) {\r\n  const numPaths = Buffer.alloc(1);\r\n  numPaths.writeUInt8(1, 0);\r\n\r\n  const payload = Buffer.concat([numPaths, derivationPath, bytes]);\r\n\r\n  // @FIXME: must enable blind signing in Solana Ledger App per https://github.com/project-serum/spl-token-wallet/issues/71\r\n  // See also https://github.com/project-serum/spl-token-wallet/pull/23#issuecomment-712317053\r\n  return ledgerSend(transport, INS_SIGN_MESSAGE, P1_CONFIRM, payload);\r\n}\r\n\r\nexport async function getPublicKey(\r\n  transport: Transport,\r\n  derivationPath: Buffer = getSolanaDerivationPath(),\r\n) {\r\n  const publicKeyBytes = await ledgerSend(\r\n    transport,\r\n    INS_GET_PUBKEY,\r\n    P1_NON_CONFIRM,\r\n    derivationPath,\r\n  );\r\n\r\n  return new PublicKey(publicKeyBytes);\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo1.30b8e744.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.3cdaf3a1.svg\";","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport BN from 'bn.js';\r\n\r\nexport function isValidPublicKey(key) {\r\n  if (!key) {\r\n    return false;\r\n  }\r\n  try {\r\n    new PublicKey(key);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport const percentFormat = new Intl.NumberFormat(undefined, {\r\n  style: 'percent',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport function floorToDecimal(\r\n  value: number,\r\n  decimals: number | undefined | null,\r\n) {\r\n  return decimals\r\n    ? Math.floor(value * 10 ** decimals) / 10 ** decimals\r\n    : Math.floor(value);\r\n}\r\n\r\nexport function roundToDecimal(\r\n  value: number,\r\n  decimals: number | undefined | null,\r\n) {\r\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\r\n}\r\n\r\nexport function getDecimalCount(value): number {\r\n  if (\r\n    !isNaN(value) &&\r\n    Math.floor(value) !== value &&\r\n    value.toString().includes('.')\r\n  )\r\n    return value.toString().split('.')[1].length || 0;\r\n  if (\r\n    !isNaN(value) &&\r\n    Math.floor(value) !== value &&\r\n    value.toString().includes('e')\r\n  )\r\n    return parseInt(value.toString().split('e-')[1] || '0');\r\n  return 0;\r\n}\r\n\r\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\r\n  const quotient = numerator.div(denominator).toNumber();\r\n  const rem = numerator.umod(denominator);\r\n  const gcd = rem.gcd(denominator);\r\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\r\n}\r\n\r\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\r\n  return new BN(10).pow(new BN(decimals));\r\n}\r\n\r\nconst localStorageListeners = {};\r\n\r\nexport function useLocalStorageStringState(\r\n  key: string,\r\n  defaultState: string | null = null,\r\n): [string | null, (newState: string | null) => void] {\r\n  const state = localStorage.getItem(key) || defaultState;\r\n\r\n  const [, notify] = useState(key + '\\n' + state);\r\n\r\n  useEffect(() => {\r\n    if (!localStorageListeners[key]) {\r\n      localStorageListeners[key] = [];\r\n    }\r\n    localStorageListeners[key].push(notify);\r\n    return () => {\r\n      localStorageListeners[key] = localStorageListeners[key].filter(\r\n        (listener) => listener !== notify,\r\n      );\r\n      if (localStorageListeners[key].length === 0) {\r\n        delete localStorageListeners[key];\r\n      }\r\n    };\r\n  }, [key]);\r\n\r\n  const setState = useCallback<(newState: string | null) => void>(\r\n    (newState) => {\r\n      const changed = state !== newState;\r\n      if (!changed) {\r\n        return;\r\n      }\r\n\r\n      if (newState === null) {\r\n        localStorage.removeItem(key);\r\n      } else {\r\n        localStorage.setItem(key, newState);\r\n      }\r\n      localStorageListeners[key].forEach((listener) =>\r\n        listener(key + '\\n' + newState),\r\n      );\r\n    },\r\n    [state, key],\r\n  );\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport function useLocalStorageState<T = any>(\r\n  key: string,\r\n  defaultState: T | null = null,\r\n): [T, (newState: T) => void] {\r\n  let [stringState, setStringState] = useLocalStorageStringState(\r\n    key,\r\n    JSON.stringify(defaultState),\r\n  );\r\n  return [\r\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\r\n    (newState) => setStringState(JSON.stringify(newState)),\r\n  ];\r\n}\r\n\r\nexport function useEffectAfterTimeout(effect, timeout) {\r\n  useEffect(() => {\r\n    const handle = setTimeout(effect, timeout);\r\n    return () => clearTimeout(handle);\r\n  });\r\n}\r\n\r\nexport function useListener(emitter, eventName) {\r\n  const [, forceUpdate] = useState(0);\r\n  useEffect(() => {\r\n    const listener = () => forceUpdate((i) => i + 1);\r\n    emitter.on(eventName, listener);\r\n    return () => emitter.removeListener(eventName, listener);\r\n  }, [emitter, eventName]);\r\n}\r\n\r\nexport function abbreviateAddress(address: PublicKey, size = 4) {\r\n  const base58 = address.toBase58();\r\n  return base58.slice(0, size) + '…' + base58.slice(-size);\r\n}\r\n\r\nexport function isEqual(obj1, obj2, keys) {\r\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n    return false;\r\n  }\r\n  keys = keys || Object.keys(obj1);\r\n  for (const k of keys) {\r\n    if (obj1[k] !== obj2[k]) {\r\n      // shallow comparison\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function flatten(obj, { prefix = '', restrictTo }) {\r\n  let restrict = restrictTo;\r\n  if (restrict) {\r\n    restrict = restrict.filter((k) => obj.hasOwnProperty(k));\r\n  }\r\n  const result = {};\r\n  (function recurse(obj, current, keys) {\r\n    (keys || Object.keys(obj)).forEach((key) => {\r\n      const value = obj[key];\r\n      const newKey = current ? current + '.' + key : key; // joined key with dot\r\n      if (value && typeof value === 'object') {\r\n        // @ts-ignore\r\n        recurse(value, newKey); // nested object\r\n      } else {\r\n        result[newKey] = value;\r\n      }\r\n    });\r\n  })(obj, prefix, restrict);\r\n  return result;\r\n}\r\n","import { useEffect, useReducer } from 'react';\r\n\r\nimport assert from 'assert';\r\n\r\nconst pageLoadTime = new Date();\r\n\r\nconst globalCache: Map<any, any> = new Map();\r\n\r\nclass FetchLoopListener<T = any> {\r\n  cacheKey: any;\r\n  fn: () => Promise<T>;\r\n  refreshInterval: number;\r\n  refreshIntervalOnError: number | null;\r\n  callback: () => void;\r\n  cacheNullValues: Boolean = true;\r\n\r\n  constructor(\r\n    cacheKey: any,\r\n    fn: () => Promise<T>,\r\n    refreshInterval: number,\r\n    refreshIntervalOnError: number | null,\r\n    callback: () => void,\r\n    cacheNullValues: Boolean,\r\n  ) {\r\n    this.cacheKey = cacheKey;\r\n    this.fn = fn;\r\n    this.refreshInterval = refreshInterval;\r\n    this.refreshIntervalOnError = refreshIntervalOnError;\r\n    this.callback = callback;\r\n    this.cacheNullValues = cacheNullValues;\r\n  }\r\n}\r\n\r\nclass FetchLoopInternal<T = any> {\r\n  cacheKey: any;\r\n  fn: () => Promise<T>;\r\n  timeoutId: null | any;\r\n  listeners: Set<FetchLoopListener<T>>;\r\n  errors: number;\r\n  cacheNullValues: Boolean = true;\r\n\r\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\r\n    this.cacheKey = cacheKey;\r\n    this.fn = fn;\r\n    this.timeoutId = null;\r\n    this.listeners = new Set();\r\n    this.errors = 0;\r\n    this.cacheNullValues = cacheNullValues;\r\n  }\r\n\r\n  get refreshInterval(): number {\r\n    return Math.min(\r\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\r\n    );\r\n  }\r\n\r\n  get refreshIntervalOnError(): number | null {\r\n    const refreshIntervalsOnError: number[] = [...this.listeners]\r\n      .map((listener) => listener.refreshIntervalOnError)\r\n      .filter((x): x is number => x !== null);\r\n    if (refreshIntervalsOnError.length === 0) {\r\n      return null;\r\n    }\r\n    return Math.min(...refreshIntervalsOnError);\r\n  }\r\n\r\n  get stopped(): boolean {\r\n    return this.listeners.size === 0;\r\n  }\r\n\r\n  addListener(listener: FetchLoopListener<T>): void {\r\n    const previousRefreshInterval = this.refreshInterval;\r\n    this.listeners.add(listener);\r\n    if (this.refreshInterval < previousRefreshInterval) {\r\n      this.refresh();\r\n    }\r\n  }\r\n\r\n  removeListener(listener: FetchLoopListener<T>): void {\r\n    assert(this.listeners.delete(listener));\r\n    if (this.stopped) {\r\n      if (this.timeoutId) {\r\n        clearTimeout(this.timeoutId);\r\n        this.timeoutId = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  notifyListeners(): void {\r\n    this.listeners.forEach((listener) => listener.callback());\r\n  }\r\n\r\n  refresh = async () => {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n      this.timeoutId = null;\r\n    }\r\n    if (this.stopped) {\r\n      return;\r\n    }\r\n\r\n    let errored = false;\r\n    try {\r\n      const data = await this.fn();\r\n      if (!this.cacheNullValues && data === null) {\r\n        console.log(`Not caching null value for ${this.cacheKey}`);\r\n        // cached data has not changed so no need to re-render\r\n        this.errors = 0;\r\n        return data;\r\n      } else {\r\n        globalCache.set(this.cacheKey, data);\r\n        this.errors = 0;\r\n        this.notifyListeners();\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      ++this.errors;\r\n      console.warn(error);\r\n      errored = true;\r\n    } finally {\r\n      if (!this.timeoutId && !this.stopped) {\r\n        let waitTime = this.refreshInterval;\r\n        if (\r\n          errored &&\r\n          this.refreshIntervalOnError &&\r\n          this.refreshIntervalOnError > 0\r\n        ) {\r\n          waitTime = this.refreshIntervalOnError;\r\n        }\r\n\r\n        // Back off on errors.\r\n        if (this.errors > 0) {\r\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\r\n        }\r\n\r\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\r\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\r\n        if (timeSincePageLoad < 5000) {\r\n          waitTime += 5000 - timeSincePageLoad / 2;\r\n        }\r\n\r\n        // Refresh background pages slowly.\r\n        if (document.visibilityState === 'hidden') {\r\n          waitTime = 60000;\r\n        } else if (!document.hasFocus()) {\r\n          waitTime *= 1.5;\r\n        }\r\n\r\n        // Add jitter so we don't send all requests at the same time.\r\n        waitTime *= 0.8 + 0.4 * Math.random();\r\n\r\n        this.timeoutId = setTimeout(this.refresh, waitTime);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nclass FetchLoops {\r\n  loops = new Map();\r\n\r\n  addListener<T>(listener: FetchLoopListener<T>) {\r\n    if (!this.loops.has(listener.cacheKey)) {\r\n      this.loops.set(\r\n        listener.cacheKey,\r\n        new FetchLoopInternal<T>(\r\n          listener.cacheKey,\r\n          listener.fn,\r\n          listener.cacheNullValues,\r\n        ),\r\n      );\r\n    }\r\n    this.loops.get(listener.cacheKey).addListener(listener);\r\n  }\r\n\r\n  removeListener<T>(listener: FetchLoopListener<T>) {\r\n    const loop = this.loops.get(listener.cacheKey);\r\n    loop.removeListener(listener);\r\n    if (loop.stopped) {\r\n      this.loops.delete(listener.cacheKey);\r\n      globalCache.delete(listener.cacheKey);\r\n    }\r\n  }\r\n\r\n  refresh(cacheKey) {\r\n    if (this.loops.has(cacheKey)) {\r\n      this.loops.get(cacheKey).refresh();\r\n    }\r\n  }\r\n\r\n  refreshAll() {\r\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\r\n  }\r\n}\r\nconst globalLoops = new FetchLoops();\r\n\r\nexport function useAsyncData<T = any>(\r\n  asyncFn: () => Promise<T>,\r\n  cacheKey: any,\r\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\r\n  cacheNullValues: Boolean = true,\r\n): [null | undefined | T, boolean] {\r\n  const [, rerender] = useReducer((i) => i + 1, 0);\r\n\r\n  useEffect(() => {\r\n    if (!cacheKey) {\r\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n      return () => {};\r\n    }\r\n    const listener = new FetchLoopListener<T>(\r\n      cacheKey,\r\n      asyncFn,\r\n      refreshInterval,\r\n      refreshIntervalOnError,\r\n      rerender,\r\n      cacheNullValues,\r\n    );\r\n    globalLoops.addListener(listener);\r\n    return () => globalLoops.removeListener(listener);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cacheKey, refreshInterval]);\r\n\r\n  if (!cacheKey) {\r\n    return [null, false];\r\n  }\r\n\r\n  const loaded = globalCache.has(cacheKey);\r\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\r\n  return [data, loaded];\r\n}\r\n\r\nexport function refreshCache(cacheKey: any, clearCache = false): void {\r\n  if (clearCache) {\r\n    globalCache.delete(cacheKey);\r\n  }\r\n  const loop = globalLoops.loops.get(cacheKey);\r\n  if (loop) {\r\n    loop.refresh();\r\n    if (clearCache) {\r\n      loop.notifyListeners();\r\n    }\r\n  }\r\n}\r\n\r\nexport function refreshAllCaches(): void {\r\n  for (const loop of globalLoops.loops.values()) {\r\n    loop.refresh();\r\n  }\r\n}\r\n\r\nexport function setCache(\r\n  cacheKey: any,\r\n  value: any,\r\n  { initializeOnly = false } = {},\r\n): void {\r\n  if (initializeOnly && globalCache.has(cacheKey)) {\r\n    return;\r\n  }\r\n  globalCache.set(cacheKey, value);\r\n  const loop = globalLoops.loops.get(cacheKey);\r\n  if (loop) {\r\n    loop.notifyListeners();\r\n  }\r\n}\r\n\r\nexport function getCache(\r\n  cacheKey: any\r\n) {\r\n  return globalCache.get(cacheKey);\r\n}\r\n","import { useLocalStorageState } from './utils';\r\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\r\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\r\nimport { setCache, useAsyncData } from './fetch-loop';\r\nimport tuple from 'immutable-tuple';\r\nimport { ConnectionContextValues, EndpointInfo } from './types';\r\n\r\n\r\nexport const endpoints = [\r\n  { url: 'https://raydium.rpcpool.com', weight: 75 },\r\n  { url: 'https://solana-api.projectserum.com', weight: 25 }\r\n]\r\n\r\nexport function getRandomEndpoint() {\r\n  let pointer = 0\r\n  const random = Math.random() * 100\r\n  let api = endpoints[0].url\r\n\r\n  for (const endpoint of endpoints) {\r\n    if (random > pointer + endpoint.weight) {\r\n      pointer += pointer + endpoint.weight\r\n    } else if (random >= pointer && random < pointer + endpoint.weight) {\r\n      api = endpoint.url\r\n      break\r\n    } else {\r\n      api = endpoint.url\r\n      break\r\n    }\r\n  }\r\n\r\n  return api\r\n}\r\n\r\nexport const ENDPOINTS: EndpointInfo[] = [\r\n  {\r\n    name: 'mainnet-beta',\r\n    // endpoint: 'https://solana-api.projectserum.com',\r\n    endpoint: getRandomEndpoint(),\r\n    custom: false,\r\n  },\r\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\r\n];\r\n\r\nconst accountListenerCount = new Map();\r\n\r\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\r\n  null,\r\n);\r\n\r\nexport function ConnectionProvider({ children }) {\r\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\r\n    'connectionEndpts',\r\n    ENDPOINTS[0].endpoint,\r\n  );\r\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\r\n    EndpointInfo[]\r\n  >('customConnectionEndpoints', []);\r\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\r\n\r\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\r\n    endpoint,\r\n  ]);\r\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\r\n    endpoint,\r\n  ]);\r\n\r\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\r\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\r\n  // This is a hack to prevent the list from every getting empty\r\n  useEffect(() => {\r\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\r\n    return () => {\r\n      connection.removeAccountChangeListener(id);\r\n    };\r\n  }, [connection]);\r\n\r\n  useEffect(() => {\r\n    const id = connection.onSlotChange(() => null);\r\n    return () => {\r\n      connection.removeSlotChangeListener(id);\r\n    };\r\n  }, [connection]);\r\n\r\n  useEffect(() => {\r\n    const id = sendConnection.onAccountChange(\r\n      new Account().publicKey,\r\n      () => {},\r\n    );\r\n    return () => {\r\n      sendConnection.removeAccountChangeListener(id);\r\n    };\r\n  }, [sendConnection]);\r\n\r\n  useEffect(() => {\r\n    const id = sendConnection.onSlotChange(() => null);\r\n    return () => {\r\n      sendConnection.removeSlotChangeListener(id);\r\n    };\r\n  }, [sendConnection]);\r\n\r\n  return (\r\n    <ConnectionContext.Provider\r\n      value={{\r\n        endpoint,\r\n        setEndpoint,\r\n        connection,\r\n        sendConnection,\r\n        availableEndpoints,\r\n        setCustomEndpoints,\r\n      }}\r\n    >\r\n      {children}\r\n    </ConnectionContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useConnection() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return context.connection;\r\n}\r\n\r\nexport function useSendConnection() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return context.sendConnection;\r\n}\r\n\r\nexport function useConnectionConfig() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return {\r\n    endpoint: context.endpoint,\r\n    endpointInfo: context.availableEndpoints.find(\r\n      (info) => info.endpoint === context.endpoint,\r\n    ),\r\n    setEndpoint: context.setEndpoint,\r\n    availableEndpoints: context.availableEndpoints,\r\n    setCustomEndpoints: context.setCustomEndpoints,\r\n  };\r\n}\r\n\r\nexport function useAccountInfo(\r\n  publicKey: PublicKey | undefined | null,\r\n): [AccountInfo<Buffer> | null | undefined, boolean] {\r\n  const connection = useConnection();\r\n  const cacheKey = tuple(connection, publicKey?.toBase58());\r\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\r\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\r\n    cacheKey,\r\n    { refreshInterval: 60_000 },\r\n  );\r\n  useEffect(() => {\r\n    if (!publicKey) {\r\n      return;\r\n    }\r\n    if (accountListenerCount.has(cacheKey)) {\r\n      let currentItem = accountListenerCount.get(cacheKey);\r\n      ++currentItem.count;\r\n    } else {\r\n      let previousInfo: AccountInfo<Buffer> | null = null;\r\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\r\n        if (\r\n          !previousInfo ||\r\n          !previousInfo.data.equals(info.data) ||\r\n          previousInfo.lamports !== info.lamports\r\n        ) {\r\n          previousInfo = info;\r\n          setCache(cacheKey, info);\r\n        }\r\n      });\r\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\r\n    }\r\n    return () => {\r\n      let currentItem = accountListenerCount.get(cacheKey);\r\n      let nextCount = currentItem.count - 1;\r\n      if (nextCount <= 0) {\r\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\r\n        accountListenerCount.delete(cacheKey);\r\n      } else {\r\n        --currentItem.count;\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cacheKey]);\r\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\r\n  if (\r\n    !accountInfo ||\r\n    !previousInfoRef.current ||\r\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\r\n    previousInfoRef.current.lamports !== accountInfo.lamports\r\n  ) {\r\n    previousInfoRef.current = accountInfo;\r\n  }\r\n  return [previousInfoRef.current, loaded];\r\n}\r\n\r\nexport function useAccountData(publicKey) {\r\n  const [accountInfo] = useAccountInfo(publicKey);\r\n  return accountInfo && accountInfo.data;\r\n}\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nexport default function Link({ external = false, ...props }) {\r\n  let { to, children, ...rest } = props;\r\n  if (external) {\r\n    return (\r\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\r\n        {children}\r\n      </a>\r\n    );\r\n  }\r\n  return (\r\n    <RouterLink to={to} {...rest}>\r\n      {children}\r\n    </RouterLink>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport Link from '../components/Link';\r\n\r\nexport function notify({\r\n  message,\r\n  description,\r\n  txid,\r\n  type = 'info',\r\n  placement = 'bottomLeft',\r\n}: {\r\n  message: string;\r\n  description?: string | JSX.Element;\r\n  txid?: string;\r\n  type?: string;\r\n  placement?: string;\r\n}) {\r\n  if (txid) {\r\n    description = (\r\n      <Link\r\n        external\r\n        to={'https://explorer.solana.com/tx/' + txid}\r\n        style={{ color: '#0000ff' }}\r\n      >\r\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\r\n      </Link>\r\n    );\r\n  }\r\n  notification[type]({\r\n    message: <span style={{ color: 'black' }}>{message}</span>,\r\n    description: (\r\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\r\n    ),\r\n    placement,\r\n    style: {\r\n      backgroundColor: 'white',\r\n    },\r\n  });\r\n}\r\n","import { PublicKey, Transaction } from '@solana/web3.js';\r\n\r\nexport const DEFAULT_PUBLIC_KEY = new PublicKey(\r\n  '11111111111111111111111111111111',\r\n);\r\n\r\nexport interface WalletAdapter {\r\n  publicKey: PublicKey;\r\n  autoApprove: boolean;\r\n  connected: boolean;\r\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\r\n  signAllTransactions: (transaction: Transaction[]) => Promise<Transaction[]>;\r\n  connect: () => any;\r\n  disconnect: () => any;\r\n  on<T>(event: string, fn: () => void): this;\r\n}\r\n","import type Transport from '@ledgerhq/hw-transport';\r\nimport type { Transaction } from '@solana/web3.js';\r\n\r\nimport EventEmitter from 'eventemitter3';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport TransportWebUSB from '@ledgerhq/hw-transport-webusb';\r\nimport { notify } from '../../utils/notifications';\r\nimport { getPublicKey, signTransaction } from './core';\r\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\r\n\r\nexport class LedgerWalletAdapter extends EventEmitter implements WalletAdapter {\r\n  _connecting: boolean;\r\n  _publicKey: PublicKey | null;\r\n  _transport: Transport | null;\r\n\r\n  constructor() {\r\n    super();\r\n    this._connecting = false;\r\n    this._publicKey = null;\r\n    this._transport = null;\r\n  }\r\n\r\n  get publicKey() {\r\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\r\n  }\r\n\r\n  get connected() {\r\n    return this._publicKey !== null;\r\n  }\r\n\r\n  get autoApprove() {\r\n    return false;\r\n  }\r\n\r\n  public async signAllTransactions(\r\n    transactions: Transaction[],\r\n  ): Promise<Transaction[]> {\r\n    const result: Transaction[] = [];\r\n    for (let i = 0; i < transactions.length; i++) {\r\n      const transaction = transactions[i];\r\n      const signed = await this.signTransaction(transaction);\r\n      result.push(signed);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  async signTransaction(transaction: Transaction) {\r\n    if (!this._transport || !this._publicKey) {\r\n      throw new Error('Not connected to Ledger');\r\n    }\r\n\r\n    // @TODO: account selection (derivation path changes with account)\r\n    const signature = await signTransaction(this._transport, transaction);\r\n\r\n    transaction.addSignature(this._publicKey, signature);\r\n\r\n    return transaction;\r\n  }\r\n\r\n  async connect() {\r\n    if (this._connecting) {\r\n      return;\r\n    }\r\n\r\n    this._connecting = true;\r\n\r\n    try {\r\n      // @TODO: transport selection (WebUSB, WebHID, bluetooth, ...)\r\n      this._transport = await TransportWebUSB.create();\r\n      // @TODO: account selection\r\n      this._publicKey = await getPublicKey(this._transport);\r\n      this.emit('connect', this._publicKey);\r\n    } catch (error) {\r\n      notify({\r\n        message: 'Ledger Error',\r\n        description: error.message,\r\n      });\r\n      await this.disconnect();\r\n    } finally {\r\n      this._connecting = false;\r\n    }\r\n  }\r\n\r\n  async disconnect() {\r\n    let emit = false;\r\n    if (this._transport) {\r\n      await this._transport.close();\r\n      this._transport = null;\r\n      emit = true;\r\n    }\r\n\r\n    this._connecting = false;\r\n    this._publicKey = null;\r\n\r\n    if (emit) {\r\n      this.emit('disconnect');\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport { PublicKey, Transaction } from '@solana/web3.js';\r\nimport { notify } from '../../utils/notifications';\r\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\r\n\r\nexport class SolongWalletAdapter extends EventEmitter implements WalletAdapter {\r\n  _publicKey?: PublicKey;\r\n  _onProcess: boolean;\r\n  _connected: boolean;\r\n  constructor() {\r\n    super();\r\n    this._onProcess = false;\r\n    this._connected = false;\r\n    this.connect = this.connect.bind(this);\r\n  }\r\n\r\n  get connected() {\r\n    return this._connected;\r\n  }\r\n\r\n  get autoApprove() {\r\n    return false;\r\n  }\r\n\r\n  public async signAllTransactions(\r\n    transactions: Transaction[],\r\n  ): Promise<Transaction[]> {\r\n    const solong = (window as any).solong;\r\n    if (solong.signAllTransactions) {\r\n      return solong.signAllTransactions(transactions);\r\n    } else {\r\n      const result: Transaction[] = [];\r\n      for (let i = 0; i < transactions.length; i++) {\r\n        const transaction = transactions[i];\r\n        const signed = await solong.signTransaction(transaction);\r\n        result.push(signed);\r\n      }\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  get publicKey() {\r\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\r\n  }\r\n\r\n  async signTransaction(transaction: Transaction) {\r\n    return (window as any).solong.signTransaction(transaction);\r\n  }\r\n\r\n  connect() {\r\n    if (this._onProcess) {\r\n      return;\r\n    }\r\n\r\n    if ((window as any).solong === undefined) {\r\n      notify({\r\n        message: 'Solong Error',\r\n        description: 'Please install solong wallet from Chrome ',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this._onProcess = true;\r\n    (window as any).solong\r\n      .selectAccount()\r\n      .then((account: any) => {\r\n        this._publicKey = new PublicKey(account);\r\n        this._connected = true;\r\n        this.emit('connect', this._publicKey);\r\n      })\r\n      .catch(() => {\r\n        this.disconnect();\r\n      })\r\n      .finally(() => {\r\n        this._onProcess = false;\r\n      });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._publicKey) {\r\n      this._publicKey = undefined;\r\n      this._connected = false;\r\n      this.emit('disconnect');\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport { PublicKey, Transaction } from '@solana/web3.js';\r\nimport { notify } from '../../utils/notifications';\r\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\r\n\r\ntype PhantomEvent = 'disconnect' | 'connect';\r\ntype PhantomRequestMethod =\r\n  | 'connect'\r\n  | 'disconnect'\r\n  | 'signTransaction'\r\n  | 'signAllTransactions';\r\n\r\ninterface PhantomProvider {\r\n  publicKey?: PublicKey;\r\n  isConnected?: boolean;\r\n  autoApprove?: boolean;\r\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\r\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\r\n  connect: () => Promise<void>;\r\n  disconnect: () => Promise<void>;\r\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\r\n  request: (method: PhantomRequestMethod, params: any) => Promise<any>;\r\n  listeners: (event: PhantomEvent) => (() => void)[];\r\n}\r\n\r\nexport class PhantomWalletAdapter\r\n  extends EventEmitter\r\n  implements WalletAdapter {\r\n  constructor() {\r\n    super();\r\n    this.connect = this.connect.bind(this);\r\n  }\r\n\r\n  private get _provider(): PhantomProvider | undefined {\r\n    if ((window as any)?.solana?.isPhantom) {\r\n      return (window as any).solana;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private _handleConnect = (...args) => {\r\n    this.emit('connect', ...args);\r\n  }\r\n\r\n  private _handleDisconnect = (...args) => {\r\n    this.emit('disconnect', ...args);\r\n  }\r\n\r\n  get connected() {\r\n    return this._provider?.isConnected || false;\r\n  }\r\n\r\n  get autoApprove() {\r\n    return this._provider?.autoApprove || false;\r\n  }\r\n\r\n  async signAllTransactions(\r\n    transactions: Transaction[],\r\n  ): Promise<Transaction[]> {\r\n    if (!this._provider) {\r\n      return transactions;\r\n    }\r\n\r\n    return this._provider.signAllTransactions(transactions);\r\n  }\r\n\r\n  get publicKey() {\r\n    return this._provider?.publicKey || DEFAULT_PUBLIC_KEY;\r\n  }\r\n\r\n  async signTransaction(transaction: Transaction) {\r\n    if (!this._provider) {\r\n      return transaction;\r\n    }\r\n\r\n    return this._provider.signTransaction(transaction);\r\n  }\r\n\r\n  connect() {\r\n    if (!this._provider) {\r\n      window.open('https://phantom.app/', '_blank');\r\n      notify({\r\n        message: 'Connection Error',\r\n        description: 'Please install Phantom wallet',\r\n      });\r\n      return;\r\n    }\r\n    if (!this._provider.listeners('connect').length) {\r\n      this._provider?.on('connect', this._handleConnect);\r\n    }\r\n    if (!this._provider.listeners('disconnect').length) {\r\n      this._provider?.on('disconnect', this._handleDisconnect);\r\n    }\r\n    return this._provider?.connect();\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._provider) {\r\n      this._provider.disconnect();\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport { PublicKey, Transaction } from '@solana/web3.js';\r\nimport { notify } from '../../utils/notifications';\r\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\r\n\r\nexport class MathWalletAdapter extends EventEmitter implements WalletAdapter {\r\n  _publicKey?: PublicKey;\r\n  _onProcess: boolean;\r\n  _connected: boolean;\r\n  constructor() {\r\n    super();\r\n    this._onProcess = false;\r\n    this._connected = false;\r\n    this.connect = this.connect.bind(this);\r\n  }\r\n\r\n  get connected() {\r\n    return this._connected;\r\n  }\r\n\r\n  get autoApprove() {\r\n    return false;\r\n  }\r\n\r\n  public async signAllTransactions(\r\n    transactions: Transaction[],\r\n  ): Promise<Transaction[]> {\r\n    if (!this._provider) {\r\n      return transactions;\r\n    }\r\n\r\n    return this._provider.signAllTransactions(transactions);\r\n  }\r\n\r\n  private get _provider() {\r\n    if ((window as any)?.solana?.isMathWallet) {\r\n      return (window as any).solana;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get publicKey() {\r\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\r\n  }\r\n\r\n  async signTransaction(transaction: Transaction) {\r\n    if (!this._provider) {\r\n      return transaction;\r\n    }\r\n\r\n    return this._provider.signTransaction(transaction);\r\n  }\r\n\r\n  connect() {\r\n    if (this._onProcess) {\r\n      return;\r\n    }\r\n\r\n    if (!this._provider) {\r\n      window.open('https://mathwallet.org/', '_blank');\r\n      notify({\r\n        message: 'Math Wallet Error',\r\n        description: 'Please install mathwallet',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this._onProcess = true;\r\n    this._provider\r\n      .getAccount()\r\n      .then((account: any) => {\r\n        this._publicKey = new PublicKey(account);\r\n        this._connected = true;\r\n        this.emit('connect', this._publicKey);\r\n      })\r\n      .catch(() => {\r\n        this.disconnect();\r\n      })\r\n      .finally(() => {\r\n        this._onProcess = false;\r\n      });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._publicKey) {\r\n      this._publicKey = undefined;\r\n      this._connected = false;\r\n      this.emit('disconnect');\r\n    }\r\n  }\r\n}\r\n","// import React, { useContext, useEffect, useMemo, useState } from 'react';\r\n// import Wallet from '@project-serum/sol-wallet-adapter';\r\n// import { notify } from './notifications';\r\n// import { useConnectionConfig } from './connection';\r\n// import { useLocalStorageState } from './utils';\r\n// import { WalletContextValues } from './types';\r\n\r\n// export const WALLET_PROVIDERS = [\r\n//   { name: 'sollet.io', url: 'https://www.sollet.io' },\r\n// ];\r\n\r\n// const WalletContext = React.createContext<null | WalletContextValues>(null);\r\n\r\n// export function WalletProvider({ children }) {\r\n//   const { endpoint } = useConnectionConfig();\r\n\r\n//   const [savedProviderUrl, setProviderUrl] = useLocalStorageState(\r\n//     'walletProvider',\r\n//     'https://www.sollet.io',\r\n//   );\r\n//   let providerUrl;\r\n//   if (!savedProviderUrl) {\r\n//     providerUrl = 'https://www.sollet.io';\r\n//   } else {\r\n//     providerUrl = savedProviderUrl;\r\n//   }\r\n\r\n//   const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\r\n//     providerUrl,\r\n//     endpoint,\r\n//   ]);\r\n\r\n//   const [connected, setConnected] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     console.log('trying to connect');\r\n//     wallet.on('connect', () => {\r\n//       console.log('connected');\r\n//       localStorage.removeItem('feeDiscountKey')\r\n//       setConnected(true);\r\n//       let walletPublicKey = wallet.publicKey.toBase58();\r\n//       let keyToDisplay =\r\n//         walletPublicKey.length > 20\r\n//           ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\r\n//               walletPublicKey.length - 7,\r\n//               walletPublicKey.length,\r\n//             )}`\r\n//           : walletPublicKey;\r\n//       notify({\r\n//         message: 'Wallet update',\r\n//         description: 'Connected to wallet ' + keyToDisplay,\r\n//       });\r\n//     });\r\n//     wallet.on('disconnect', () => {\r\n//       setConnected(false);\r\n//       notify({\r\n//         message: 'Wallet update',\r\n//         description: 'Disconnected from wallet',\r\n//       });\r\n//       localStorage.removeItem('feeDiscountKey')\r\n//     });\r\n//     return () => {\r\n//       wallet.disconnect();\r\n//       setConnected(false);\r\n//     };\r\n//   }, [wallet]);\r\n\r\n//   return (\r\n//     <WalletContext.Provider\r\n//       value={{\r\n//         wallet,\r\n//         connected,\r\n//         providerUrl,\r\n//         setProviderUrl,\r\n//         providerName:\r\n//           WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\r\n//           providerUrl,\r\n//       }}\r\n//     >\r\n//       {children}\r\n//     </WalletContext.Provider>\r\n//   );\r\n// }\r\n\r\n// export function useWallet() {\r\n//   const context = useContext(WalletContext);\r\n//   if (!context) {\r\n//     throw new Error('Missing wallet context');\r\n//   }\r\n//   return {\r\n//     connected: context.connected,\r\n//     wallet: context.wallet,\r\n//     providerUrl: context.providerUrl,\r\n//     setProvider: context.setProviderUrl,\r\n//     providerName: context.providerName,\r\n//   };\r\n// }\r\n\r\n\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport Wallet from '@project-serum/sol-wallet-adapter';\r\nimport { notify } from './notifications';\r\nimport { useConnectionConfig } from './connection';\r\nimport { useLocalStorageState } from './utils';\r\nimport { WalletContextValues } from './types';\r\nimport { Button, Modal } from 'antd';\r\nimport {\r\n  WalletAdapter,\r\n  LedgerWalletAdapter,\r\n  SolongWalletAdapter,\r\n  PhantomWalletAdapter,\r\n  SolletExtensionAdapter,\r\n  MathWalletAdapter,\r\n} from '../wallet-adapters';\r\n\r\nconst ASSET_URL =\r\n  'https://cdn.jsdelivr.net/gh/solana-labs/oyster@main/assets/wallets';\r\nexport const WALLET_PROVIDERS = [\r\n  {\r\n    name: 'sollet.io',\r\n    url: 'https://www.sollet.io',\r\n    icon: `${ASSET_URL}/sollet.svg`,\r\n  },\r\n  {\r\n    name: 'Sollet Extension',\r\n    url: 'https://www.sollet.io/extension',\r\n    icon: `${ASSET_URL}/sollet.svg`,\r\n    adapter: SolletExtensionAdapter as any,\r\n  },\r\n  {\r\n    name: 'Ledger',\r\n    url: 'https://www.ledger.com',\r\n    icon: `${ASSET_URL}/ledger.svg`,\r\n    adapter: LedgerWalletAdapter,\r\n  },\r\n  {\r\n    name: 'Solong',\r\n    url: 'https://www.solong.com',\r\n    icon: `${ASSET_URL}/solong.png`,\r\n    adapter: SolongWalletAdapter,\r\n  },\r\n  {\r\n    name: 'Phantom',\r\n    url: 'https://www.phantom.app',\r\n    icon: `https://www.phantom.app/img/logo.png`,\r\n    adapter: PhantomWalletAdapter,\r\n  },\r\n  {\r\n    name: 'MathWallet',\r\n    url: 'https://www.mathwallet.org',\r\n    icon: `${ASSET_URL}/mathwallet.svg`,\r\n    adapter: MathWalletAdapter,\r\n  }\r\n];\r\n\r\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\r\n\r\nexport function WalletProvider({ children }) {\r\n  const { endpoint } = useConnectionConfig();\r\n\r\n  const [autoConnect, setAutoConnect] = useState(false);\r\n  const [providerUrl, setProviderUrl] = useLocalStorageState('walletProvider');\r\n\r\n  const provider = useMemo(\r\n    () => WALLET_PROVIDERS.find(({ url }) => url === providerUrl),\r\n    [providerUrl],\r\n  );\r\n\r\n  let [wallet, setWallet] = useState<WalletAdapter|undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    if (provider) {\r\n      const updateWallet = () => {\r\n        // hack to also update wallet synchronously in case it disconnects\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        wallet = new (provider.adapter || Wallet)(\r\n          providerUrl,\r\n          endpoint,\r\n        ) as WalletAdapter;\r\n        setWallet(wallet);\r\n      }\r\n\r\n      if (document.readyState !== 'complete') {\r\n        // wait to ensure that browser extensions are loaded\r\n        const listener = () => {\r\n          updateWallet();\r\n          window.removeEventListener('load', listener);\r\n        };\r\n        window.addEventListener('load', listener);\r\n        return () => window.removeEventListener('load', listener);\r\n      } else {\r\n        updateWallet();\r\n      }\r\n    }\r\n  }, [provider, providerUrl, endpoint]);\r\n\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (wallet) {\r\n      wallet.on('connect', () => {\r\n        if (wallet?.publicKey) {\r\n          console.log('connected');\r\n          localStorage.removeItem('feeDiscountKey');\r\n          setConnected(true);\r\n          const walletPublicKey = wallet.publicKey.toBase58();\r\n          const keyToDisplay =\r\n            walletPublicKey.length > 20\r\n              ? `${walletPublicKey.substring(\r\n                  0,\r\n                  7,\r\n                )}.....${walletPublicKey.substring(\r\n                  walletPublicKey.length - 7,\r\n                  walletPublicKey.length,\r\n                )}`\r\n              : walletPublicKey;\r\n\r\n          notify({\r\n            message: 'Wallet update',\r\n            description: 'Connected to wallet ' + keyToDisplay,\r\n          });\r\n        }\r\n      });\r\n\r\n      wallet.on('disconnect', () => {\r\n        setConnected(false);\r\n        notify({\r\n          message: 'Wallet update',\r\n          description: 'Disconnected from wallet',\r\n        });\r\n        localStorage.removeItem('feeDiscountKey');\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      setConnected(false);\r\n      if (wallet && wallet.connected) {\r\n        wallet.disconnect();\r\n        setConnected(false);\r\n      }\r\n    };\r\n  }, [wallet]);\r\n\r\n  useEffect(() => {\r\n    if (wallet && autoConnect) {\r\n      wallet.connect();\r\n      setAutoConnect(false);\r\n    }\r\n\r\n    return () => {};\r\n  }, [wallet, autoConnect]);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const select = useCallback(() => setIsModalVisible(true), []);\r\n  const close = useCallback(() => setIsModalVisible(false), []);\r\n\r\n  return (\r\n    <WalletContext.Provider\r\n      value={{\r\n        wallet,\r\n        connected,\r\n        select,\r\n        providerUrl,\r\n        setProviderUrl,\r\n        providerName:\r\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\r\n          providerUrl,\r\n      }}\r\n    >\r\n      {children}\r\n      <Modal\r\n        title=\"Select Wallet\"\r\n        okText=\"Connect\"\r\n        visible={isModalVisible}\r\n        okButtonProps={{ style: { display: 'none' } }}\r\n        onCancel={close}\r\n        width={400}\r\n      >\r\n        {WALLET_PROVIDERS.map((provider) => {\r\n          const onClick = function () {\r\n            setProviderUrl(provider.url);\r\n            setAutoConnect(true);\r\n            close();\r\n          };\r\n\r\n          return (\r\n            <Button\r\n              size=\"large\"\r\n              type={providerUrl === provider.url ? 'primary' : 'ghost'}\r\n              onClick={onClick}\r\n              icon={\r\n                <img\r\n                  alt={`${provider.name}`}\r\n                  width={20}\r\n                  height={20}\r\n                  src={provider.icon}\r\n                  style={{ marginRight: 8 }}\r\n                />\r\n              }\r\n              style={{\r\n                display: 'block',\r\n                width: '100%',\r\n                textAlign: 'left',\r\n                marginBottom: 8,\r\n              }}\r\n            >\r\n              {provider.name}\r\n            </Button>\r\n          );\r\n        })}\r\n      </Modal>\r\n    </WalletContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useWallet() {\r\n  const context = useContext(WalletContext);\r\n  if (!context) {\r\n    throw new Error('Missing wallet context');\r\n  }\r\n\r\n  const wallet = context.wallet;\r\n  return {\r\n    connected: context.connected,\r\n    wallet: wallet,\r\n    providerUrl: context.providerUrl,\r\n    setProvider: context.setProviderUrl,\r\n    providerName: context.providerName,\r\n    select: context.select,\r\n    connect() {\r\n      wallet ? wallet.connect() : context.select();\r\n    },\r\n    disconnect() {\r\n      wallet?.disconnect();\r\n    },\r\n  };\r\n}\r\n","import Wallet from '@project-serum/sol-wallet-adapter';\r\nimport { notify } from '../../utils/notifications';\r\n\r\nexport function SolletExtensionAdapter(_, network) {\r\n  const sollet = (window as any).sollet;\r\n  if (sollet) {\r\n    return new Wallet(sollet, network);\r\n  }\r\n\r\n  return {\r\n    on: () => {},\r\n    connect: () => {\r\n      notify({\r\n        message: 'Sollet Extension Error',\r\n        description: 'Please install the Sollet Extension for Chrome',\r\n      });\r\n    }\r\n  }\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml,body{\r\n  background: RGB(15,20,41,1);\r\n}\r\ninput[type=number]::-webkit-inner-spin-button {\r\n  opacity: 0;\r\n}\r\ninput[type=number]:hover::-webkit-inner-spin-button,\r\ninput[type=number]:focus::-webkit-inner-spin-button {\r\n  opacity: 0.25;\r\n}\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 15px;\r\n}\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #2d313c;\r\n}\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #5b5f67;\r\n}\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #5b5f67;\r\n}\r\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\r\n  background-color: #2abdd2;\r\n  opacity: 0.75;\r\n}\r\n.ant-slider-track,\r\n.ant-slider ant-slider-track:hover {\r\n  background-color: #2abdd2;\r\n  opacity: 0.75;\r\n}\r\n.ant-slider-dot-active,\r\n.ant-slider-handle,\r\n.ant-slider-handle-click-focused,\r\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\r\n  border: 2px solid #2abdd2; \r\n}\r\n.ant-table-tbody > tr.ant-table-row:hover > td {\r\n  background: #273043;\r\n}\r\n.ant-table-tbody > tr > td {\r\n  border-bottom: 8px solid #1A2029;\r\n}\r\n.ant-table-container table > thead > tr:first-child th {\r\n  border-bottom: none;\r\n}\r\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\r\n  border-top: 1px solid #434a59 !important;\r\n}\r\n.ant-layout {\r\n    background: #0F1429\r\n  }\r\n  .ant-table {\r\n    background: #212734;\r\n  }\r\n  .ant-table-thead > tr > th {\r\n    background: #1A2029;\r\n  }\r\n.ant-select-item-option-content {\r\n  img {\r\n    margin-right: 4px;\r\n  }\r\n}\r\n.ant-modal-content {\r\n  background-color: #212734;\r\n}\r\n\r\n@-webkit-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n@-moz-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n@-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n.flash {\r\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\r\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\r\n  animation: highlight 0.5s ease 0s 1 alternate;\r\n}`;\r\n","import React, { Component } from 'react';\r\nimport { Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <Title level={2}>Something went wrong.</Title>\r\n            <Title level={4}>Please try again later.</Title>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import {\r\n  Account,\r\n  AccountInfo,\r\n  Commitment,\r\n  Connection,\r\n  PublicKey,\r\n  RpcResponseAndContext,\r\n  SimulatedTransactionResponse,\r\n  SystemProgram,\r\n  Transaction,\r\n  TransactionSignature,\r\n} from '@solana/web3.js';\r\nimport {\r\n  DexInstructions,\r\n  Market,\r\n  OpenOrders,\r\n  TOKEN_MINTS,\r\n  TokenInstructions,\r\n  parseInstructionErrorResponse,\r\n} from '@project-serum/serum';\r\nimport { SelectedTokenAccounts, TokenAccount } from './types';\r\nimport { getDecimalCount, sleep } from './utils';\r\n\r\nimport BN from 'bn.js';\r\nimport { Buffer } from 'buffer';\r\nimport { Order } from '@project-serum/serum/lib/market';\r\nimport Wallet from '@project-serum/sol-wallet-adapter';\r\nimport assert from 'assert';\r\nimport { getSelectedTokenAccountForMint } from './markets';\r\nimport { getTokenByMintAddress } from './tokens'\r\nimport { notify } from './notifications';\r\nimport { struct } from 'superstruct';\r\n\r\nimport { WalletAdapter } from '../wallet-adapters';\r\n\r\n\r\n\r\nexport async function createTokenAccountTransaction({\r\n  connection,\r\n  wallet,\r\n  mintPublicKey,\r\n}: {\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  mintPublicKey: PublicKey;\r\n}): Promise<{\r\n  transaction: Transaction;\r\n  signer: Account;\r\n  newAccountPubkey: PublicKey;\r\n}> {\r\n  const newAccount = new Account();\r\n  const transaction = new Transaction();\r\n  const instruction = SystemProgram.createAccount({\r\n    fromPubkey: wallet.publicKey,\r\n    newAccountPubkey: newAccount.publicKey,\r\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n    space: 165,\r\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n  });\r\n  transaction.add(instruction);\r\n  transaction.add(\r\n    TokenInstructions.initializeAccount({\r\n      account: newAccount.publicKey,\r\n      mint: mintPublicKey,\r\n      owner: wallet.publicKey,\r\n    }),\r\n  );\r\n  return {\r\n    transaction,\r\n    signer: newAccount,\r\n    newAccountPubkey: newAccount.publicKey,\r\n  };\r\n}\r\n\r\nexport async function settleFunds({\r\n  market,\r\n  openOrders,\r\n  connection,\r\n  wallet,\r\n  baseCurrencyAccount,\r\n  quoteCurrencyAccount,\r\n}: {\r\n  market: Market;\r\n  openOrders: OpenOrders;\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  baseCurrencyAccount: TokenAccount;\r\n  quoteCurrencyAccount: TokenAccount;\r\n}): Promise<string | undefined> {\r\n  if (\r\n    !market ||\r\n    !wallet ||\r\n    !connection ||\r\n    !openOrders ||\r\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\r\n  ) {\r\n    notify({ message: 'Not connected' });\r\n    return;\r\n  }\r\n\r\n  let createAccountTransaction: Transaction | undefined;\r\n  let createAccountSigner: Account | undefined;\r\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\r\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\r\n\r\n  if (!baseCurrencyAccountPubkey) {\r\n    const result = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.baseMintAddress,\r\n    });\r\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\r\n    createAccountTransaction = result?.transaction;\r\n    createAccountSigner = result?.signer;\r\n  }\r\n  if (!quoteCurrencyAccountPubkey) {\r\n    const result = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.quoteMintAddress,\r\n    });\r\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\r\n    createAccountTransaction = result?.transaction;\r\n    createAccountSigner = result?.signer;\r\n  }\r\n  let referrerQuoteWallet: PublicKey | null = null\r\n  if (market.supportsReferralFees) {\r\n    const quoteToken = getTokenByMintAddress(market.quoteMintAddress.toBase58())\r\n    if (quoteToken?.referrer) {\r\n      referrerQuoteWallet = new PublicKey(quoteToken?.referrer)\r\n    }\r\n  }\r\n\r\n  const {\r\n    transaction: settleFundsTransaction,\r\n    signers: settleFundsSigners,\r\n  } = await market.makeSettleFundsTransaction(\r\n    connection,\r\n    openOrders,\r\n    baseCurrencyAccountPubkey,\r\n    quoteCurrencyAccountPubkey,\r\n    referrerQuoteWallet,\r\n  );\r\n\r\n  let transaction = mergeTransactions([\r\n    createAccountTransaction,\r\n    settleFundsTransaction,\r\n  ]);\r\n  let signers = createAccountSigner\r\n    ? [...settleFundsSigners, createAccountSigner]\r\n    : settleFundsSigners;\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    signers,\r\n    wallet,\r\n    connection,\r\n    sendingMessage: 'Settling funds...',\r\n  });\r\n}\r\n\r\nexport async function settleAllFunds({\r\n  connection,\r\n  wallet,\r\n  tokenAccounts,\r\n  markets,\r\n  selectedTokenAccounts,\r\n}: {\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  tokenAccounts: TokenAccount[];\r\n  markets: Market[];\r\n  selectedTokenAccounts?: SelectedTokenAccounts;\r\n}) {\r\n  if (!markets || !wallet || !connection || !tokenAccounts) {\r\n    return;\r\n  }\r\n\r\n  const programIds: PublicKey[] = [];\r\n  markets\r\n    .reduce((cumulative, m) => {\r\n      // @ts-ignore\r\n      cumulative.push(m._programId);\r\n      return cumulative;\r\n    }, [])\r\n    .forEach((programId) => {\r\n      if (!programIds.find((p) => p.equals(programId))) {\r\n        programIds.push(programId);\r\n      }\r\n    });\r\n\r\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\r\n    const openOrdersAccounts = await OpenOrders.findForOwner(\r\n      connection,\r\n      wallet.publicKey,\r\n      programId,\r\n    );\r\n    return openOrdersAccounts.filter(\r\n      (openOrders) =>\r\n        openOrders.baseTokenFree.toNumber() ||\r\n        openOrders.quoteTokenFree.toNumber(),\r\n    );\r\n  };\r\n\r\n  const openOrdersAccountsForProgramIds = await Promise.all(\r\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\r\n  );\r\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\r\n    (accounts, current) => accounts.concat(current),\r\n    [],\r\n  );\r\n\r\n  const settleTransactions = (\r\n    await Promise.all(\r\n      openOrdersAccounts.map((openOrdersAccount) => {\r\n        const market = markets.find((m) =>\r\n          // @ts-ignore\r\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\r\n        );\r\n        const baseMint = market?.baseMintAddress;\r\n        const quoteMint = market?.quoteMintAddress;\r\n\r\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\r\n          tokenAccounts,\r\n          baseMint,\r\n          baseMint &&\r\n            selectedTokenAccounts &&\r\n            selectedTokenAccounts[baseMint.toBase58()],\r\n        )?.pubkey;\r\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\r\n          tokenAccounts,\r\n          quoteMint,\r\n          quoteMint &&\r\n            selectedTokenAccounts &&\r\n            selectedTokenAccounts[quoteMint.toBase58()],\r\n        )?.pubkey;\r\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\r\n          return null;\r\n        }\r\n        return (\r\n          market &&\r\n          market.makeSettleFundsTransaction(\r\n            connection,\r\n            openOrdersAccount,\r\n            selectedBaseTokenAccount,\r\n            selectedQuoteTokenAccount,\r\n          )\r\n        );\r\n      }),\r\n    )\r\n  ).filter(\r\n    (\r\n      x,\r\n    ): x is {\r\n      signers: Account[];\r\n      transaction: Transaction;\r\n      payer: PublicKey;\r\n    } => !!x,\r\n  );\r\n  if (!settleTransactions || settleTransactions.length === 0) return;\r\n\r\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\r\n  const signers: Array<Account> = [];\r\n  settleTransactions\r\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\r\n    .forEach((signer) => {\r\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\r\n        signers.push(signer);\r\n      }\r\n    });\r\n\r\n  const transaction = mergeTransactions(transactions);\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    signers,\r\n    wallet,\r\n    connection,\r\n  });\r\n}\r\n\r\nexport async function cancelOrder(params: {\r\n  market: Market;\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  order: Order;\r\n}) {\r\n  return cancelOrders({ ...params, orders: [params.order] });\r\n}\r\n\r\nexport async function cancelOrders({\r\n  market,\r\n  wallet,\r\n  connection,\r\n  orders,\r\n}: {\r\n  market: Market;\r\n  wallet: WalletAdapter;\r\n  connection: Connection;\r\n  orders: Order[];\r\n}) {\r\n  const transaction = market.makeMatchOrdersTransaction(5);\r\n  orders.forEach((order) => {\r\n    transaction.add(\r\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\r\n    );\r\n  });\r\n  transaction.add(market.makeMatchOrdersTransaction(5));\r\n  return await sendTransaction({\r\n    transaction,\r\n    wallet,\r\n    connection,\r\n    sendingMessage: 'Sending cancel...',\r\n  });\r\n}\r\n\r\nexport async function placeOrder({\r\n  side,\r\n  price,\r\n  size,\r\n  orderType,\r\n  market,\r\n  connection,\r\n  wallet,\r\n  baseCurrencyAccount,\r\n  quoteCurrencyAccount,\r\n  feeDiscountPubkey = undefined,\r\n}: {\r\n  side: 'buy' | 'sell';\r\n  price: number;\r\n  size: number;\r\n  orderType: 'ioc' | 'postOnly' | 'limit';\r\n  market: Market | undefined | null;\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  baseCurrencyAccount: PublicKey | undefined;\r\n  quoteCurrencyAccount: PublicKey | undefined;\r\n  feeDiscountPubkey: PublicKey | undefined;\r\n}) {\r\n  let formattedMinOrderSize =\r\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\r\n    market?.minOrderSize;\r\n  let formattedTickSize =\r\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\r\n    market?.tickSize;\r\n  const isIncrement = (num, step) =>\r\n    Math.abs((num / step) % 1) < 1e-5 ||\r\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\r\n  if (isNaN(price)) {\r\n    notify({ message: 'Invalid price', type: 'error' });\r\n    return;\r\n  }\r\n  if (isNaN(size)) {\r\n    notify({ message: 'Invalid size', type: 'error' });\r\n    return;\r\n  }\r\n  if (!wallet || !wallet.publicKey) {\r\n    notify({ message: 'Connect wallet', type: 'error' });\r\n    return;\r\n  }\r\n  if (!market) {\r\n    notify({ message: 'Invalid  market', type: 'error' });\r\n    return;\r\n  }\r\n  if (!isIncrement(size, market.minOrderSize)) {\r\n    notify({\r\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  if (size < market.minOrderSize) {\r\n    notify({ message: 'Size too small', type: 'error' });\r\n    return;\r\n  }\r\n  if (!isIncrement(price, market.tickSize)) {\r\n    notify({\r\n      message: `Price must be an increment of ${formattedTickSize}`,\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  if (price < market.tickSize) {\r\n    notify({ message: 'Price under tick size', type: 'error' });\r\n    return;\r\n  }\r\n  const owner = wallet.publicKey;\r\n  const transaction = new Transaction();\r\n  const signers: Account[] = [];\r\n\r\n  if (!baseCurrencyAccount) {\r\n    const {\r\n      transaction: createAccountTransaction,\r\n      signer: createAccountSigners,\r\n      newAccountPubkey,\r\n    } = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.baseMintAddress,\r\n    });\r\n    transaction.add(createAccountTransaction);\r\n    signers.push(createAccountSigners);\r\n    baseCurrencyAccount = newAccountPubkey;\r\n  }\r\n  if (!quoteCurrencyAccount) {\r\n    const {\r\n      transaction: createAccountTransaction,\r\n      signer: createAccountSigners,\r\n      newAccountPubkey,\r\n    } = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.quoteMintAddress,\r\n    });\r\n    transaction.add(createAccountTransaction);\r\n    signers.push(createAccountSigners);\r\n    quoteCurrencyAccount = newAccountPubkey;\r\n  }\r\n\r\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\r\n  if (!payer) {\r\n    notify({\r\n      message: 'Need an SPL token account for cost currency',\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  const params = {\r\n    owner,\r\n    payer,\r\n    side,\r\n    price,\r\n    size,\r\n    orderType,\r\n    feeDiscountPubkey: feeDiscountPubkey || null,\r\n  };\r\n  console.log(params);\r\n\r\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\r\n  transaction.add(matchOrderstransaction);\r\n  const startTime = getUnixTs();\r\n  let {\r\n    transaction: placeOrderTx,\r\n    signers: placeOrderSigners,\r\n  } = await market.makePlaceOrderTransaction(\r\n    connection,\r\n    params,\r\n    120_000,\r\n    120_000,\r\n  );\r\n  const endTime = getUnixTs();\r\n  console.log(`Creating order transaction took ${endTime - startTime}`);\r\n  transaction.add(placeOrderTx);\r\n  transaction.add(market.makeMatchOrdersTransaction(5));\r\n  signers.push(...placeOrderSigners);\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    wallet,\r\n    connection,\r\n    signers,\r\n    sendingMessage: 'Sending order...',\r\n  });\r\n}\r\n\r\nexport async function listMarket({\r\n  connection,\r\n  wallet,\r\n  baseMint,\r\n  quoteMint,\r\n  baseLotSize,\r\n  quoteLotSize,\r\n  dexProgramId,\r\n}: {\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  baseMint: PublicKey;\r\n  quoteMint: PublicKey;\r\n  baseLotSize: number;\r\n  quoteLotSize: number;\r\n  dexProgramId: PublicKey;\r\n}) {\r\n  const market = new Account();\r\n  const requestQueue = new Account();\r\n  const eventQueue = new Account();\r\n  const bids = new Account();\r\n  const asks = new Account();\r\n  const baseVault = new Account();\r\n  const quoteVault = new Account();\r\n  const feeRateBps = 0;\r\n  const quoteDustThreshold = new BN(100);\r\n\r\n  async function getVaultOwnerAndNonce() {\r\n    const nonce = new BN(0);\r\n    while (true) {\r\n      try {\r\n        const vaultOwner = await PublicKey.createProgramAddress(\r\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\r\n          dexProgramId,\r\n        );\r\n        return [vaultOwner, nonce];\r\n      } catch (e) {\r\n        nonce.iaddn(1);\r\n      }\r\n    }\r\n  }\r\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\r\n\r\n  const tx1 = new Transaction();\r\n  tx1.add(\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: baseVault.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n      space: 165,\r\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: quoteVault.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n      space: 165,\r\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n    }),\r\n    TokenInstructions.initializeAccount({\r\n      account: baseVault.publicKey,\r\n      mint: baseMint,\r\n      owner: vaultOwner,\r\n    }),\r\n    TokenInstructions.initializeAccount({\r\n      account: quoteVault.publicKey,\r\n      mint: quoteMint,\r\n      owner: vaultOwner,\r\n    }),\r\n  );\r\n\r\n  const tx2 = new Transaction();\r\n  tx2.add(\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: market.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(\r\n        Market.getLayout(dexProgramId).span,\r\n      ),\r\n      space: Market.getLayout(dexProgramId).span,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: requestQueue.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\r\n      space: 5120 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: eventQueue.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\r\n      space: 262144 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: bids.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\r\n      space: 65536 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: asks.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\r\n      space: 65536 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    DexInstructions.initializeMarket({\r\n      market: market.publicKey,\r\n      requestQueue: requestQueue.publicKey,\r\n      eventQueue: eventQueue.publicKey,\r\n      bids: bids.publicKey,\r\n      asks: asks.publicKey,\r\n      baseVault: baseVault.publicKey,\r\n      quoteVault: quoteVault.publicKey,\r\n      baseMint,\r\n      quoteMint,\r\n      baseLotSize: new BN(baseLotSize),\r\n      quoteLotSize: new BN(quoteLotSize),\r\n      feeRateBps,\r\n      vaultSignerNonce,\r\n      quoteDustThreshold,\r\n      programId: dexProgramId,\r\n    }),\r\n  );\r\n\r\n  const signedTransactions = await signTransactions({\r\n    transactionsAndSigners: [\r\n      { transaction: tx1, signers: [baseVault, quoteVault] },\r\n      {\r\n        transaction: tx2,\r\n        signers: [market, requestQueue, eventQueue, bids, asks],\r\n      },\r\n    ],\r\n    wallet,\r\n    connection,\r\n  });\r\n  for (let signedTransaction of signedTransactions) {\r\n    await sendSignedTransaction({\r\n      signedTransaction,\r\n      connection,\r\n    });\r\n  }\r\n\r\n  return market.publicKey;\r\n}\r\n\r\nexport const getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nconst DEFAULT_TIMEOUT = 15000;\r\n\r\nexport async function sendTransaction({\r\n  transaction,\r\n  wallet,\r\n  signers = [],\r\n  connection,\r\n  sendingMessage = 'Sending transaction...',\r\n  sentMessage = 'Transaction sent',\r\n  successMessage = 'Transaction confirmed',\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  transaction: Transaction;\r\n  wallet: WalletAdapter;\r\n  signers?: Array<Account>;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}) {\r\n  const signedTransaction = await signTransaction({\r\n    transaction,\r\n    wallet,\r\n    signers,\r\n    connection,\r\n  });\r\n  return await sendSignedTransaction({\r\n    signedTransaction,\r\n    connection,\r\n    sendingMessage,\r\n    sentMessage,\r\n    successMessage,\r\n    timeout,\r\n  });\r\n}\r\n\r\nexport async function signTransaction({\r\n  transaction,\r\n  wallet,\r\n  signers = [],\r\n  connection,\r\n}: {\r\n  transaction: Transaction;\r\n  wallet: WalletAdapter;\r\n  signers?: Array<Account>;\r\n  connection: Connection;\r\n}) {\r\n  transaction.recentBlockhash = (\r\n    await connection.getRecentBlockhash('max')\r\n  ).blockhash;\r\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  return await wallet.signTransaction(transaction);\r\n}\r\n\r\nexport async function signTransactions({\r\n  transactionsAndSigners,\r\n  wallet,\r\n  connection,\r\n}: {\r\n  transactionsAndSigners: {\r\n    transaction: Transaction;\r\n    signers?: Array<Account>;\r\n  }[];\r\n  wallet: WalletAdapter;\r\n  connection: Connection;\r\n}) {\r\n  const blockhash = (await connection.getRecentBlockhash('max')).blockhash;\r\n  transactionsAndSigners.forEach(({ transaction, signers = [] }) => {\r\n    transaction.recentBlockhash = blockhash;\r\n    transaction.setSigners(\r\n      wallet.publicKey,\r\n      ...signers.map((s) => s.publicKey),\r\n    );\r\n    if (signers?.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n  });\r\n  return await wallet.signAllTransactions(\r\n    transactionsAndSigners.map(({ transaction }) => transaction),\r\n  );\r\n}\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  sendingMessage = 'Sending transaction...',\r\n  sentMessage = 'Transaction sent',\r\n  successMessage = 'Transaction confirmed',\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<string> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n  const startTime = getUnixTs();\r\n  notify({ message: sendingMessage });\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n  notify({ message: sentMessage, type: 'success', txid });\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(300);\r\n    }\r\n  })();\r\n  try {\r\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\r\n  } catch (err) {\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    let simulateResult: SimulatedTransactionResponse | null = null;\r\n    try {\r\n      simulateResult = (\r\n        await simulateTransaction(connection, signedTransaction, 'single')\r\n      ).value;\r\n    } catch (e) {}\r\n    if (simulateResult && simulateResult.err) {\r\n      if (simulateResult.logs) {\r\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\r\n          const line = simulateResult.logs[i];\r\n          if (line.startsWith('Program log: ')) {\r\n            throw new Error(\r\n              'Transaction failed: ' + line.slice('Program log: '.length),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      throw new Error(JSON.stringify(simulateResult.err));\r\n    }\r\n    throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n  notify({ message: successMessage, type: 'success', txid });\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return txid;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n) {\r\n  let done = false;\r\n  const result = await new Promise((resolve, reject) => {\r\n    (async () => {\r\n      setTimeout(() => {\r\n        if (done) {\r\n          return;\r\n        }\r\n        done = true;\r\n        console.log('Timed out for txid', txid);\r\n        reject({ timeout: true });\r\n      }, timeout);\r\n      try {\r\n        connection.onSignature(\r\n          txid,\r\n          (result) => {\r\n            console.log('WS confirmed', txid, result);\r\n            done = true;\r\n            if (result.err) {\r\n              reject(result.err);\r\n            } else {\r\n              resolve(result);\r\n            }\r\n          },\r\n          'recent',\r\n        );\r\n        console.log('Set up WS connection', txid);\r\n      } catch (e) {\r\n        done = true;\r\n        console.log('WS error in setup', txid, e);\r\n      }\r\n      while (!done) {\r\n        // eslint-disable-next-line no-loop-func\r\n        (async () => {\r\n          try {\r\n            const signatureStatuses = await connection.getSignatureStatuses([\r\n              txid,\r\n            ]);\r\n            const result = signatureStatuses && signatureStatuses.value[0];\r\n            if (!done) {\r\n              if (!result) {\r\n                console.log('REST null result for', txid, result);\r\n              } else if (result.err) {\r\n                console.log('REST error for', txid, result);\r\n                done = true;\r\n                reject(result.err);\r\n              } else if (!result.confirmations) {\r\n                console.log('REST no confirmations for', txid, result);\r\n              } else {\r\n                console.log('REST confirmation for', txid, result);\r\n                done = true;\r\n                resolve(result);\r\n              }\r\n            }\r\n          } catch (e) {\r\n            if (!done) {\r\n              console.log('REST connection error: txid', txid, e);\r\n            }\r\n          }\r\n        })();\r\n        await sleep(300);\r\n      }\r\n    })();\r\n  });\r\n  done = true;\r\n  return result;\r\n}\r\n\r\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\r\n  const transaction = new Transaction();\r\n  transactions\r\n    .filter((t): t is Transaction => t !== undefined)\r\n    .forEach((t) => {\r\n      transaction.add(t);\r\n    });\r\n  return transaction;\r\n}\r\n\r\nfunction jsonRpcResult(resultDescription: any) {\r\n  const jsonRpcVersion = struct.literal('2.0');\r\n  return struct.union([\r\n    struct({\r\n      jsonrpc: jsonRpcVersion,\r\n      id: 'string',\r\n      error: 'any',\r\n    }),\r\n    struct({\r\n      jsonrpc: jsonRpcVersion,\r\n      id: 'string',\r\n      error: 'null?',\r\n      result: resultDescription,\r\n    }),\r\n  ]);\r\n}\r\n\r\nfunction jsonRpcResultAndContext(resultDescription: any) {\r\n  return jsonRpcResult({\r\n    context: struct({\r\n      slot: 'number',\r\n    }),\r\n    value: resultDescription,\r\n  });\r\n}\r\n\r\nconst AccountInfoResult = struct({\r\n  executable: 'boolean',\r\n  owner: 'string',\r\n  lamports: 'number',\r\n  data: 'any',\r\n  rentEpoch: 'number?',\r\n});\r\n\r\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\r\n  struct.array([struct.union(['null', AccountInfoResult])]),\r\n);\r\n\r\nexport async function getMultipleSolanaAccounts(\r\n  connection: Connection,\r\n  publicKeys: PublicKey[],\r\n): Promise<\r\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\r\n> {\r\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\r\n  // @ts-ignore\r\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\r\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\r\n  if (res.error) {\r\n    throw new Error(\r\n      'failed to get info about accounts ' +\r\n        publicKeys.map((k) => k.toBase58()).join(', ') +\r\n        ': ' +\r\n        res.error.message,\r\n    );\r\n  }\r\n  assert(typeof res.result !== 'undefined');\r\n  const accounts: Array<{\r\n    executable: any;\r\n    owner: PublicKey;\r\n    lamports: any;\r\n    data: Buffer;\r\n  } | null> = [];\r\n  for (const account of res.result.value) {\r\n    let value: {\r\n      executable: any;\r\n      owner: PublicKey;\r\n      lamports: any;\r\n      data: Buffer;\r\n    } | null = null;\r\n    if (res.result.value) {\r\n      const { executable, owner, lamports, data } = account;\r\n      assert(data[1] === 'base64');\r\n      value = {\r\n        executable,\r\n        owner: new PublicKey(owner),\r\n        lamports,\r\n        data: Buffer.from(data[0], 'base64'),\r\n      };\r\n    }\r\n    accounts.push(value);\r\n  }\r\n  return {\r\n    context: {\r\n      slot: res.result.context.slot,\r\n    },\r\n    value: Object.fromEntries(\r\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\r\n    ),\r\n  };\r\n}\r\n\r\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\r\nasync function simulateTransaction(\r\n  connection: Connection,\r\n  transaction: Transaction,\r\n  commitment: Commitment,\r\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\r\n  // @ts-ignore\r\n  transaction.recentBlockhash = await connection._recentBlockhash(\r\n    // @ts-ignore\r\n    connection._disableBlockhashCaching,\r\n  );\r\n\r\n  const signData = transaction.serializeMessage();\r\n  // @ts-ignore\r\n  const wireTransaction = transaction._serialize(signData);\r\n  const encodedTransaction = wireTransaction.toString('base64');\r\n  const config: any = { encoding: 'base64', commitment };\r\n  const args = [encodedTransaction, config];\r\n\r\n  // @ts-ignore\r\n  const res = await connection._rpcRequest('simulateTransaction', args);\r\n  if (res.error) {\r\n    throw new Error('failed to simulate transaction: ' + res.error.message);\r\n  }\r\n  return res.result;\r\n}\r\n","import * as BufferLayout from 'buffer-layout';\r\n\r\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\r\nimport { useAllMarkets, useCustomMarkets, useTokenAccounts } from './markets';\r\n\r\nimport BN from 'bn.js';\r\nimport { TOKEN_MINTS } from '@project-serum/serum';\r\nimport { TokenAccount } from './types';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\nimport bs58 from 'bs58';\r\n// @ts-ignore\r\nimport { cloneDeep } from 'lodash-es'\r\nimport { getMultipleSolanaAccounts } from './send';\r\nimport tuple from 'immutable-tuple';\r\nimport { useAsyncData } from './fetch-loop';\r\nimport { useConnection } from './connection';\r\nimport { useMemo } from 'react';\r\n\r\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\r\n  BufferLayout.blob(32, 'mint'),\r\n  BufferLayout.blob(32, 'owner'),\r\n  BufferLayout.nu64('amount'),\r\n  BufferLayout.blob(93),\r\n]);\r\n\r\nexport const MINT_LAYOUT = BufferLayout.struct([\r\n  BufferLayout.blob(36),\r\n  BufferLayout.blob(8, 'supply'),\r\n  BufferLayout.u8('decimals'),\r\n  BufferLayout.u8('initialized'),\r\n  BufferLayout.blob(36),\r\n]);\r\n\r\nexport function parseTokenAccountData(\r\n  data: Buffer,\r\n): { mint: PublicKey; owner: PublicKey; amount: number } {\r\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\r\n  return {\r\n    mint: new PublicKey(mint),\r\n    owner: new PublicKey(owner),\r\n    amount,\r\n  };\r\n}\r\n\r\nexport interface MintInfo {\r\n  decimals: number;\r\n  initialized: boolean;\r\n  supply: BN;\r\n}\r\n\r\nexport function parseTokenMintData(data): MintInfo {\r\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\r\n  return {\r\n    decimals,\r\n    initialized: !!initialized,\r\n    supply: new BN(supply, 10, 'le'),\r\n  };\r\n}\r\n\r\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\r\n  return [\r\n    {\r\n      memcmp: {\r\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\r\n        bytes: publicKey.toBase58(),\r\n      },\r\n    },\r\n    {\r\n      dataSize: ACCOUNT_LAYOUT.span,\r\n    },\r\n  ];\r\n}\r\n\r\nexport const TOKEN_PROGRAM_ID = new PublicKey(\r\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\r\n);\r\n\r\nexport async function getOwnedTokenAccounts(\r\n  connection: Connection,\r\n  publicKey: PublicKey,\r\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\r\n  let filters = getOwnedAccountsFilters(publicKey);\r\n  // @ts-ignore\r\n  let resp = await connection._rpcRequest('getProgramAccounts', [\r\n    TOKEN_PROGRAM_ID.toBase58(),\r\n    {\r\n      commitment: connection.commitment,\r\n      filters,\r\n    },\r\n  ]);\r\n  if (resp.error) {\r\n    throw new Error(\r\n      'failed to get token accounts owned by ' +\r\n        publicKey.toBase58() +\r\n        ': ' +\r\n        resp.error.message,\r\n    );\r\n  }\r\n  return resp.result\r\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\r\n      publicKey: new PublicKey(pubkey),\r\n      accountInfo: {\r\n        data: bs58.decode(data),\r\n        executable,\r\n        owner: new PublicKey(owner),\r\n        lamports,\r\n      },\r\n    }))\r\n    .filter(({ accountInfo }) => {\r\n      // TODO: remove this check once mainnet is updated\r\n      return filters.every((filter) => {\r\n        if (filter.dataSize) {\r\n          return accountInfo.data.length === filter.dataSize;\r\n        } else if (filter.memcmp) {\r\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\r\n          return accountInfo.data\r\n            .slice(\r\n              filter.memcmp.offset,\r\n              filter.memcmp.offset + filterBytes.length,\r\n            )\r\n            .equals(filterBytes);\r\n        }\r\n        return false;\r\n      });\r\n    });\r\n}\r\n\r\nexport async function getTokenAccountInfo(\r\n  connection: Connection,\r\n  ownerAddress: PublicKey,\r\n) {\r\n  let [splAccounts, account] = await Promise.all([\r\n    getOwnedTokenAccounts(connection, ownerAddress),\r\n    connection.getAccountInfo(ownerAddress),\r\n  ]);\r\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\r\n    ({ publicKey, accountInfo }) => {\r\n      return {\r\n        pubkey: publicKey,\r\n        account: accountInfo,\r\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\r\n      };\r\n    },\r\n  );\r\n  return parsedSplAccounts.concat({\r\n    pubkey: ownerAddress,\r\n    account,\r\n    effectiveMint: WRAPPED_SOL_MINT,\r\n  });\r\n}\r\n\r\nexport function useMintToTickers(): { [mint: string]: string } {\r\n  const { customMarkets } = useCustomMarkets();\r\n  const [markets] = useAllMarkets();\r\n  return useMemo(() => {\r\n    const mintsToTickers = Object.fromEntries(\r\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\r\n    );\r\n    for (let market of markets || []) {\r\n      const customMarketInfo = customMarkets.find(\r\n        (customMarket) =>\r\n          customMarket.address === market.market.address.toBase58(),\r\n      );\r\n      if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\r\n        if (customMarketInfo) {\r\n          mintsToTickers[market.market.baseMintAddress.toBase58()] =\r\n            customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\r\n        }\r\n      }\r\n      if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\r\n        if (customMarketInfo) {\r\n          mintsToTickers[market.market.quoteMintAddress.toBase58()] =\r\n            customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\r\n        }\r\n      }\r\n    }\r\n    return mintsToTickers;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [markets?.length, customMarkets.length]);\r\n}\r\n\r\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\r\n\r\nexport function useMintInfos(): [\r\n  (\r\n    | {\r\n        [mintAddress: string]: {\r\n          decimals: number;\r\n          initialized: boolean;\r\n        } | null;\r\n      }\r\n    | null\r\n    | undefined\r\n  ),\r\n  boolean,\r\n] {\r\n  const connection = useConnection();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [allMarkets] = useAllMarkets();\r\n\r\n  const allMints = (tokenAccounts || [])\r\n    .map((account) => account.effectiveMint)\r\n    .concat(\r\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\r\n    )\r\n    .concat(\r\n      (allMarkets || []).map(\r\n        (marketInfo) => marketInfo.market.quoteMintAddress,\r\n      ),\r\n    );\r\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\r\n    (stringMint) => new PublicKey(stringMint),\r\n  );\r\n\r\n  const getAllMintInfo = async () => {\r\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\r\n    return Object.fromEntries(\r\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\r\n        key,\r\n        accountInfo && parseTokenMintData(accountInfo.data),\r\n      ]),\r\n    );\r\n  };\r\n\r\n  return useAsyncData(\r\n    getAllMintInfo,\r\n    tuple(\r\n      'getAllMintInfo',\r\n      connection,\r\n      (tokenAccounts || []).length,\r\n      (allMarkets || []).length,\r\n    ),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\ninterface Tokens {\r\n  [key: string]: any\r\n  [index: number]: any\r\n}\r\n\r\nexport interface TokenInfo {\r\n  symbol: string\r\n  name: string\r\n\r\n  mintAddress: string\r\n  decimals: number\r\n\r\n  referrer?: string\r\n}\r\n\r\n\r\nexport function getTokenByMintAddress(mintAddress: string): TokenInfo | null {\r\n  if (mintAddress === NATIVE_SOL.mintAddress) {\r\n    return cloneDeep(NATIVE_SOL)\r\n  }\r\n\r\n  let token = null\r\n\r\n  for (const symbol of Object.keys(TOKENS)) {\r\n    const info = cloneDeep(TOKENS[symbol])\r\n\r\n    if (info.mintAddress === mintAddress) {\r\n      token = info\r\n    }\r\n  }\r\n\r\n  return token\r\n}\r\n\r\nexport const NATIVE_SOL: TokenInfo = {\r\n  symbol: 'SOL',\r\n  name: 'Native Solana',\r\n  mintAddress: '11111111111111111111111111111111',\r\n  decimals: 9\r\n}\r\n\r\n\r\nexport const TOKENS: Tokens = {\r\n  WSOL: {\r\n    symbol: 'WSOL',\r\n    name: 'Wrapped Solana',\r\n    mintAddress: 'So11111111111111111111111111111111111111112',\r\n    decimals: 9,\r\n    referrer: 'HTcarLHe7WRxBQCWvhVB8AP56pnEtJUV2jDGvcpY3xo5'\r\n  },\r\n  BTC: {\r\n    symbol: 'BTC',\r\n    name: 'Wrapped Bitcoin',\r\n    mintAddress: '9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E',\r\n    decimals: 6,\r\n    referrer: 'GZpS8cY8Nt8HuqxzJh6PXTdSxc38vFUjBmi7eEUkkQtG'\r\n  },\r\n  ETH: {\r\n    symbol: 'ETH',\r\n    name: 'Wrapped Ethereum',\r\n    mintAddress: '2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk',\r\n    decimals: 6,\r\n    referrer: 'CXPTcSxxh4AT38gtv3SPbLS7oZVgXzLbMb83o4ziXjjN'\r\n  },\r\n  USDT: {\r\n    symbol: 'USDT',\r\n    name: 'USDT',\r\n    mintAddress: 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\r\n    decimals: 6,\r\n    referrer: '8DwwDNagph8SdwMUdcXS5L9YAyutTyDJmK6cTKrmNFk3'\r\n  },\r\n  WUSDT: {\r\n    symbol: 'WUSDT',\r\n    name: 'Wrapped USDT',\r\n    mintAddress: 'BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4',\r\n    decimals: 6,\r\n    referrer: 'CA98hYunCLKgBuD6N8MJSgq1GbW9CXdksLf5mw736tS3'\r\n  },\r\n  USDC: {\r\n    symbol: 'USDC',\r\n    name: 'USDC',\r\n    mintAddress: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\r\n    decimals: 6,\r\n    referrer: '92vdtNjEg6Zth3UU1MgPgTVFjSEzTHx66aCdqWdcRkrg'\r\n  },\r\n  WUSDC: {\r\n    symbol: 'WUSDC',\r\n    name: 'Wrapped USDC',\r\n    mintAddress: 'BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW',\r\n    decimals: 6\r\n  },\r\n  YFI: {\r\n    symbol: 'YFI',\r\n    name: 'Wrapped YFI',\r\n    mintAddress: '3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB',\r\n    decimals: 6,\r\n    referrer: 'DZjgzKfYzZBBSTo5vytMYvGdNF933DvuX8TftDMrThrb'\r\n  },\r\n  LINK: {\r\n    symbol: 'LINK',\r\n    name: 'Wrapped Chainlink',\r\n    mintAddress: 'CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG',\r\n    decimals: 6,\r\n    referrer: 'DRSKKsYZaPEFkRgGywo7KWBGZikf71R9aDr8tjtpr41V'\r\n  },\r\n  XRP: {\r\n    symbol: 'XRP',\r\n    name: 'Wrapped XRP',\r\n    mintAddress: 'Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8',\r\n    decimals: 6,\r\n    referrer: '6NeHPXG142tAE2Ej3gHgT2N66i1KH6PFR6PBZw6RyrwH'\r\n  },\r\n  SUSHI: {\r\n    symbol: 'SUSHI',\r\n    name: 'Wrapped SUSHI',\r\n    mintAddress: 'AR1Mtgh7zAtxuxGd2XPovXPVjcSdY3i4rQYisNadjfKy',\r\n    decimals: 6,\r\n    referrer: '59QxHeHgb28tDc3gStnrW8FNKC9qWuRmRZHBaAqCerJX'\r\n  },\r\n  ALEPH: {\r\n    symbol: 'ALEPH',\r\n    name: 'Wrapped ALEPH',\r\n    mintAddress: 'CsZ5LZkDS7h9TDKjrbL7VAwQZ9nsRu8vJLhRYfmGaN8K',\r\n    decimals: 6,\r\n    referrer: '8FKAKrenJMDd7V6cxnM5BsymHTjqxgodtHbLwZReMnWW'\r\n  },\r\n  SXP: {\r\n    symbol: 'SXP',\r\n    name: 'Wrapped SXP',\r\n    mintAddress: 'SF3oTvfWzEP3DTwGSvUXRrGTvr75pdZNnBLAH9bzMuX',\r\n    decimals: 6,\r\n    referrer: '97Vyotr284UM2Fyq9gbfQ3azMYtgf7cjnsf8pN1PFfY9'\r\n  },\r\n  HGET: {\r\n    symbol: 'HGET',\r\n    name: 'Wrapped HGET',\r\n    mintAddress: 'BtZQfWqDGbk9Wf2rXEiWyQBdBY1etnUUn6zEphvVS7yN',\r\n    decimals: 6,\r\n    referrer: 'AGY2wy1ANzLM2jJLSkVxPUYAY5iAYXYsLMQkoQsAhucj'\r\n  },\r\n  CREAM: {\r\n    symbol: 'CREAM',\r\n    name: 'Wrapped CREAM',\r\n    mintAddress: '5Fu5UUgbjpUvdBveb3a1JTNirL8rXtiYeSMWvKjtUNQv',\r\n    decimals: 6,\r\n    referrer: '7WPzEiozJ69MQe8bfbss1t2unR6bHR4S7FimiUVRgu7P'\r\n  },\r\n  UBXT: {\r\n    symbol: 'UBXT',\r\n    name: 'Wrapped UBXT',\r\n    mintAddress: '873KLxCbz7s9Kc4ZzgYRtNmhfkQrhfyWGZJBmyCbC3ei',\r\n    decimals: 6,\r\n    referrer: '9aocFzNkSVj9TCS6cJk2uYyuzEpXPWT7xoBBF9JcZ879'\r\n  },\r\n  HNT: {\r\n    symbol: 'HNT',\r\n    name: 'Wrapped HNT',\r\n    mintAddress: 'HqB7uswoVg4suaQiDP3wjxob1G5WdZ144zhdStwMCq7e',\r\n    decimals: 6,\r\n    referrer: 'B61oHrGCFh8P75Z2cRDiw2nbEwbMyhVfZhMWiwxU2qCV'\r\n  },\r\n  FRONT: {\r\n    symbol: 'FRONT',\r\n    name: 'Wrapped FRONT',\r\n    mintAddress: '9S4t2NEAiJVMvPdRYKVrfJpBafPBLtvbvyS3DecojQHw',\r\n    decimals: 6,\r\n    referrer: 'FnasnCc7c43hd2nanSmRjh9Sf9Cgz6aEvNj6wpDznS5h'\r\n  },\r\n  AKRO: {\r\n    symbol: 'AKRO',\r\n    name: 'Wrapped AKRO',\r\n    mintAddress: '6WNVCuxCGJzNjmMZoKyhZJwvJ5tYpsLyAtagzYASqBoF',\r\n    decimals: 6,\r\n    referrer: 'FihBmWJbiLSEvq4QZpPPdjokdMgxqq6pESZ7oMkE1qJH'\r\n  },\r\n  HXRO: {\r\n    symbol: 'HXRO',\r\n    name: 'Wrapped HXRO',\r\n    mintAddress: 'DJafV9qemGp7mLMEn5wrfqaFwxsbLgUsGVS16zKRk9kc',\r\n    decimals: 6,\r\n    referrer: '4NgrGZDRCzyqiwYvKPEePTKfQXtWzKmSDBoZJjRw6wNC'\r\n  },\r\n  UNI: {\r\n    symbol: 'UNI',\r\n    name: 'Wrapped UNI',\r\n    mintAddress: 'DEhAasscXF4kEGxFgJ3bq4PpVGp5wyUxMRvn6TzGVHaw',\r\n    decimals: 6,\r\n    referrer: '4ntxDv95ajBbXfZyGy3UhcQDx8xmH1yJ6eKvuNNH466x'\r\n  },\r\n  SRM: {\r\n    symbol: 'SRM',\r\n    name: 'Serum',\r\n    mintAddress: 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\r\n    decimals: 6,\r\n    referrer: 'HYxa4Ea1dz7ya17Cx18rEGUA1WbCvKjXjFKrnu8CwugH'\r\n  },\r\n  FTT: {\r\n    symbol: 'FTT',\r\n    name: 'Wrapped FTT',\r\n    mintAddress: 'AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3',\r\n    decimals: 6,\r\n    referrer: 'CafpgSh8KGL2GPTjdXfctD3vXngNZDJ3Q92FTfV71Hmt'\r\n  },\r\n  MSRM: {\r\n    symbol: 'MSRM',\r\n    name: 'MegaSerum',\r\n    mintAddress: 'MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L',\r\n    decimals: 0,\r\n    referrer: 'Ge5q9x8gDUNYqqLA1MdnCzWNJGsbj3M15Yxse2cDbw9z'\r\n  },\r\n  TOMO: {\r\n    symbol: 'TOMO',\r\n    name: 'Wrapped TOMO',\r\n    mintAddress: 'GXMvfY2jpQctDqZ9RoU3oWPhufKiCcFEfchvYumtX7jd',\r\n    decimals: 6,\r\n    referrer: '9fexfN3eZomF5gfenG5L9ydbKRQkPhq6x74rb5iLrvXP'\r\n  },\r\n  KARMA: {\r\n    symbol: 'KARMA',\r\n    name: 'Wrapped KARMA',\r\n    mintAddress: 'EcqExpGNFBve2i1cMJUTR4bPXj4ZoqmDD2rTkeCcaTFX',\r\n    decimals: 4\r\n  },\r\n  LUA: {\r\n    symbol: 'LUA',\r\n    name: 'Wrapped LUA',\r\n    mintAddress: 'EqWCKXfs3x47uVosDpTRgFniThL9Y8iCztJaapxbEaVX',\r\n    decimals: 6,\r\n    referrer: 'HuZwNApjVFuFSDgrwZA8GP2JD7WMby4qt6rkWDnaMo7j'\r\n  },\r\n  MATH: {\r\n    symbol: 'MATH',\r\n    name: 'Wrapped MATH',\r\n    mintAddress: 'GeDS162t9yGJuLEHPWXXGrb1zwkzinCgRwnT8vHYjKza',\r\n    decimals: 6,\r\n    referrer: 'C9K1M8sJX8WMdsnFT7DuzdiHHunEj79EsLuz4DixQYGm'\r\n  },\r\n  KEEP: {\r\n    symbol: 'KEEP',\r\n    name: 'Wrapped KEEP',\r\n    mintAddress: 'GUohe4DJUA5FKPWo3joiPgsB7yzer7LpDmt1Vhzy3Zht',\r\n    decimals: 6\r\n  },\r\n  SWAG: {\r\n    symbol: 'SWAG',\r\n    name: 'Wrapped SWAG',\r\n    mintAddress: '9F9fNTT6qwjsu4X4yWYKZpsbw5qT7o6yR2i57JF2jagy',\r\n    decimals: 6\r\n  },\r\n  FIDA: {\r\n    symbol: 'FIDA',\r\n    name: 'Bonfida',\r\n    mintAddress: 'EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp',\r\n    decimals: 6,\r\n    referrer: 'AeAsG75UmyPDB271c6NHonHxXAPXfkvhcf2xjfJhReS8'\r\n  },\r\n  KIN: {\r\n    symbol: 'KIN',\r\n    name: 'KIN',\r\n    mintAddress: 'kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6',\r\n    decimals: 5,\r\n    referrer: 'AevFXmApVxN2yk1iemSxXc6Wy7Z1udUEfST11kuYKmr9'\r\n  },\r\n  MAPS: {\r\n    symbol: 'MAPS',\r\n    name: 'MAPS',\r\n    mintAddress: 'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',\r\n    decimals: 6\r\n  },\r\n  OXY: {\r\n    symbol: 'OXY',\r\n    name: 'OXY',\r\n    mintAddress: 'z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M',\r\n    decimals: 6\r\n  },\r\n  RAY: {\r\n    symbol: 'RAY',\r\n    name: 'Raydium',\r\n    mintAddress: '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\r\n    decimals: 6,\r\n    referrer: '33XpMmMQRf6tSPpmYyzpwU4uXpZHkFwCZsusD9dMYkjy'\r\n  },\r\n  xCOPE: {\r\n    symbol: 'xCOPE',\r\n    name: 'xCOPE',\r\n    mintAddress: '3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE',\r\n    decimals: 0,\r\n    referrer: '8DTehuES4tfnd2SrqcjN52XofxWXGjiLZRgM12U9pB6f'\r\n  },\r\n  COPE: {\r\n    symbol: 'COPE',\r\n    name: 'COPE',\r\n    mintAddress: '8HGyAAB1yoM1ttS7pXjHMa3dukTFGQggnFFH3hJZgzQh',\r\n    decimals: 6,\r\n    referrer: 'G7UYwWhkmgeL57SUKFF45K663V9TdXZw6Ho6ZLQ7p4p'\r\n  },\r\n  STEP: {\r\n    symbol: 'STEP',\r\n    name: 'STEP',\r\n    mintAddress: 'StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT',\r\n    decimals: 9,\r\n    referrer: 'EFQVX1S6dFroDDhJDAnMTX4fCfjt4fJXHdk1eEtJ2uRY'\r\n  },\r\n  MEDIA: {\r\n    symbol: 'MEDIA',\r\n    name: 'MEDIA',\r\n    mintAddress: 'ETAtLmCmsoiEEKfNrHKJ2kYy3MoABhU6NQvpSfij5tDs',\r\n    decimals: 6,\r\n    referrer: 'AYnaG3AidNWFzjq9U3BJSsQ9DShE8g7FszriBDtRFvsx'\r\n  },\r\n  ROPE: {\r\n    symbol: 'ROPE',\r\n    name: 'ROPE',\r\n    mintAddress: '8PMHT4swUMtBzgHnh5U564N5sjPSiUz2cjEQzFnnP1Fo',\r\n    decimals: 9,\r\n    referrer: '5sGVVniBSPLTwRHDETShovq7STRH2rJwbvdvvH3NcVTF'\r\n  },\r\n  MER: {\r\n    symbol: 'MER',\r\n    name: 'Mercurial',\r\n    mintAddress: 'MERt85fc5boKw3BW1eYdxonEuJNvXbiMbs6hvheau5K',\r\n    decimals: 6,\r\n    referrer: '36F4ryvqaNW2yKQsAry4ZHCZ3j7tz3gtEz7NEwv7pSRu'\r\n  },\r\n  TULIP: {\r\n    symbol: 'TULIP',\r\n    name: 'TULIP',\r\n    mintAddress: 'TuLipcqtGVXP9XR62wM8WWCm6a9vhLs7T1uoWBk6FDs',\r\n    decimals: 6,\r\n    referrer: 'Bcw1TvX8jUj6CtY2a7GU2THeYVAudvmT8yzRypVMVsSH'\r\n  },\r\n  WOO: {\r\n    symbol: 'WOO',\r\n    name: 'WOO',\r\n    mintAddress: 'E5rk3nmgLUuKUiS94gg4bpWwWwyjCMtddsAXkTFLtHEy',\r\n    decimals: 6,\r\n    referrer: '7UbeAZxpza5zN3QawQ5KsUo88zXvohUncYB9Zk5QCiim'\r\n  },\r\n  SNY: {\r\n    symbol: 'SNY',\r\n    name: 'SNY',\r\n    mintAddress: '4dmKkXNHdgYsXqBHCuMikNQWwVomZURhYvkkX5c4pQ7y',\r\n    decimals: 6,\r\n    referrer: 'G7gyaTNn2hgjF67SWs4Ee9PEaFU2xadhtXL8HmkJ2cNL'\r\n  },\r\n  BOP: {\r\n    symbol: 'BOP',\r\n    name: 'BOP',\r\n    mintAddress: 'BLwTnYKqf7u4qjgZrrsKeNs2EzWkMLqVCu6j8iHyrNA3',\r\n    decimals: 8,\r\n    referrer: 'FWxBZmNsvNckx8DnaL2NuyMtiQmT1x529WwV4e1UWiGk'\r\n  },\r\n  SLRS: {\r\n    symbol: 'SLRS',\r\n    name: 'SLRS',\r\n    mintAddress: 'SLRSSpSLUTP7okbCUBYStWCo1vUgyt775faPqz8HUMr',\r\n    decimals: 6,\r\n    referrer: 'AmqeHgTdm6kBzy5ewZFKuMAfbynZmhve1GQxbJzQFLbP'\r\n  },\r\n  SAMO: {\r\n    symbol: 'SAMO',\r\n    name: 'SAMO',\r\n    mintAddress: '7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU',\r\n    decimals: 9,\r\n    referrer: 'FnMDNFL9t8EpbADSU3hLWBtx7SuwRBB6NM84U3PzSkUu'\r\n  }\r\n}","import { BonfidaTrade } from './types';\r\n\r\nexport default class BonfidaApi {\r\n  static URL: string = 'https://serum-api.bonfida.com/';\r\n\r\n  static async get(path: string) {\r\n    try {\r\n      const response = await fetch(this.URL + path);\r\n      if (response.ok) {\r\n        const responseJson = await response.json();\r\n        return responseJson.success ? responseJson.data : null;\r\n      }\r\n    } catch (err) {\r\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static async getRecentTrades(\r\n    marketAddress: string,\r\n  ): Promise<BonfidaTrade[] | null> {\r\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\r\n  }\r\n}\r\n\r\nexport const BONFIDA_DATA_FEED = 'https://serum-api.bonfida.com/tv';\r\n","import {\r\n  Balances,\r\n  CustomMarketInfo,\r\n  DeprecatedOpenOrdersBalances,\r\n  FullMarketInfo,\r\n  MarketContextValues,\r\n  MarketInfo,\r\n  OrderWithMarketAndMarketName,\r\n  SelectedTokenAccounts,\r\n  TokenAccount,\r\n  Trade,\r\n} from './types';\r\nimport {\r\n  MARKETS,\r\n  Market,\r\n  OpenOrders,\r\n  Orderbook,\r\n  TOKEN_MINTS,\r\n  TokenInstructions,\r\n  decodeEventQueue,\r\n} from '@project-serum/serum';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport {getCache, setCache} from './fetch-loop';\r\nimport {\r\n  divideBnToNumber,\r\n  floorToDecimal,\r\n  getTokenMultiplierFromDecimals,\r\n  useLocalStorageState,\r\n} from './utils';\r\nimport {\r\n  getTokenAccountInfo,\r\n  parseTokenAccountData,\r\n  useMintInfos,\r\n} from './tokens';\r\nimport { refreshCache, useAsyncData } from './fetch-loop';\r\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\r\n\r\nimport BN from 'bn.js';\r\nimport BonfidaApi from './bonfidaConnector';\r\nimport { Order } from '@project-serum/serum/lib/market';\r\nimport { PublicKey , Connection} from '@solana/web3.js';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\nimport { notify } from './notifications';\r\nimport { sleep } from './utils';\r\nimport tuple from 'immutable-tuple';\r\nimport { useWallet } from './wallet';\r\n\r\n// Used in debugging, should be false in production\r\nconst _IGNORE_DEPRECATED = false;\r\n\r\nconst _MARKETS = [\r\n  {\r\n    name: 'RAY/WUSDT',\r\n    deprecated: false,\r\n    address: new PublicKey('C4z32zw9WKaGPhNuU54ohzrV4CE1Uau3cFx6T8RLjxYC'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'RAY/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('2xiv8A5xrJ7RnGdxXB42uFEkYHJjszEhaJyKKt4WaLep'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'RAY/SRM',\r\n    deprecated: false,\r\n    address: new PublicKey('Cm4MmknScg7qbKqytb1mM92xgDxv3TNXos4tKbBqTDy7'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'RAY/SOL',\r\n    deprecated: false,\r\n    address: new PublicKey('C6tp2RVZnxBPFbnAsfTjis8BN9tycESAT4SgDQgbbrsA'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'RAY/ETH',\r\n    deprecated: false,\r\n    address: new PublicKey('6jx6aoNFbmorwyncVP5V5ESKfuFc9oUYebob1iF6tgN4'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'RAY/USDT-V2',\r\n    deprecated: true,\r\n    address: new PublicKey('HZyhLoyAnfQ72irTdqPdWo2oFL9zzXaBmAqN72iF3sdX'),\r\n    programId: new PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o'),\r\n  },\r\n  {\r\n    name: 'RAY/USDC-V2',\r\n    deprecated: true,\r\n    address: new PublicKey('Bgz8EEMBjejAGSn6FdtKJkSGtvg4cuJUuRwaCBp28S3U'),\r\n    programId: new PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o'),\r\n  },\r\n  {\r\n    name: 'RAY/SRM-V2',\r\n    deprecated: true,\r\n    address: new PublicKey('HSGuveQDXtvYR432xjpKPgHfzWQxnb3T8FNuAAvaBbsU'),\r\n    programId: new PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o'),\r\n  },\r\n  {\r\n    name: 'OXY/WUSDT',\r\n    deprecated: true,\r\n    address: new PublicKey('HdBhZrnrxpje39ggXnTb6WuTWVvj5YKcSHwYGQCRsVj'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'OXY/USDC',\r\n    deprecated: true,\r\n    address: new PublicKey('GZ3WBFsqntmERPwumFEYgrX2B7J7G11MzNZAy7Hje27X'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'FIDA/RAY',\r\n    deprecated: false,\r\n    address: new PublicKey('9wH4Krv8Vim3op3JAu5NGZQdGxU8HLGAHZh3K77CemxC'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'OXY/RAY',\r\n    deprecated: false,\r\n    address: new PublicKey('HcVjkXmvA1815Es3pSiibsRaFw8r9Gy7BhyzZX83Zhjx'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'MAPS/RAY',\r\n    deprecated: false,\r\n    address: new PublicKey('7Q4hee42y8ZGguqKmwLhpFNqVTjeVNNBqhx8nt32VF85'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'KIN/RAY',\r\n    deprecated: false,\r\n    address: new PublicKey('Fcxy8qYgs8MZqiLx2pijjay6LHsSUqXW47pwMGysa3i9'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'YFI/SRM',\r\n    deprecated: false,\r\n    address: new PublicKey('6xC1ia74NbGZdBkySTw93wdxN4Sh2VfULtXh1utPaJDJ'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'FTT/SRM',\r\n    deprecated: false,\r\n    address: new PublicKey('CDvQqnMrt9rmjAxGGE6GTPUdzLpEhgNuNZ1tWAvPsF3W'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'BTC/SRM',\r\n    deprecated: false,\r\n    address: new PublicKey('HfsedaWauvDaLPm6rwgMc6D5QRmhr8siqGtS6tf2wthU'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'SUSHI/SRM',\r\n    deprecated: false,\r\n    address: new PublicKey('FGYAizUhNEC9GBmj3UyxdiRWmGjR3TfzMq2dznwYnjtH'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'TOMO/SRM',\r\n    deprecated: false,\r\n    address: new PublicKey('7jBrpiq3w2ywzzb54K9SoosZKy7nhuSQK9XrsgSMogFH'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'LINK/SRM',\r\n    deprecated: false,\r\n    address: new PublicKey('FafaYTnhDbLAFsr5qkD2ZwapRxaPrEn99z59UG4zqRmZ'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'ETH/SRM',\r\n    deprecated: false,\r\n    address: new PublicKey('3Dpu2kXk87mF9Ls9caWCHqyBiv9gK3PwQkSvnrHZDrmi'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'STEP/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('97qCB4cAVSTthvJu3eNoEx6AY6DLuRDtCoPm5Tdyg77S'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'MEDIA/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('FfiqqvJcVL7oCCu8WQUMHLUC2dnHQPAPjTdSzsERFWjb'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'ROPE/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('4Sg1g8U2ZuGnGYxAhc6MmX9MX7yZbrrraPkCQ9MdCPtF'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'COPE/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('6fc7v3PmjZG9Lk2XTot6BywGyYLkBQuzuFKd4FpCsPxk'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'MER/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('G4LcexdCzzJUKZfqyVDQFzpkjhB1JoCNL8Kooxi9nJz5'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'TULIP/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('8GufnKq7YnXKhnB3WNhgy5PzU9uvHbaaRrZWQK6ixPxW'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'WOO/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('2Ux1EYeWsxywPKouRCNiALCZ1y3m563Tc4hq1kQganiq'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'SNY/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('DPfj2jYwPaezkCmUNm5SSYfkrkz8WFqwGLcxDDUsN3gA'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'BOP/RAY',\r\n    deprecated: false,\r\n    address: new PublicKey('6Fcw8aEs7oP7YeuMrM2JgAQUotYxa4WHKHWdLLXssA3R'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'SLRS/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('2Gx3UfV831BAh8uQv1FKSPKS9yajfeeD8GJ4ZNb2o2YP'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'SAMO/RAY',\r\n    deprecated: false,\r\n    address: new PublicKey('AAfgwhNU5LMjHojes1SFmENNjihQBDKdDDT1jog4NV8w'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  // ...MARKETS,\r\n];\r\n\r\nMARKETS.map(item => {\r\n  if (item.address.toBase58() !== '5GAPymgnnWieGcRrcghZdA3aanefqa4cZx1ZSE8UTyMV') {\r\n    if (item.address.toBase58() === '7MpMwArporUHEGW7quUpkPZp5L5cHPs9eKUfKCdaPHq2') {\r\n      _MARKETS.push( {\r\n        address: item.address,\r\n        name: 'xCOPE/USDC',\r\n        programId: item.programId,\r\n        deprecated: item.deprecated,\r\n    })\r\n    } else {\r\n      _MARKETS.push(item)\r\n    }\r\n    \r\n  }\r\n})\r\n\r\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\r\n  ? _MARKETS.map((m) => ({ ...m, deprecated: false }))\r\n  : _MARKETS;\r\n\r\nexport function useMarketsList() {\r\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\r\n}\r\n\r\nexport function useAllMarkets() {\r\n  const connection = useConnection();\r\n  const { customMarkets } = useCustomMarkets();\r\n\r\n  const getAllMarkets = async () => {\r\n    const markets: Array<{\r\n      market: Market;\r\n      marketName: string;\r\n      programId: PublicKey;\r\n    } | null> = await Promise.all(\r\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\r\n        try {\r\n          const market = await Market.load(\r\n            connection,\r\n            marketInfo.address,\r\n            {},\r\n            marketInfo.programId,\r\n          );\r\n          return {\r\n            market,\r\n            marketName: marketInfo.name,\r\n            programId: marketInfo.programId,\r\n          };\r\n        } catch (e) {\r\n          notify({\r\n            message: 'Error loading all market',\r\n            description: e.message,\r\n            type: 'error',\r\n          });\r\n          return null;\r\n        }\r\n      }),\r\n    );\r\n    return markets.filter(\r\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\r\n        !!m,\r\n    );\r\n  };\r\n  return useAsyncData(\r\n    getAllMarkets,\r\n    tuple('getAllMarkets', customMarkets.length, connection),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useUnmigratedOpenOrdersAccounts() {\r\n  const connection = useConnection();\r\n  const { wallet } = useWallet();\r\n\r\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\r\n    if (!wallet || !connection || !wallet.publicKey) {\r\n      return [];\r\n    }\r\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\r\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\r\n    const deprecatedProgramIds = Array.from(\r\n      new Set(\r\n        USE_MARKETS.filter(\r\n          ({ deprecated }) => deprecated,\r\n        ).map(({ programId }) => programId.toBase58()),\r\n      ),\r\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\r\n    let programId: PublicKey;\r\n    for (programId of deprecatedProgramIds) {\r\n      try {\r\n        const openOrdersAccounts = await OpenOrders.findForOwner(\r\n          connection,\r\n          wallet.publicKey,\r\n          programId,\r\n        );\r\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\r\n          openOrdersAccounts\r\n            .filter(\r\n              (openOrders) =>\r\n                openOrders.baseTokenTotal.toNumber() ||\r\n                openOrders.quoteTokenTotal.toNumber(),\r\n            )\r\n            .filter((openOrders) =>\r\n              USE_MARKETS.some(\r\n                (market) =>\r\n                  market.deprecated && market.address.equals(openOrders.market),\r\n              ),\r\n            ),\r\n        );\r\n      } catch (e) {\r\n        console.log(\r\n          'Error loading deprecated markets',\r\n          programId?.toBase58(),\r\n          e.message,\r\n        );\r\n      }\r\n    }\r\n    // Maybe sort\r\n    return deprecatedOpenOrdersAccounts;\r\n  }\r\n\r\n  const cacheKey = tuple(\r\n    'getUnmigratedOpenOrdersAccounts',\r\n    connection,\r\n    wallet?.publicKey?.toBase58(),\r\n  );\r\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\r\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n  });\r\n\r\n  return {\r\n    accounts,\r\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\r\n  };\r\n}\r\n\r\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\r\n  null,\r\n);\r\n\r\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\r\n\r\n// For things that don't really change\r\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\r\n\r\n// For things that change frequently\r\nconst _FAST_REFRESH_INTERVAL = 1000;\r\n\r\nexport const DEFAULT_MARKET = USE_MARKETS.find(\r\n  ({ name, deprecated }) => name === 'RAY/USDT' && !deprecated,\r\n);\r\n\r\nexport function getMarketDetails(\r\n  market: Market | undefined | null,\r\n  customMarkets: CustomMarketInfo[],\r\n): FullMarketInfo {\r\n  if (!market) {\r\n    return {};\r\n  }\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const marketInfo = marketInfos.find((otherMarket) =>\r\n    otherMarket.address.equals(market.address),\r\n  );\r\n\r\n  // add new token here\r\n  // TOKEN_MINTS.push({\r\n  //   address: new PublicKey('4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'),\r\n  //   name: 'RAY',\r\n  // });\r\n  for(let indexItem = 0 ;indexItem < TOKEN_MINTS.length; indexItem += 1) {\r\n    if (TOKEN_MINTS[indexItem].address.toString() === '3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE') {\r\n      TOKEN_MINTS[indexItem].name = 'xCOPE'\r\n    }\r\n  }\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('8HGyAAB1yoM1ttS7pXjHMa3dukTFGQggnFFH3hJZgzQh'),\r\n    name: 'COPE',\r\n  });\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT'),\r\n    name: 'STEP',\r\n  });\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('ETAtLmCmsoiEEKfNrHKJ2kYy3MoABhU6NQvpSfij5tDs'),\r\n    name: 'MEDIA',\r\n  });\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('8PMHT4swUMtBzgHnh5U564N5sjPSiUz2cjEQzFnnP1Fo'),\r\n    name: 'ROPE',\r\n  });\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('MERt85fc5boKw3BW1eYdxonEuJNvXbiMbs6hvheau5K'),\r\n    name: 'MER',\r\n  });\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('TuLipcqtGVXP9XR62wM8WWCm6a9vhLs7T1uoWBk6FDs'),\r\n    name: 'TULIP',\r\n  });\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('E5rk3nmgLUuKUiS94gg4bpWwWwyjCMtddsAXkTFLtHEy'),\r\n    name: 'WOO',\r\n  });\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('4dmKkXNHdgYsXqBHCuMikNQWwVomZURhYvkkX5c4pQ7y'),\r\n    name: 'SNY',\r\n  });\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('BLwTnYKqf7u4qjgZrrsKeNs2EzWkMLqVCu6j8iHyrNA3'),\r\n    name: 'BOP',\r\n  });\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('SLRSSpSLUTP7okbCUBYStWCo1vUgyt775faPqz8HUMr'),\r\n    name: 'SLRS',\r\n  });\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU'),\r\n    name: 'SAMO',\r\n  });\r\n\r\n  const baseCurrency =\r\n    (market?.baseMintAddress &&\r\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\r\n        ?.name) ||\r\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\r\n    'UNKNOWN';\r\n  const quoteCurrency =\r\n    (market?.quoteMintAddress &&\r\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\r\n        ?.name) ||\r\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\r\n    'UNKNOWN';\r\n  return {\r\n    ...marketInfo,\r\n    marketName: marketInfo?.name,\r\n    baseCurrency,\r\n    quoteCurrency,\r\n    marketInfo,\r\n  };\r\n}\r\n\r\nexport function useCustomMarkets() {\r\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\r\n    CustomMarketInfo[]\r\n  >('customMarkets', []);\r\n  return { customMarkets, setCustomMarkets };\r\n}\r\n\r\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\r\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\r\n\r\n  const address = marketAddress && new PublicKey(marketAddress);\r\n  const connection = useConnection();\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const marketInfo =\r\n    address && marketInfos.find((market) => market.address.equals(address));\r\n\r\n  const [market, setMarket] = useState<Market | null>();\r\n\r\n  const [marketName, setMarketName] = useState('RAY/USDT');\r\n\r\n  // Replace existing market with a non-deprecated one on first load\r\n  useEffect(() => {\r\n    if (marketInfo) {\r\n      if (marketInfo.deprecated) {\r\n        console.log('Switching markets from deprecated', marketInfo);\r\n        if (DEFAULT_MARKET) {\r\n          // setMarketAddress(DEFAULT_MARKET.address.toBase58());\r\n          setMarketAddress('C4z32zw9WKaGPhNuU54ohzrV4CE1Uau3cFx6T8RLjxYC');\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      market &&\r\n      marketInfo &&\r\n      // @ts-ignore\r\n      market._decoded.ownAddress?.equals(marketInfo?.address)\r\n    ) {\r\n      return;\r\n    }\r\n    setMarket(null);\r\n\r\n    if (!marketInfo || !marketInfo.address) {\r\n      notify({\r\n        message: 'Error loading market',\r\n        description: 'Please select a market from the dropdown',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } else {\r\n      setMarketName(marketInfo.name);\r\n    }\r\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\r\n      .then(setMarket)\r\n      .catch((e) =>\r\n        notify({\r\n          message: 'Error loading market',\r\n          description: e.message,\r\n          type: 'error',\r\n        }),\r\n      );\r\n    // eslint-disable-next-line\r\n  }, [connection, marketInfo]);\r\n\r\n  return (\r\n    <MarketContext.Provider\r\n      value={{\r\n        market,\r\n        ...getMarketDetails(market, customMarkets),\r\n        setMarketAddress,\r\n        customMarkets,\r\n        setCustomMarkets,\r\n        marketName,\r\n      }}\r\n    >\r\n      {children}\r\n    </MarketContext.Provider>\r\n  );\r\n}\r\n\r\nexport function getTradePageUrl(marketAddress?: string) {\r\n  if (!marketAddress) {\r\n    const saved = localStorage.getItem('marketAddress');\r\n    if (saved) {\r\n      marketAddress = JSON.parse(saved);\r\n    }\r\n    marketAddress = marketAddress || DEFAULT_MARKET?.address.toBase58() || '';\r\n  }\r\n  return `/market/${marketAddress}`;\r\n}\r\n\r\nexport function useSelectedTokenAccounts(): [\r\n  SelectedTokenAccounts,\r\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\r\n] {\r\n  const [\r\n    selectedTokenAccounts,\r\n    setSelectedTokenAccounts,\r\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\r\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\r\n}\r\n\r\nexport function useMarket() {\r\n  const context = useContext(MarketContext);\r\n  if (!context) {\r\n    throw new Error('Missing market context');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useMarkPrice() {\r\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\r\n\r\n  const [orderbook] = useOrderbook();\r\n  const trades = useTrades();\r\n\r\n  useEffect(() => {\r\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\r\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\r\n    let last = trades && trades.length > 0 && trades[0].price;\r\n\r\n    let markPrice =\r\n      bb && ba\r\n        ? last\r\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\r\n          : (bb + ba) / 2\r\n        : null;\r\n\r\n    setMarkPrice(markPrice);\r\n  }, [orderbook, trades]);\r\n\r\n  return markPrice;\r\n}\r\n\r\nexport function _useUnfilteredTrades(limit = 10000) {\r\n  const { market } = useMarket();\r\n  const connection = useConnection();\r\n  async function getUnfilteredTrades(): Promise<any[] | null> {\r\n    if (!market || !connection) {\r\n      return null;\r\n    }\r\n    return await market.loadFills(connection, limit);\r\n  }\r\n  const [trades] = useAsyncData(\r\n    getUnfilteredTrades,\r\n    tuple('getUnfilteredTrades', market, connection),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n  return trades;\r\n  // NOTE: For now, websocket is too expensive since the event queue is large\r\n  // and updates very frequently\r\n\r\n  // let data = useAccountData(market && market._decoded.eventQueue);\r\n  // if (!data) {\r\n  //   return null;\r\n  // }\r\n  // const events = decodeEventQueue(data, limit);\r\n  // return events\r\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\r\n  //   .map(market.parseFillEvent.bind(market));\r\n}\r\n\r\nexport function useBonfidaTrades() {\r\n  const { market } = useMarket();\r\n  const marketAddress = market?.address.toBase58();\r\n\r\n  async function getBonfidaTrades() {\r\n    if (!marketAddress) {\r\n      return null;\r\n    }\r\n    return await BonfidaApi.getRecentTrades(marketAddress);\r\n  }\r\n\r\n  return useAsyncData(\r\n    getBonfidaTrades,\r\n    tuple('getBonfidaTrades', marketAddress),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n    false,\r\n  );\r\n}\r\n\r\nexport function useOrderbookAccounts() {\r\n  const { market } = useMarket();\r\n  // @ts-ignore\r\n  let bidData = useAccountData(market && market._decoded.bids);\r\n  // @ts-ignore\r\n  let askData = useAccountData(market && market._decoded.asks);\r\n  return {\r\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\r\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\r\n  };\r\n}\r\n\r\nexport function useOrderbook(\r\n  depth = 20,\r\n): [{ bids: number[][]; asks: number[][] }, boolean] {\r\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\r\n  const { market } = useMarket();\r\n  const bids =\r\n    !bidOrderbook || !market\r\n      ? []\r\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\r\n  const asks =\r\n    !askOrderbook || !market\r\n      ? []\r\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\r\n  return [{ bids, asks }, !!bids || !!asks];\r\n}\r\n\r\n// Want the balances table to be fast-updating, dont want open orders to flicker\r\n// TODO: Update to use websocket\r\nexport function useOpenOrdersAccounts(fast = false) {\r\n  const { market } = useMarket();\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getOpenOrdersAccounts() {\r\n    if (!connected || !wallet) {\r\n      return null;\r\n    }\r\n    if (!market) {\r\n      return null;\r\n    }\r\n    return await market.findOpenOrdersAccountsForOwner(\r\n      connection,\r\n      wallet.publicKey,\r\n    );\r\n  }\r\n  return useAsyncData<OpenOrders[] | null>(\r\n    getOpenOrdersAccounts,\r\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\r\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\n// todo: refresh cache after some time?\r\nexport async function getCachedMarket(connection: Connection, address: PublicKey, programId: PublicKey) {\r\n  let market;\r\n  const cacheKey = tuple('getCachedMarket', 'market', address.toString(), connection);\r\n  if (!getCache(cacheKey)) {\r\n    market = await Market.load(connection, address, {}, programId)\r\n    setCache(cacheKey, market)\r\n  } else {\r\n    market = getCache(cacheKey);\r\n  }\r\n  return market;\r\n}\r\n\r\nexport async function getCachedOpenOrderAccounts(connection: Connection, market: Market, owner: PublicKey) {\r\n  let accounts;\r\n  const cacheKey = tuple('getCachedOpenOrderAccounts', market.address.toString(), owner.toString(), connection);\r\n  if (!getCache(cacheKey)) {\r\n    accounts = await market.findOpenOrdersAccountsForOwner(\r\n      connection,\r\n      owner,\r\n    );\r\n    setCache(cacheKey, accounts);\r\n  } else {\r\n    accounts = getCache(cacheKey);\r\n  }\r\n  return accounts;\r\n}\r\n\r\nexport function useSelectedOpenOrdersAccount(fast = false) {\r\n  const [accounts] = useOpenOrdersAccounts(fast);\r\n  if (!accounts) {\r\n    return null;\r\n  }\r\n  return accounts[0];\r\n}\r\n\r\nexport function useTokenAccounts(): [\r\n  TokenAccount[] | null | undefined,\r\n  boolean,\r\n] {\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getTokenAccounts() {\r\n    if (!connected || !wallet) {\r\n      return null;\r\n    }\r\n    return await getTokenAccountInfo(connection, wallet.publicKey);\r\n  }\r\n  return useAsyncData(\r\n    getTokenAccounts,\r\n    tuple('getTokenAccounts', wallet, connected),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function getSelectedTokenAccountForMint(\r\n  accounts: TokenAccount[] | undefined | null,\r\n  mint: PublicKey | undefined,\r\n  selectedPubKey?: string | PublicKey | null,\r\n) {\r\n  if (!accounts || !mint) {\r\n    return null;\r\n  }\r\n  const filtered = accounts.filter(\r\n    ({ effectiveMint, pubkey }) =>\r\n      mint.equals(effectiveMint) &&\r\n      (!selectedPubKey ||\r\n        (typeof selectedPubKey === 'string'\r\n          ? selectedPubKey\r\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\r\n  );\r\n  return filtered && filtered[0];\r\n}\r\n\r\nexport function useSelectedQuoteCurrencyAccount() {\r\n  const [accounts] = useTokenAccounts();\r\n  const { market } = useMarket();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const mintAddress = market?.quoteMintAddress;\r\n  return getSelectedTokenAccountForMint(\r\n    accounts,\r\n    mintAddress,\r\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\r\n  );\r\n}\r\n\r\nexport function useSelectedBaseCurrencyAccount() {\r\n  const [accounts] = useTokenAccounts();\r\n  const { market } = useMarket();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const mintAddress = market?.baseMintAddress;\r\n  return getSelectedTokenAccountForMint(\r\n    accounts,\r\n    mintAddress,\r\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\r\n  );\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useSelectedQuoteCurrencyBalances() {\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const { market } = useMarket();\r\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\r\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\r\n    return null;\r\n  }\r\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\r\n    return accountInfo?.lamports / 1e9 ?? 0;\r\n  }\r\n  return market.quoteSplSizeToNumber(\r\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\r\n  );\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useSelectedBaseCurrencyBalances() {\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const { market } = useMarket();\r\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\r\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\r\n    return null;\r\n  }\r\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\r\n    return accountInfo?.lamports / 1e9 ?? 0;\r\n  }\r\n  return market.baseSplSizeToNumber(\r\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\r\n  );\r\n}\r\n\r\nexport function useOpenOrders() {\r\n  const { market, marketName } = useMarket();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\r\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\r\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\r\n    return null;\r\n  }\r\n  return market\r\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\r\n    .map((order) => ({ ...order, marketName, market }));\r\n}\r\n\r\nexport function useTrades(limit = 100) {\r\n  const trades = _useUnfilteredTrades(limit);\r\n  if (!trades) {\r\n    return null;\r\n  }\r\n  // Until partial fills are each given their own fill, use maker fills\r\n  return trades\r\n    .filter(({ eventFlags }) => eventFlags.maker)\r\n    .map((trade) => ({\r\n      ...trade,\r\n      side: trade.side === 'buy' ? 'sell' : 'buy',\r\n    }));\r\n}\r\n\r\nexport function useLocallyStoredFeeDiscountKey(): {\r\n  storedFeeDiscountKey: PublicKey | undefined;\r\n  setStoredFeeDiscountKey: (key: string) => void;\r\n} {\r\n  const [\r\n    storedFeeDiscountKey,\r\n    setStoredFeeDiscountKey,\r\n  ] = useLocalStorageState<string>(`feeDiscountKey`, undefined);\r\n  return {\r\n    storedFeeDiscountKey: storedFeeDiscountKey\r\n      ? new PublicKey(storedFeeDiscountKey)\r\n      : undefined,\r\n    setStoredFeeDiscountKey,\r\n  };\r\n}\r\n\r\nexport function useFeeDiscountKeys(): [\r\n  (\r\n    | {\r\n        pubkey: PublicKey;\r\n        feeTier: number;\r\n        balance: number;\r\n        mint: PublicKey;\r\n      }[]\r\n    | null\r\n    | undefined\r\n  ),\r\n  boolean,\r\n] {\r\n  const { market } = useMarket();\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\r\n  let getFeeDiscountKeys = async () => {\r\n    if (!connected || !wallet) {\r\n      return null;\r\n    }\r\n    if (!market) {\r\n      return null;\r\n    }\r\n    const feeDiscountKey = await market.findFeeDiscountKeys(\r\n      connection,\r\n      wallet.publicKey,\r\n    );\r\n    if (feeDiscountKey) {\r\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\r\n    }\r\n    return feeDiscountKey;\r\n  };\r\n  return useAsyncData(\r\n    getFeeDiscountKeys,\r\n    tuple('getFeeDiscountKeys', wallet, market, connected),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useFills(limit = 100) {\r\n  const { marketName } = useMarket();\r\n  const fills = _useUnfilteredTrades(limit);\r\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\r\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\r\n    return null;\r\n  }\r\n  if (!fills) {\r\n    return null;\r\n  }\r\n  return fills\r\n    .filter((fill) =>\r\n      openOrdersAccounts.some((openOrdersAccount) =>\r\n        fill.openOrders.equals(openOrdersAccount.publicKey),\r\n      ),\r\n    )\r\n    .map((fill) => ({ ...fill, marketName }));\r\n}\r\n\r\nexport function useAllOpenOrdersAccounts() {\r\n  const { wallet, connected } = useWallet();\r\n  const connection = useConnection();\r\n  const marketInfos = useMarketInfos();\r\n  const programIds = [\r\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\r\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\r\n\r\n  const getAllOpenOrdersAccounts = async () => {\r\n    if (!connected || !wallet) {\r\n      return [];\r\n    }\r\n    return (\r\n      await Promise.all(\r\n        programIds.map((programId) =>\r\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\r\n        ),\r\n      )\r\n    ).flat();\r\n  };\r\n  return useAsyncData(\r\n    getAllOpenOrdersAccounts,\r\n    tuple(\r\n      'getAllOpenOrdersAccounts',\r\n      connection,\r\n      connected,\r\n      wallet?.publicKey?.toBase58(),\r\n      marketInfos.length,\r\n      (programIds || []).length,\r\n    ),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useAllOpenOrdersBalances() {\r\n  const [\r\n    openOrdersAccounts,\r\n    loadedOpenOrdersAccounts,\r\n  ] = useAllOpenOrdersAccounts();\r\n  const [mintInfos, mintInfosConnected] = useMintInfos();\r\n  const [allMarkets] = useAllMarkets();\r\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\r\n    return {};\r\n  }\r\n\r\n  const marketsByAddress = Object.fromEntries(\r\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\r\n  );\r\n  const openOrdersBalances: {\r\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\r\n  } = {};\r\n  for (let account of openOrdersAccounts || []) {\r\n    const marketInfo = marketsByAddress[account.market.toBase58()];\r\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\r\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\r\n    if (!(baseMint in openOrdersBalances)) {\r\n      openOrdersBalances[baseMint] = [];\r\n    }\r\n    if (!(quoteMint in openOrdersBalances)) {\r\n      openOrdersBalances[quoteMint] = [];\r\n    }\r\n\r\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\r\n    const baseFree = divideBnToNumber(\r\n      new BN(account.baseTokenFree),\r\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\r\n    );\r\n    const baseTotal = divideBnToNumber(\r\n      new BN(account.baseTokenTotal),\r\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\r\n    );\r\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\r\n    const quoteFree = divideBnToNumber(\r\n      new BN(account.quoteTokenFree),\r\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\r\n    );\r\n    const quoteTotal = divideBnToNumber(\r\n      new BN(account.quoteTokenTotal),\r\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\r\n    );\r\n\r\n    openOrdersBalances[baseMint].push({\r\n      market: account.market,\r\n      free: baseFree,\r\n      total: baseTotal,\r\n    });\r\n    openOrdersBalances[quoteMint].push({\r\n      market: account.market,\r\n      free: quoteFree,\r\n      total: quoteTotal,\r\n    });\r\n  }\r\n  return openOrdersBalances;\r\n}\r\n\r\nexport const useAllOpenOrders = (): {\r\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\r\n  loaded: boolean;\r\n  refreshOpenOrders: () => void;\r\n} => {\r\n  const connection = useConnection();\r\n  const { connected, wallet } = useWallet();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [refresh, setRefresh] = useState(0);\r\n  const [openOrders, setOpenOrders] = useState<\r\n    { orders: Order[]; marketAddress: string }[] | null | undefined\r\n  >(null);\r\n  const [lastRefresh, setLastRefresh] = useState(0);\r\n\r\n  const refreshOpenOrders = () => {\r\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\r\n      setRefresh((prev) => prev + 1);\r\n    } else {\r\n      console.log('not refreshing');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (connected && wallet) {\r\n      const getAllOpenOrders = async () => {\r\n        setLoaded(false);\r\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\r\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\r\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\r\n          try {\r\n            const market = await Market.load(\r\n              connection,\r\n              marketInfo.address,\r\n              undefined,\r\n              marketInfo.programId,\r\n            );\r\n            const orders = await market.loadOrdersForOwner(\r\n              connection,\r\n              wallet?.publicKey,\r\n              30000,\r\n            );\r\n            _openOrders.push({\r\n              orders: orders,\r\n              marketAddress: marketInfo.address.toBase58(),\r\n            });\r\n          } catch (e) {\r\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\r\n          }\r\n        };\r\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\r\n        setOpenOrders(_openOrders);\r\n        setLastRefresh(new Date().getTime());\r\n        setLoaded(true);\r\n      };\r\n      getAllOpenOrders();\r\n    }\r\n  }, [connection, connected, wallet, refresh]);\r\n  return {\r\n    openOrders: openOrders,\r\n    loaded: loaded,\r\n    refreshOpenOrders: refreshOpenOrders,\r\n  };\r\n};\r\n\r\nexport function useBalances(): Balances[] {\r\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\r\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\r\n  const openOrders = useSelectedOpenOrdersAccount(true);\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const baseExists =\r\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\r\n  const quoteExists =\r\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\r\n  if (\r\n    baseCurrency === 'UNKNOWN' ||\r\n    quoteCurrency === 'UNKNOWN' ||\r\n    !baseCurrency ||\r\n    !quoteCurrency\r\n  ) {\r\n    return [];\r\n  }\r\n  return [\r\n    {\r\n      market,\r\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\r\n      coin: baseCurrency,\r\n      wallet: baseCurrencyBalances,\r\n      orders:\r\n        baseExists && market && openOrders\r\n          ? market.baseSplSizeToNumber(\r\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\r\n            )\r\n          : null,\r\n      openOrders,\r\n      unsettled:\r\n        baseExists && market && openOrders\r\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\r\n          : null,\r\n    },\r\n    {\r\n      market,\r\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\r\n      coin: quoteCurrency,\r\n      wallet: quoteCurrencyBalances,\r\n      openOrders,\r\n      orders:\r\n        quoteExists && market && openOrders\r\n          ? market.quoteSplSizeToNumber(\r\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\r\n            )\r\n          : null,\r\n      unsettled:\r\n        quoteExists && market && openOrders\r\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\r\n          : null,\r\n    },\r\n  ];\r\n}\r\n\r\nexport function useWalletBalancesForAllMarkets(): {\r\n  mint: string;\r\n  balance: number;\r\n}[] {\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const { connected } = useWallet();\r\n  const [mintInfos, mintInfosConnected] = useMintInfos();\r\n\r\n  if (!connected || !mintInfosConnected) {\r\n    return [];\r\n  }\r\n\r\n  let balances: { [mint: string]: number } = {};\r\n  for (let account of tokenAccounts || []) {\r\n    if (!account.account) {\r\n      continue;\r\n    }\r\n    let parsedAccount;\r\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\r\n      parsedAccount = {\r\n        mint: WRAPPED_SOL_MINT,\r\n        owner: account.pubkey,\r\n        amount: account.account.lamports,\r\n      };\r\n    } else {\r\n      parsedAccount = parseTokenAccountData(account.account.data);\r\n    }\r\n    if (!(parsedAccount.mint.toBase58() in balances)) {\r\n      balances[parsedAccount.mint.toBase58()] = 0;\r\n    }\r\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\r\n    const additionalAmount = divideBnToNumber(\r\n      new BN(parsedAccount.amount),\r\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\r\n    );\r\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\r\n  }\r\n  return Object.entries(balances).map(([mint, balance]) => {\r\n    return { mint, balance };\r\n  });\r\n}\r\n\r\nexport function useUnmigratedDeprecatedMarkets() {\r\n  const connection = useConnection();\r\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\r\n  const marketsList =\r\n    accounts &&\r\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\r\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\r\n\r\n  const useUnmigratedDeprecatedMarketsInner = async () => {\r\n    if (!marketsList) {\r\n      return null;\r\n    }\r\n    const getMarket = async (address) => {\r\n      const marketInfo = USE_MARKETS.find((market) =>\r\n        market.address.equals(address),\r\n      );\r\n      if (!marketInfo) {\r\n        console.log('Failed loading market');\r\n        notify({\r\n          message: 'Error loading market',\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n      try {\r\n        console.log('Loading market', marketInfo.name);\r\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\r\n        return await Market.load(\r\n          connection,\r\n          marketInfo.address,\r\n          {},\r\n          marketInfo.programId,\r\n        );\r\n      } catch (e) {\r\n        console.log('Failed loading market', marketInfo.name, e);\r\n        notify({\r\n          message: 'Error loading market',\r\n          description: e.message,\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n    };\r\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\r\n  };\r\n  const [markets] = useAsyncData(\r\n    useUnmigratedDeprecatedMarketsInner,\r\n    tuple(\r\n      'useUnmigratedDeprecatedMarketsInner',\r\n      connection,\r\n      deps && deps.toString(),\r\n    ),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n  if (!markets) {\r\n    return null;\r\n  }\r\n  return markets.map((market) => ({\r\n    market,\r\n    openOrdersList: accounts?.filter(\r\n      (openOrders) => market && openOrders.market.equals(market.address),\r\n    ),\r\n  }));\r\n}\r\n\r\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\r\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\r\n  loaded: boolean;\r\n  refreshOpenOrders: () => void;\r\n} {\r\n  const { connected, wallet } = useWallet();\r\n  const { customMarkets } = useCustomMarkets();\r\n  const connection = useConnection();\r\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\r\n  const marketsList =\r\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\r\n\r\n  // This isn't quite right: open order balances could change\r\n  const deps =\r\n    marketsList &&\r\n    marketsList\r\n      .filter((market): market is Market => !!market)\r\n      .map((market) => market.address.toBase58());\r\n\r\n  async function getOpenOrdersForDeprecatedMarkets() {\r\n    if (!connected || !wallet) {\r\n      return null;\r\n    }\r\n    if (!marketsList) {\r\n      return null;\r\n    }\r\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\r\n    const getOrders = async (market: Market | null) => {\r\n      if (!market) {\r\n        return null;\r\n      }\r\n      const { marketName } = getMarketDetails(market, customMarkets);\r\n      try {\r\n        console.log('Fetching open orders for', marketName);\r\n        // Can do better than this, we have the open orders accounts already\r\n        return (\r\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\r\n        ).map((order) => ({ marketName, market, ...order }));\r\n      } catch (e) {\r\n        console.log('Failed loading open orders', market.address.toBase58(), e);\r\n        notify({\r\n          message: `Error loading open orders for deprecated ${marketName}`,\r\n          description: e.message,\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n    };\r\n    return (await Promise.all(marketsList.map(getOrders)))\r\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\r\n      .flat();\r\n  }\r\n\r\n  const cacheKey = tuple(\r\n    'getOpenOrdersForDeprecatedMarkets',\r\n    connected,\r\n    connection,\r\n    wallet,\r\n    deps && deps.toString(),\r\n  );\r\n  const [openOrders, loaded] = useAsyncData(\r\n    getOpenOrdersForDeprecatedMarkets,\r\n    cacheKey,\r\n    {\r\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n    },\r\n  );\r\n  console.log('openOrders', openOrders);\r\n  return {\r\n    openOrders,\r\n    loaded,\r\n    refreshOpenOrders: () => refreshCache(cacheKey),\r\n  };\r\n}\r\n\r\nexport function useBalancesForDeprecatedMarkets() {\r\n  const markets = useUnmigratedDeprecatedMarkets();\r\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\r\n    'customMarkets',\r\n    [],\r\n  );\r\n  if (!markets) {\r\n    return null;\r\n  }\r\n\r\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\r\n  markets.forEach(({ market, openOrdersList }) => {\r\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\r\n      market,\r\n      customMarkets,\r\n    );\r\n    if (!baseCurrency || !quoteCurrency || !market) {\r\n      return;\r\n    }\r\n    (openOrdersList || []).forEach((openOrders) => {\r\n      const inOrdersBase =\r\n        openOrders?.baseTokenTotal &&\r\n        openOrders?.baseTokenFree &&\r\n        market.baseSplSizeToNumber(\r\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\r\n        );\r\n      const inOrdersQuote =\r\n        openOrders?.quoteTokenTotal &&\r\n        openOrders?.quoteTokenFree &&\r\n        market.baseSplSizeToNumber(\r\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\r\n        );\r\n      const unsettledBase =\r\n        openOrders?.baseTokenFree &&\r\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\r\n      const unsettledQuote =\r\n        openOrders?.quoteTokenFree &&\r\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\r\n\r\n      openOrderAccountBalances.push({\r\n        marketName,\r\n        market,\r\n        coin: baseCurrency,\r\n        key: `${marketName}${baseCurrency}`,\r\n        orders: inOrdersBase,\r\n        unsettled: unsettledBase,\r\n        openOrders,\r\n      });\r\n      openOrderAccountBalances.push({\r\n        marketName,\r\n        market,\r\n        coin: quoteCurrency,\r\n        key: `${marketName}${quoteCurrency}`,\r\n        orders: inOrdersQuote,\r\n        unsettled: unsettledQuote,\r\n        openOrders,\r\n      });\r\n    });\r\n  });\r\n  return openOrderAccountBalances;\r\n}\r\n\r\nexport function getMarketInfos(\r\n  customMarkets: CustomMarketInfo[],\r\n): MarketInfo[] {\r\n  const customMarketsInfo = customMarkets.map((m) => ({\r\n    ...m,\r\n    address: new PublicKey(m.address),\r\n    programId: new PublicKey(m.programId),\r\n    deprecated: false,\r\n  }));\r\n\r\n  return [...customMarketsInfo, ...USE_MARKETS];\r\n}\r\n\r\nexport function useMarketInfos() {\r\n  const { customMarkets } = useCustomMarkets();\r\n  return getMarketInfos(customMarkets);\r\n}\r\n\r\n/**\r\n * If selling, choose min tick size. If buying choose a price\r\n * s.t. given the state of the orderbook, the order will spend\r\n * `cost` cost currency.\r\n *\r\n * @param orderbook serum Orderbook object\r\n * @param cost quantity to spend. Base currency if selling,\r\n *  quote currency if buying.\r\n * @param tickSizeDecimals size of price increment of the market\r\n */\r\nexport function getMarketOrderPrice(\r\n  orderbook: Orderbook,\r\n  cost: number,\r\n  tickSizeDecimals?: number,\r\n) {\r\n  if (orderbook.isBids) {\r\n    return orderbook.market.tickSize;\r\n  }\r\n  let spentCost = 0;\r\n  let price, sizeAtLevel, costAtLevel: number;\r\n  const asks = orderbook.getL2(1000);\r\n  for ([price, sizeAtLevel] of asks) {\r\n    costAtLevel = price * sizeAtLevel;\r\n    if (spentCost + costAtLevel > cost) {\r\n      break;\r\n    }\r\n    spentCost += costAtLevel;\r\n  }\r\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\r\n  let formattedPrice;\r\n  if (tickSizeDecimals) {\r\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\r\n  } else {\r\n    formattedPrice = sendPrice;\r\n  }\r\n  return formattedPrice;\r\n}\r\n\r\nexport function getExpectedFillPrice(\r\n  orderbook: Orderbook,\r\n  cost: number,\r\n  tickSizeDecimals?: number,\r\n) {\r\n  let spentCost = 0;\r\n  let avgPrice = 0;\r\n  let price, sizeAtLevel, costAtLevel: number;\r\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\r\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\r\n    if (spentCost + costAtLevel > cost) {\r\n      avgPrice += (cost - spentCost) * price;\r\n      spentCost = cost;\r\n      break;\r\n    }\r\n    avgPrice += costAtLevel * price;\r\n    spentCost += costAtLevel;\r\n  }\r\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\r\n  let formattedPrice;\r\n  if (tickSizeDecimals) {\r\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\r\n  } else {\r\n    formattedPrice = totalAvgPrice;\r\n  }\r\n  return formattedPrice;\r\n}\r\n\r\nexport function useCurrentlyAutoSettling(): [boolean, (currentlyAutoSettling: boolean) => void] {\r\n  const [currentlyAutoSettling, setCurrentlyAutosettling] = useState<boolean>(false);\r\n  return [currentlyAutoSettling, setCurrentlyAutosettling];\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Col, Input, Modal, Row, Typography } from 'antd';\r\nimport { notify } from '../utils/notifications';\r\nimport { isValidPublicKey } from '../utils/utils';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\r\nimport { useAccountInfo, useConnection } from '../utils/connection';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function CustomMarketDialog({\r\n  visible,\r\n  onAddCustomMarket,\r\n  onClose,\r\n}) {\r\n  const connection = useConnection();\r\n\r\n  const [marketId, setMarketId] = useState('');\r\n\r\n  const [marketLabel, setMarketLabel] = useState('');\r\n  const [baseLabel, setBaseLabel] = useState('');\r\n  const [quoteLabel, setQuoteLabel] = useState('');\r\n\r\n  const [market, setMarket] = useState(null);\r\n  const [loadingMarket, setLoadingMarket] = useState(false);\r\n\r\n  const wellFormedMarketId = isValidPublicKey(marketId);\r\n\r\n  const [marketAccountInfo] = useAccountInfo(\r\n    wellFormedMarketId ? new PublicKey(marketId) : null,\r\n  );\r\n  const programId = marketAccountInfo\r\n    ? marketAccountInfo.owner.toBase58()\r\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\r\n\r\n  useEffect(() => {\r\n    if (!wellFormedMarketId || !programId) {\r\n      resetLabels();\r\n      return;\r\n    }\r\n    setLoadingMarket(true);\r\n    Market.load(\r\n      connection,\r\n      new PublicKey(marketId),\r\n      {},\r\n      new PublicKey(programId),\r\n    )\r\n      .then((market) => {\r\n        setMarket(market);\r\n      })\r\n      .catch(() => {\r\n        resetLabels();\r\n        setMarket(null);\r\n      })\r\n      .finally(() => setLoadingMarket(false));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [connection, marketId, programId]);\r\n\r\n  const resetLabels = () => {\r\n    setMarketLabel(null);\r\n    setBaseLabel(null);\r\n    setQuoteLabel(null);\r\n  };\r\n\r\n  const knownMarket = MARKETS.find(\r\n    (m) =>\r\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\r\n  );\r\n  const knownProgram = MARKETS.find(\r\n    (m) => m.programId.toBase58() === programId,\r\n  );\r\n  const knownBaseCurrency =\r\n    market?.baseMintAddress &&\r\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\r\n      ?.name;\r\n\r\n  const knownQuoteCurrency =\r\n    market?.quoteMintAddress &&\r\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\r\n      ?.name;\r\n\r\n  const canSubmit =\r\n    !loadingMarket &&\r\n    !!market &&\r\n    market.publicKey.toBase58() === marketId &&\r\n    marketId &&\r\n    programId &&\r\n    marketLabel &&\r\n    (knownBaseCurrency || baseLabel) &&\r\n    (knownQuoteCurrency || quoteLabel) &&\r\n    wellFormedMarketId;\r\n\r\n  const onSubmit = () => {\r\n    if (!canSubmit) {\r\n      notify({\r\n        message: 'Please fill in all fields with valid values',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    let params = {\r\n      address: marketId,\r\n      programId,\r\n      name: marketLabel,\r\n    };\r\n    if (!knownBaseCurrency) {\r\n      params.baseLabel = baseLabel;\r\n    }\r\n    if (!knownQuoteCurrency) {\r\n      params.quoteLabel = quoteLabel;\r\n    }\r\n    onAddCustomMarket(params);\r\n    onDoClose();\r\n  };\r\n\r\n  const onDoClose = () => {\r\n    resetLabels();\r\n    setMarket(null);\r\n    setMarketId(null);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={'Add custom market'}\r\n      visible={visible}\r\n      onOk={onSubmit}\r\n      okText={'Add'}\r\n      onCancel={onDoClose}\r\n      okButtonProps={{ disabled: !canSubmit }}\r\n    >\r\n      <div>\r\n        {wellFormedMarketId ? (\r\n          <>\r\n            {!market && !loadingMarket && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Not a valid market</Text>\r\n              </Row>\r\n            )}\r\n            {market && knownMarket && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\r\n              </Row>\r\n            )}\r\n            {market && !knownProgram && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\r\n              </Row>\r\n            )}\r\n            {market && knownProgram && knownProgram.deprecated && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\r\n              </Row>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {marketId && !wellFormedMarketId && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Invalid market ID</Text>\r\n              </Row>\r\n            )}\r\n          </>\r\n        )}\r\n        <Row style={{ marginBottom: 8 }}>\r\n          <Col span={24}>\r\n            <Input\r\n              placeholder=\"Market Id\"\r\n              value={marketId}\r\n              onChange={(e) => setMarketId(e.target.value)}\r\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\r\n          <Col span={24}>\r\n            <Input\r\n              placeholder=\"Market Label\"\r\n              disabled={!market}\r\n              value={marketLabel}\r\n              onChange={(e) => setMarketLabel(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\r\n          <Col span={12}>\r\n            <Input\r\n              placeholder=\"Base label\"\r\n              disabled={!market || knownBaseCurrency}\r\n              value={knownBaseCurrency || baseLabel}\r\n              onChange={(e) => setBaseLabel(e.target.value)}\r\n            />\r\n            {market && !knownBaseCurrency && (\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"warning\">Warning: unknown token</Text>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col span={12}>\r\n            <Input\r\n              placeholder=\"Quote label\"\r\n              disabled={!market || knownQuoteCurrency}\r\n              value={knownQuoteCurrency || quoteLabel}\r\n              onChange={(e) => setQuoteLabel(e.target.value)}\r\n            />\r\n            {market && !knownQuoteCurrency && (\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"warning\">Warning: unknown token</Text>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  // margin: 5px;\r\n  // padding: 20px;\r\n`;\r\n\r\nexport default function FloatingElement({\r\n  style = undefined,\r\n  children,\r\n  stretchVertical = false,\r\n}) {\r\n  return (\r\n    <Wrapper\r\n      style={{\r\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\r\n        ...style,\r\n      }}\r\n    >\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConfigProvider, Table } from 'antd';\r\n\r\nexport default function DataTable({\r\n  dataSource,\r\n  columns,\r\n  emptyLabel = 'No data',\r\n  pagination = false,\r\n  loading = false,\r\n  pageSize = 10,\r\n}) {\r\n  const customizeRenderEmpty = () => (\r\n    <div\r\n      style={{\r\n        padding: '20px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {emptyLabel}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        pagination={pagination ? { pagination: true, pageSize } : false}\r\n        loading={loading}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n","import { Button, Col, Row } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  useTokenAccounts,\r\n  getSelectedTokenAccountForMint,\r\n} from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\nimport { useSendConnection } from '../../utils/connection';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { settleFunds } from '../../utils/send';\r\nimport { notify } from '../../utils/notifications';\r\n\r\nexport default function BalancesTable({\r\n  balances,\r\n  showMarket,\r\n  hideWalletBalance,\r\n  onSettleSuccess,\r\n}) {\r\n  const [accounts] = useTokenAccounts();\r\n  const connection = useSendConnection();\r\n  const { wallet } = useWallet();\r\n\r\n  async function onSettleFunds(market, openOrders) {\r\n    try {\r\n      await settleFunds({\r\n        market,\r\n        openOrders,\r\n        connection,\r\n        wallet,\r\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\r\n          accounts,\r\n          market?.baseMintAddress,\r\n        ),\r\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\r\n          accounts,\r\n          market?.quoteMintAddress,\r\n        ),\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    onSettleSuccess && onSettleSuccess();\r\n  }\r\n  const [rowItem, setRowItem] = useState(4);\r\n  if (showMarket) {\r\n    setRowItem(rowItem + 1);\r\n  }\r\n  if (hideWalletBalance) {\r\n    setRowItem(rowItem + 1);\r\n  }\r\n  // setRowItem(Math.floor(24 / rowItem));\r\n  const columns = [\r\n    showMarket\r\n      ? {\r\n          title: 'Market',\r\n          dataIndex: 'marketName',\r\n          key: 'marketName',\r\n        }\r\n      : null,\r\n    {\r\n      title: 'Coin',\r\n      dataIndex: 'coin',\r\n      key: 'coin',\r\n    },\r\n    hideWalletBalance\r\n      ? null\r\n      : {\r\n          title: 'Wallet Balance',\r\n          dataIndex: 'wallet',\r\n          key: 'wallet',\r\n        },\r\n    {\r\n      title: 'Orders',\r\n      dataIndex: 'orders',\r\n      key: 'orders',\r\n    },\r\n    {\r\n      title: 'Unsettled',\r\n      dataIndex: 'unsettled',\r\n      key: 'unsettled',\r\n    },\r\n    {\r\n      key: 'action',\r\n      render: ({ market, openOrders, marketName }) => (\r\n        <div style={{ textAlign: 'right' }}>\r\n          <Button\r\n            ghost\r\n            style={{ marginRight: 12 }}\r\n            onClick={() => onSettleFunds(market, openOrders)}\r\n          >\r\n            Settle {marketName}\r\n          </Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ].filter((x) => x);\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          fontSize: 14,\r\n          color: 'rgba(241, 241, 242, 0.5)',\r\n          paddingBottom: 16,\r\n        }}\r\n      >\r\n        {showMarket ? (\r\n          <Col span={24 / rowItem} style={{ textAlign: 'left' }}>\r\n            Market\r\n          </Col>\r\n        ) : null}\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          Coin\r\n        </Col>\r\n        {hideWalletBalance ? (\r\n          <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n            Wallet Balance\r\n          </Col>\r\n        ) : null}\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          Orders\r\n        </Col>\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          Unsettled\r\n        </Col>\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          Action\r\n        </Col>\r\n      </Row>\r\n      <div style={{ height: 350, overflowX: 'hidden' }}>\r\n        {balances.map(\r\n          (\r\n            { marketName, coin, wallet, orders, unsettled, market, openOrders },\r\n            i,\r\n          ) => (\r\n            <Row\r\n              key={i}\r\n              style={{\r\n                fontSize: 14,\r\n                color: 'rgba(241, 241, 242, 1)',\r\n                paddingBottom: 16,\r\n              }}\r\n            >\r\n              {showMarket ? (\r\n                <Col span={24 / rowItem} style={{ textAlign: 'left' }}>\r\n                  {marketName}\r\n                </Col>\r\n              ) : null}\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                {coin}\r\n              </Col>\r\n              {hideWalletBalance ? (\r\n                <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                  {wallet}\r\n                </Col>\r\n              ) : null}\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                {orders}\r\n              </Col>\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                {unsettled}\r\n              </Col>\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                <Button\r\n                  ghost\r\n                  style={{ marginRight: 12 }}\r\n                  onClick={() => onSettleFunds(market, openOrders)}\r\n                >\r\n                  Settle {marketName}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          ),\r\n        )}\r\n      </div>\r\n    </>\r\n    // <DataTable\r\n    //   emptyLabel=\"No balances\"\r\n    //   dataSource={balances}\r\n    //   columns={columns}\r\n    //   pagination={false}\r\n    // />\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport DataTable from '../layout/DataTable';\r\n\r\nimport styled from 'styled-components';\r\nimport { Button, Col, Row, Tag } from 'antd';\r\nimport { cancelOrder } from '../../utils/send';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { useSendConnection } from '../../utils/connection';\r\nimport { notify } from '../../utils/notifications';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\r\n\r\nconst CancelButton = styled(Button)`\r\n  color: rgba(241, 241, 242, 1);\r\n  // border: 1px solid rgba(194, 0, 251, 0.1);\r\n  border: 1px solid #C200FB;\r\n  border-radius: 4px;\r\n  width: 65px;\r\n  height: 20px;\r\n  font-size: 10;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nexport default function OpenOrderTable({\r\n  openOrders,\r\n  onCancelSuccess,\r\n  pageSize,\r\n  loading,\r\n  marketFilter,\r\n}: {\r\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\r\n  onCancelSuccess?: () => void;\r\n  pageSize?: number;\r\n  loading?: boolean;\r\n  marketFilter?: boolean;\r\n}) {\r\n  let { wallet } = useWallet();\r\n  let connection = useSendConnection();\r\n\r\n  const [cancelId, setCancelId] = useState(null);\r\n\r\n  async function cancel(order) {\r\n    setCancelId(order?.orderId);\r\n    try {\r\n      if (wallet) {\r\n      await cancelOrder({\r\n        order,\r\n        market: order.market,\r\n        connection,\r\n        wallet,\r\n      });\r\n    } else {\r\n      throw Error('Error cancelling order')\r\n    }\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error cancelling order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } finally {\r\n      setCancelId(null);\r\n    }\r\n    onCancelSuccess && onCancelSuccess();\r\n  }\r\n\r\n  const marketFilters = [\r\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\r\n  ].map((marketName) => {\r\n    return { text: marketName, value: marketName };\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Market',\r\n      dataIndex: 'marketName',\r\n      key: 'marketName',\r\n      filters: marketFilter ? marketFilters : undefined,\r\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: 'Side',\r\n      dataIndex: 'side',\r\n      key: 'side',\r\n      render: (side) => (\r\n        <Tag\r\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\r\n          style={{ fontWeight: 700 }}\r\n        >\r\n          {side.charAt(0).toUpperCase() + side.slice(1)}\r\n        </Tag>\r\n      ),\r\n      sorter: (a, b) => {\r\n        if (a.side === b.side) {\r\n          return 0;\r\n        } else if (a.side === 'buy') {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      },\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      title: 'Size',\r\n      dataIndex: 'size',\r\n      key: 'size',\r\n      sorter: (a, b) => b.size - a.size,\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n      sorter: (a, b) => b.price - a.price,\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      key: 'orderId',\r\n      render: (order) => (\r\n        <div style={{ textAlign: 'right' }}>\r\n          <CancelButton\r\n            icon={<DeleteOutlined />}\r\n            onClick={() => cancel(order)}\r\n            loading={cancelId + '' === order?.orderId + ''}\r\n          >\r\n            Cancel\r\n          </CancelButton>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const dataSource = (openOrders || []).map((order) => ({\r\n    ...order,\r\n    key: order.orderId,\r\n  }));\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <Row style={{ fontSize: 14, color: 'rgba(241, 241, 242, 0.5)', paddingBottom: 16 }}>\r\n          <Col span={5} style={{ textAlign: 'left' }}>Market</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Side</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Size</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Price</Col>\r\n          <Col span={4} style={{ textAlign: 'right' }}> </Col>\r\n        </Row>\r\n        <div style={{ height: 350, overflowX: 'hidden' }}>\r\n          {dataSource.map(({marketName, side, size, price, orderId }, i) => (\r\n            <Row key={i} style={{ fontSize: 14, color: 'rgba(241, 241, 242, 1)', paddingBottom: 16 }}>\r\n              <Col span={5} style={{ textAlign: 'left' }}>{marketName}</Col>\r\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{side}</Col>\r\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{size}</Col>\r\n              <Col span={5} style={{ textAlign: 'right' }}>{price}</Col>\r\n              <Col span={4} style={{ textAlign: 'right' }}>\r\n                <CancelButton\r\n                  onClick={() => cancel(dataSource[i])}\r\n                  loading={cancelId + '' === orderId + ''}\r\n                >\r\n                  Cancel\r\n                </CancelButton>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </div>\r\n        {/*<DataTable*/}\r\n        {/*  emptyLabel=\"No open orders\"*/}\r\n        {/*  dataSource={dataSource}*/}\r\n        {/*  columns={columns}*/}\r\n        {/*  pagination={true}*/}\r\n        {/*  pageSize={pageSize ? pageSize : 5}*/}\r\n        {/*  loading={loading !== undefined && loading}*/}\r\n        {/*/>*/}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Button, Divider, Spin, Typography } from 'antd';\r\nimport React from 'react';\r\nimport {\r\n  useGetOpenOrdersForDeprecatedMarkets,\r\n  useBalancesForDeprecatedMarkets,\r\n  useUnmigratedOpenOrdersAccounts,\r\n} from '../utils/markets';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\r\nimport BalancesTable from './UserInfoTable/BalancesTable';\r\nimport Link from './Link';\r\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\r\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\r\n  const balances = useBalancesForDeprecatedMarkets();\r\n  const {\r\n    openOrders,\r\n    loaded,\r\n    refreshOpenOrders,\r\n  } = useGetOpenOrdersForDeprecatedMarkets();\r\n\r\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\r\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\r\n  const filteredBalances =\r\n    balances &&\r\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\r\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\r\n  return (\r\n    <FloatingElement>\r\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\r\n        Migrate to new USDC markets\r\n      </Title>\r\n      <Typography>\r\n        <Link\r\n          external\r\n          to={\r\n            'https://explorer.solana.com/address/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\r\n          }\r\n        >\r\n          Native USDC\r\n        </Link>{' '}\r\n        has arrived on Solana! See{' '}\r\n        <Link\r\n          external\r\n          to={\r\n            'https://www.circle.com/blog/circle-partners-with-alameda-research-ftx-project-serum-to-introduce-support-for-usdc-on-solana'\r\n          }\r\n        >\r\n          Circle's announcement\r\n        </Link>{' '}\r\n        for more information.\r\n      </Typography>\r\n      <br />\r\n      <Typography>\r\n        Serum is transitioning from the previous{' '}\r\n        <Link\r\n          external\r\n          to={\r\n            'https://explorer.solana.com/address/BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW'\r\n          }\r\n        >\r\n          Wrapped USDC\r\n        </Link>\r\n        , now called WUSDC, to Native USDC. You can convert from WUSDC to USDC\r\n        directly on{' '}\r\n        <Link external to={'https://sollet.io'}>\r\n          sollet.io\r\n        </Link>\r\n        , or can deposit WUSDC and be credited USDC on exchanges like{' '}\r\n        <Link external to={'https://ftx.com'}>\r\n          FTX\r\n        </Link>\r\n        .\r\n      </Typography>\r\n      <br />\r\n      <Typography>\r\n        Markets with WUSDC as the quote curency are now deprecated. To migrate\r\n        over to the new USDC markets, please cancel your orders and settle your\r\n        funds on old markets.\r\n      </Typography>\r\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\r\n        <Button onClick={() => refresh(true)}>\r\n          <SyncOutlined /> Refresh data\r\n        </Button>\r\n      </div>\r\n      {!balances ? (\r\n        <Spin size=\"large\" />\r\n      ) : (\r\n        <>\r\n          <Divider>\r\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\r\n          </Divider>\r\n          {needToCancelOrders ? (\r\n            loaded ? (\r\n              <OpenOrderTable\r\n                openOrders={openOrders}\r\n                onCancelSuccess={() => {\r\n                  setTimeout(() => {\r\n                    refresh();\r\n                    refreshOpenOrders();\r\n                  }, 1000); // Wait so that on-chain account state reflects the update\r\n                }}\r\n              />\r\n            ) : (\r\n              <Spin size=\"large\" />\r\n            )\r\n          ) : null}\r\n          <Divider>\r\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\r\n          </Divider>\r\n          {needToSettleFunds && (\r\n            <BalancesTable\r\n              balances={filteredBalances}\r\n              hideWalletBalance\r\n              showMarket\r\n              onSettleSuccess={() => {\r\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\r\n              }}\r\n            />\r\n          )}\r\n          <Divider>Switch to upgraded markets</Divider>\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Button\r\n              onClick={switchToLiveMarkets}\r\n              disabled={needToSettleFunds || needToCancelOrders}\r\n            >\r\n              Switch to new markets\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { LinkOutlined } from '@ant-design/icons';\r\n\r\nexport default function LinkAddress({\r\n  title,\r\n  address,\r\n  shorten = false,\r\n}: {\r\n  title?: undefined | any;\r\n  address: string;\r\n  shorten?: boolean;\r\n}) {\r\n  return (\r\n    <div>\r\n      {title && <p style={{ color: 'white' }}>{title}</p>}\r\n      <Button\r\n        type=\"link\"\r\n        icon={<LinkOutlined />}\r\n        href={'https://explorer.solana.com/address/' + address}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        {shorten ? `${address.slice(0, 4)}...${address.slice(-4)}` : address}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef<() => void>();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current && savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\r\nimport { isEqual, getDecimalCount } from '../utils/utils';\r\nimport { useInterval } from '../utils/useInterval';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport usePrevious from '../utils/usePrevious';\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\r\n\r\nconst Title = styled.div`\r\n  color: rgba(255, 255, 255, 1);\r\n`;\r\n\r\nconst SizeTitle = styled(Row)`\r\n  padding: 16px 0 12px;\r\n  color: #434a59;\r\n`;\r\n\r\nconst MarkPriceTitle = styled(Row)`\r\n  padding: 15px 0 12px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  text-align: right;\r\n  float: right;\r\n  height: 100%;\r\n  ${(props) =>\r\n    props['data-width'] &&\r\n    css`\r\n      width: ${props['data-width']};\r\n    `}\r\n  ${(props) =>\r\n    props['data-bgcolor'] &&\r\n    css`\r\n      background-color: ${props['data-bgcolor']};\r\n    `}\r\n`;\r\n\r\nconst Price = styled.div`\r\n  position: absolute;\r\n  right: 5px;\r\n  color: white;\r\n`;\r\n\r\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\r\n  const markPrice = useMarkPrice();\r\n  const [orderbook] = useOrderbook();\r\n  const { baseCurrency, quoteCurrency } = useMarket();\r\n\r\n  const currentOrderbookData = useRef(null);\r\n  const lastOrderbookData = useRef(null);\r\n\r\n  const [orderbookData, setOrderbookData] = useState(null);\r\n\r\n  useInterval(() => {\r\n    if (\r\n      !currentOrderbookData.current ||\r\n      JSON.stringify(currentOrderbookData.current) !==\r\n        JSON.stringify(lastOrderbookData.current)\r\n    ) {\r\n      let bids = orderbook?.bids || [];\r\n      let asks = orderbook?.asks || [];\r\n\r\n      let sum = (total, [, size], index) =>\r\n        index < depth ? total + size : total;\r\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\r\n\r\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\r\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\r\n\r\n      currentOrderbookData.current = {\r\n        bids: orderbook?.bids,\r\n        asks: orderbook?.asks,\r\n      };\r\n\r\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\r\n    }\r\n  }, 250);\r\n\r\n  useEffect(() => {\r\n    lastOrderbookData.current = {\r\n      bids: orderbook?.bids,\r\n      asks: orderbook?.asks,\r\n    };\r\n  }, [orderbook]);\r\n\r\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\r\n    let cumulative = orders\r\n      .slice(0, depth)\r\n      .reduce((cumulative, [price, size], i) => {\r\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\r\n        cumulative.push({\r\n          price,\r\n          size,\r\n          cumulativeSize,\r\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\r\n        });\r\n        return cumulative;\r\n      }, []);\r\n    if (backwards) {\r\n      cumulative = cumulative.reverse();\r\n    }\r\n    return cumulative;\r\n  }\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={{\r\n        ...(smallScreen\r\n          ? { flex: 1 }\r\n          : { height: '500px', overflow: 'hidden' }),\r\n        height: 540,\r\n      }}\r\n    >\r\n      <Title\r\n        style={{\r\n          borderTop: '1px solid #1C274F',\r\n          borderBottom: '1px solid #1C274F',\r\n          padding: '12px 0 12px 16px',\r\n          color: 'rgba(241, 241, 242, 0.75)',\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        Order book\r\n      </Title>\r\n      <SizeTitle>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            color: 'rgba(241, 241, 242, 0.5)',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            paddingRight: 20,\r\n            color: 'rgba(241, 241, 242, 0.5)',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Price ({quoteCurrency})\r\n        </Col>\r\n      </SizeTitle>\r\n      <div style={{ paddingBottom: 16 }}>\r\n        {orderbookData?.asks.map(({ price, size, sizePercent }) => (\r\n          <OrderbookRow\r\n            key={price + ''}\r\n            price={price}\r\n            size={size}\r\n            side={'sell'}\r\n            sizePercent={sizePercent}\r\n            onPriceClick={() => onPrice(price)}\r\n            onSizeClick={() => onSize(size)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <MarkPriceComponent markPrice={markPrice} />\r\n      <SizeTitle>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            color: 'rgba(241, 241, 242, 0.5)',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            paddingRight: 20,\r\n            color: 'rgba(241, 241, 242, 0.5)',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Price ({quoteCurrency})\r\n        </Col>\r\n      </SizeTitle>\r\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\r\n        <OrderbookRow\r\n          key={price + ''}\r\n          price={price}\r\n          size={size}\r\n          side={'buy'}\r\n          sizePercent={sizePercent}\r\n          onPriceClick={() => onPrice(price)}\r\n          onSizeClick={() => onSize(size)}\r\n        />\r\n      ))}\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nconst OrderbookRow = React.memo(\r\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\r\n    const element = useRef();\r\n\r\n    const { market } = useMarket();\r\n\r\n    useEffect(() => {\r\n      // eslint-disable-next-line\r\n      !element.current?.classList.contains('flash') &&\r\n        element.current?.classList.add('flash');\r\n      const id = setTimeout(\r\n        () =>\r\n          element.current?.classList.contains('flash') &&\r\n          element.current?.classList.remove('flash'),\r\n        250,\r\n      );\r\n      return () => clearTimeout(id);\r\n    }, [price, size]);\r\n\r\n    let formattedSize =\r\n      market?.minOrderSize && !isNaN(size)\r\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\r\n        : size;\r\n\r\n    let formattedPrice =\r\n      market?.tickSize && !isNaN(price)\r\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\r\n        : price;\r\n\r\n    return (\r\n      <Row\r\n        ref={element}\r\n        style={{ marginBottom: 3, fontSize: 12 }}\r\n        onClick={onSizeClick}\r\n      >\r\n        <Col span={12} style={{ textAlign: 'right' }}>\r\n          {formattedSize}\r\n        </Col>\r\n        <Col span={12} style={{ textAlign: 'right' }}>\r\n          <Line\r\n            data-width={sizePercent + '%'}\r\n            data-bgcolor={\r\n              side === 'buy'\r\n                ? 'rgba(65, 199, 122, 0.6)'\r\n                : 'rgba(242, 60, 105, 0.6)'\r\n            }\r\n          />\r\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  },\r\n  (prevProps, nextProps) =>\r\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\r\n);\r\n\r\nconst MarkPriceComponent = React.memo(\r\n  ({ markPrice }) => {\r\n    const { market } = useMarket();\r\n    const previousMarkPrice = usePrevious(markPrice);\r\n\r\n    let markPriceColor =\r\n      markPrice > previousMarkPrice\r\n        ? '#41C77A'\r\n        : markPrice < previousMarkPrice\r\n        ? '#F23B69'\r\n        : 'white';\r\n\r\n    let formattedMarkPrice =\r\n      markPrice &&\r\n      market?.tickSize &&\r\n      markPrice.toFixed(getDecimalCount(market.tickSize));\r\n\r\n    return (\r\n      <MarkPriceTitle\r\n        justify=\"center\"\r\n        style={{\r\n          borderTop: '1px solid #1C274F',\r\n          borderBottom: '1px solid #1C274F',\r\n          fontSize: 16,\r\n        }}\r\n      >\r\n        <Col style={{ color: markPriceColor }}>\r\n          {markPrice > previousMarkPrice && (\r\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\r\n          )}\r\n          {markPrice < previousMarkPrice && (\r\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\r\n          )}\r\n          {formattedMarkPrice || '----'}\r\n        </Col>\r\n      </MarkPriceTitle>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\r\n);\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport default function usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef();\r\n\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n","import React from 'react';\r\nimport { Modal } from 'antd';\r\nimport {\r\n  useSelectedBaseCurrencyAccount,\r\n  useMarket,\r\n  useSelectedQuoteCurrencyAccount,\r\n} from '../utils/markets';\r\nimport { useWallet } from '../utils/wallet';\r\nimport Link from './Link';\r\n\r\nexport default function DepositDialog({ onClose, baseOrQuote }) {\r\n  const { market, baseCurrency, quoteCurrency } = useMarket();\r\n\r\n  const { providerName, providerUrl } = useWallet();\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  let coinMint;\r\n  let account;\r\n  let depositCoin;\r\n  if (baseOrQuote === 'base') {\r\n    coinMint = market?.baseMintAddress;\r\n    account = baseCurrencyAccount;\r\n    depositCoin = baseCurrency;\r\n  } else if (baseOrQuote === 'quote') {\r\n    coinMint = market?.quoteMintAddress;\r\n    account = quoteCurrencyAccount;\r\n    depositCoin = quoteCurrency;\r\n  } else {\r\n    account = null;\r\n  }\r\n  if (!coinMint) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Modal\r\n      title={depositCoin}\r\n      visible={!!coinMint}\r\n      onOk={onClose}\r\n      onCancel={onClose}\r\n    >\r\n      <div style={{ paddingTop: '20px' }}>\r\n        <p style={{ color: 'white' }}>Mint address:</p>\r\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\r\n        <div>\r\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\r\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\r\n            {account ? (\r\n              account.pubkey.toBase58()\r\n            ) : (\r\n              <>\r\n                Visit{' '}\r\n                <Link external to={providerUrl}>\r\n                  {providerName}\r\n                </Link>{' '}\r\n                to create an account for this mint\r\n              </>\r\n            )}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TokenAccount } from '../utils/types';\r\nimport { useSelectedTokenAccounts } from '../utils/markets';\r\nimport { Button, Col, Select, Typography } from 'antd';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport { abbreviateAddress } from '../utils/utils';\r\nimport { notify } from '../utils/notifications';\r\n\r\nexport default function StandaloneTokenAccountsSelect({\r\n  accounts,\r\n  mint,\r\n  label,\r\n}: {\r\n  accounts: TokenAccount[] | null | undefined;\r\n  mint: string | undefined;\r\n  label?: boolean;\r\n}) {\r\n  const [\r\n    selectedTokenAccounts,\r\n    setSelectedTokenAccounts,\r\n  ] = useSelectedTokenAccounts();\r\n\r\n  let selectedValue: string | undefined;\r\n  if (mint && mint in selectedTokenAccounts) {\r\n    selectedValue = selectedTokenAccounts[mint];\r\n  } else if (accounts && accounts?.length > 0) {\r\n    selectedValue = accounts[0].pubkey.toBase58();\r\n  } else {\r\n    selectedValue = undefined;\r\n  }\r\n\r\n  const setTokenAccountForCoin = (value) => {\r\n    if (!mint) {\r\n      notify({\r\n        message: 'Error selecting token account',\r\n        description: 'Mint is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\r\n    newSelectedTokenAccounts[mint] = value;\r\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {label && <Col span={8}>Token account:</Col>}\r\n      <Col span={label ? 13 : 21}>\r\n        <Select\r\n          style={{ width: '100%' }}\r\n          value={selectedValue}\r\n          onSelect={setTokenAccountForCoin}\r\n        >\r\n          {accounts?.map((account) => (\r\n            <Select.Option\r\n              key={account.pubkey.toBase58()}\r\n              value={account.pubkey.toBase58()}\r\n            >\r\n              <Typography.Text code>\r\n                {label\r\n                  ? abbreviateAddress(account.pubkey, 8)\r\n                  : account.pubkey.toBase58()}\r\n              </Typography.Text>\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n      </Col>\r\n      <Col span={2} offset={1}>\r\n        <Button\r\n          shape=\"round\"\r\n          icon={<CopyOutlined />}\r\n          size={'small'}\r\n          onClick={() =>\r\n            selectedValue && navigator.clipboard.writeText(selectedValue)\r\n          }\r\n        />\r\n      </Col>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Button, Col, Divider, Popover, Row } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport {\r\n  useBalances,\r\n  useMarket,\r\n  useSelectedBaseCurrencyAccount,\r\n  useSelectedOpenOrdersAccount,\r\n  useSelectedQuoteCurrencyAccount,\r\n  useTokenAccounts,\r\n} from '../utils/markets';\r\nimport DepositDialog from './DepositDialog';\r\nimport { useWallet } from '../utils/wallet';\r\nimport Link from './Link';\r\nimport { settleFunds } from '../utils/send';\r\nimport { useSendConnection } from '../utils/connection';\r\nimport { notify } from '../utils/notifications';\r\nimport { Balances } from '../utils/types';\r\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\r\nimport LinkAddress from './LinkAddress';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\nimport logo1 from '../assets/logo1.svg';\r\n\r\nconst RowBox = styled(Row)`\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nconst Tip = styled.p`\r\n  font-size: 12px;\r\n  padding-top: 6px;\r\n`;\r\n\r\nconst ActionButton = styled(Button)`\r\n  color: rgba(241, 241, 242, 0.75);\r\n  font-size: 12px;\r\n  display: 'inline-block';\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  border-radius: 4px;\r\n  border: 1px solid rgba(241, 241, 242, 0.5);\r\n`;\r\n\r\nexport default function StandaloneBalancesDisplay() {\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const balances = useBalances();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\r\n  const connection = useSendConnection();\r\n  const { providerUrl, providerName, wallet, connected } = useWallet();\r\n  const [baseOrQuote, setBaseOrQuote] = useState('');\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const baseCurrencyBalances = \r\n    balances && balances.find((b) => b.coin === baseCurrency);\r\n  const quoteCurrencyBalances = \r\n    balances && balances.find((b) => b.coin === quoteCurrency);\r\n\r\n  async function onSettleFunds() {\r\n    if (!wallet) {\r\n      notify({\r\n        message: 'Wallet not connected',\r\n        description: 'wallet is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!market) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'market is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!openOrdersAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!baseCurrencyAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!quoteCurrencyAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await settleFunds({\r\n        market,\r\n        openOrders: openOrdersAccount,\r\n        connection,\r\n        wallet,\r\n        baseCurrencyAccount,\r\n        quoteCurrencyAccount,\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    }\r\n  }\r\n\r\n  const formattedBalances: [\r\n    string | undefined,\r\n    Balances | undefined,\r\n    string,\r\n    string | undefined,\r\n  ][] = [\r\n    [\r\n      baseCurrency,\r\n      baseCurrencyBalances,\r\n      'base',\r\n      market?.baseMintAddress.toBase58(),\r\n    ],\r\n    [\r\n      quoteCurrency,\r\n      quoteCurrencyBalances,\r\n      'quote',\r\n      market?.quoteMintAddress.toBase58(),\r\n    ],\r\n  ];\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <div\r\n       style={{\r\n         width: '100%',\r\n         borderBottom: '1px solid #1C274F',\r\n         fontSize: 14,\r\n         paddingBottom: 12,\r\n\r\n       }}\r\n      >\r\n        Wallet Balance\r\n      </div>\r\n      <div style={{ paddingRight: 10}}>\r\n        <Row style={{\r\n          marginTop: 16,\r\n          color: 'rgba(241, 241, 242, 0.5)',\r\n          fontSize: 12,\r\n          textAlign: 'right',\r\n        }}>\r\n          <Col span={6} style={{ textAlign: 'left' }}>\r\n            Asset\r\n          </Col>\r\n          <Col span={9}>\r\n            Wallet balance\r\n          </Col>\r\n          <Col span={9}>\r\n            Unsettled balance\r\n          </Col>\r\n        </Row>\r\n        {formattedBalances.map(\r\n          ([currency, balances, baseOrQuote, mint], index) => (\r\n            <React.Fragment key={index}>\r\n              <Row style={{\r\n                marginTop: 16,\r\n                fontSize: 12,\r\n                color: 'rgba(241, 241, 242, 1)',\r\n                textAlign: 'right',\r\n                borderBottom: '1px solid #1C274F',\r\n                paddingBottom: 18,\r\n              }}>\r\n                <Col span={6} style={{ color: 'rgba(241, 241, 242, 0.5)', textAlign: 'left' }}>\r\n                  {currency}\r\n                </Col>\r\n                <Col span={9}>\r\n                  {balances && balances.wallet}\r\n                </Col>\r\n                <Col span={9}>\r\n                  {balances && balances.unsettled}\r\n                </Col>\r\n                <Col span={6} style={{ paddingTop: 8}}>\r\n                </Col>\r\n                <Col span={9} style={{ paddingTop: 8}}>\r\n                  <ActionButton\r\n                    size=\"small\"\r\n                    onClick={() => setBaseOrQuote(baseOrQuote)}\r\n                  >\r\n                    Deposit\r\n                  </ActionButton>\r\n                </Col>\r\n                <Col span={9} style={{ paddingTop: 8}}>\r\n                  <ActionButton size=\"small\" onClick={onSettleFunds}>\r\n                    Settle\r\n                  </ActionButton>\r\n                </Col>\r\n              </Row>\r\n\r\n              {connected && (\r\n                <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\r\n                  <StandaloneTokenAccountsSelect\r\n                    accounts={tokenAccounts?.filter(\r\n                      (account) => account.effectiveMint.toBase58() === mint,\r\n                    )}\r\n                    mint={mint}\r\n                    label\r\n                  />\r\n                </RowBox>\r\n              )}\r\n            </React.Fragment>\r\n          ),\r\n        )}\r\n      </div>\r\n      <DepositDialog\r\n        baseOrQuote={baseOrQuote}\r\n        onClose={() => setBaseOrQuote('')}\r\n      />\r\n      <div style={{ textAlign: 'center', paddingTop: 32 }}>\r\n        <img src={logo1} alt=\"\" />\r\n        <div style={{ paddingTop: 20, fontSize: 16, color: '#F1F1F2' }}>\r\n          First time trading\r\n        </div>\r\n        <div style={{ fontSize: 16, color: '#F1F1F2' }}>\r\n          on Raydium?\r\n        </div>\r\n        <a\r\n          href={'https://raydium.gitbook.io/raydium/'}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={{ color : 'rgb(173,175,184)',}}\r\n        >\r\n        <div style={{ paddingTop: 16, fontSize: 12, color: '#5AC4BE' }}>\r\n\r\n            see how it works\r\n\r\n        </div>\r\n      </a>\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","const CHARTS_KEY = 'tradingviewCharts';\r\nconst STUDIES_KEY = 'tradingviewStudies';\r\n\r\n// See https://github.com/tradingview/charting_library/wiki/Widget-Constructor#save_load_adapter\r\n\r\nexport function getAllCharts() {\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  return new Promise((resolve) => resolve(charts));\r\n}\r\n\r\nexport function removeChart(chartId) {\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  charts = charts.filter((chart) => chart.id !== chartId);\r\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\r\n  localStorage.removeItem(CHARTS_KEY + '.' + chartId);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function saveChart(chartData) {\r\n  let { content, ...info } = chartData;\r\n  if (!info.id) {\r\n    info.id = 'chart' + Math.floor(Math.random() * 1e8);\r\n  }\r\n  // @ts-ignore\r\n  info.timestamp = new Date() - 0;\r\n  content = JSON.parse(content);\r\n  content['content'] = JSON.parse(content['content']);\r\n  // Remove \"study_Overlay\" i.e the indexes\r\n  try {\r\n    for (\r\n      var i = 0;\r\n      i < content['content']['charts'][0]['panes'][0]['sources'].length;\r\n      i++\r\n    ) {\r\n      if (\r\n        content['content']['charts'][0]['panes'][0]['sources'][i]['type'] ===\r\n        'study_Overlay'\r\n      ) {\r\n        content['content']['charts'][0]['panes'][0]['sources'].splice(i, 1);\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  content['content'] = JSON.stringify(content['content']);\r\n  content = JSON.stringify(content);\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  charts = charts.filter((chart) => chart.id !== info.id);\r\n  charts.push(info);\r\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\r\n  localStorage.setItem(CHARTS_KEY + '.' + info.id, content);\r\n\r\n  return new Promise((resolve) => resolve(info.id));\r\n}\r\n\r\nexport function getChartContent(chartId) {\r\n  let content = localStorage.getItem(CHARTS_KEY + '.' + chartId);\r\n  return new Promise((resolve) => resolve(content));\r\n}\r\n\r\nexport function getAllStudyTemplates() {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  return new Promise((resolve) => resolve(studies));\r\n}\r\n\r\nexport function removeStudyTemplate({ name }) {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  studies = studies.filter((study) => study.name !== name);\r\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\r\n  localStorage.removeItem(STUDIES_KEY + '.' + name);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function saveStudyTemplate({ content, ...info }) {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  studies = studies.filter((study) => study.name !== info.name);\r\n  studies.push(info);\r\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\r\n  localStorage.setItem(STUDIES_KEY + '.' + info.name, content);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function getStudyTemplateContent({ name }) {\r\n  let content = localStorage.getItem(STUDIES_KEY + '.' + name);\r\n  return new Promise((resolve) => resolve(content));\r\n}\r\n","/* eslint-disable */\r\nvar t = function () {\r\n  return (t =\r\n    Object.assign ||\r\n    function (t) {\r\n      for (var e, o = arguments, n = 1, i = arguments.length; n < i; n++)\r\n        for (var r in (e = o[n]))\r\n          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\r\n      return t;\r\n    }).apply(this, arguments);\r\n};\r\nfunction e(o, n) {\r\n  var i = t({}, o);\r\n  for (var r in n)\r\n    'object' != typeof o[r] || null === o[r] || Array.isArray(o[r])\r\n      ? void 0 !== n[r] && (i[r] = n[r])\r\n      : (i[r] = e(o[r], n[r]));\r\n  return i;\r\n}\r\nvar o = {\r\n    mobile: {\r\n      disabled_features: [\r\n        'left_toolbar',\r\n        'header_widget',\r\n        'timeframes_toolbar',\r\n        'edit_buttons_in_legend',\r\n        'context_menus',\r\n        'control_bar',\r\n        'border_around_the_chart',\r\n      ],\r\n      enabled_features: [],\r\n    },\r\n  },\r\n  n = {\r\n    width: 800,\r\n    height: 500,\r\n    interval: '1D',\r\n    timezone: 'Etc/UTC',\r\n    container_id: '',\r\n    library_path: '',\r\n    locale: 'en',\r\n    widgetbar: {\r\n      details: !1,\r\n      watchlist: !1,\r\n      watchlist_settings: { default_symbols: [] },\r\n    },\r\n    overrides: { 'mainSeriesProperties.showCountdown': !1 },\r\n    studies_overrides: {},\r\n    trading_customization: { position: {}, order: {} },\r\n    brokerConfig: { configFlags: {} },\r\n    fullscreen: !1,\r\n    autosize: !1,\r\n    disabled_features: [],\r\n    enabled_features: [],\r\n    debug: !1,\r\n    logo: {},\r\n    time_frames: [\r\n      { text: '5y', resolution: '1W' },\r\n      { text: '1y', resolution: '1W' },\r\n      { text: '6m', resolution: '120' },\r\n      { text: '3m', resolution: '60' },\r\n      { text: '1m', resolution: '30' },\r\n      { text: '5d', resolution: '5' },\r\n      { text: '1d', resolution: '1' },\r\n    ],\r\n    client_id: '0',\r\n    user_id: '0',\r\n    charts_storage_api_version: '1.0',\r\n    favorites: { intervals: [], chartTypes: [] },\r\n  };\r\nfunction i() {\r\n  return 'CL v17.024 (internal id cbd3ae28 @ 2020-11-11T12:45:30.675Z)';\r\n}\r\nvar r = (function () {\r\n  function t(t) {\r\n    if (\r\n      ((this._id =\r\n        'tradingview_' +\r\n        ((1048576 * (1 + Math.random())) | 0).toString(16).substring(1)),\r\n      (this._ready = !1),\r\n      (this._readyHandlers = []),\r\n      (this._onWindowResize = this._autoResizeChart.bind(this)),\r\n      !t.datafeed)\r\n    )\r\n      throw new Error('Datafeed is not defined');\r\n    if (((this._options = e(n, t)), t.preset)) {\r\n      var i = o[t.preset];\r\n      i\r\n        ? (void 0 !== this._options.disabled_features\r\n            ? (this._options.disabled_features = this._options.disabled_features.concat(\r\n                i.disabled_features,\r\n              ))\r\n            : (this._options.disabled_features = i.disabled_features),\r\n          void 0 !== this._options.enabled_features\r\n            ? (this._options.enabled_features = this._options.enabled_features.concat(\r\n                i.enabled_features,\r\n              ))\r\n            : (this._options.enabled_features = i.enabled_features))\r\n        : console.warn('Unknown preset: `' + t.preset + '`');\r\n    }\r\n    'Dark' === this._options.theme &&\r\n      void 0 === this._options.loading_screen &&\r\n      (this._options.loading_screen = { backgroundColor: '#131722' }),\r\n      this._create();\r\n  }\r\n  return (\r\n    (t.prototype.onChartReady = function (t) {\r\n      this._ready ? t.call(this) : this._readyHandlers.push(t);\r\n    }),\r\n    (t.prototype.headerReady = function () {\r\n      var t = this;\r\n      return this._innerWindowLoaded.then(function () {\r\n        return t._innerWindow().headerReady();\r\n      });\r\n    }),\r\n    (t.prototype.onGrayedObjectClicked = function (t) {\r\n      this._innerAPI().onGrayedObjectClicked(t);\r\n    }),\r\n    (t.prototype.onShortcut = function (t, e) {\r\n      this._innerWindow().createShortcutAction(t, e);\r\n    }),\r\n    (t.prototype.subscribe = function (t, e) {\r\n      this._innerAPI().subscribe(t, e);\r\n    }),\r\n    (t.prototype.unsubscribe = function (t, e) {\r\n      this._innerAPI().unsubscribe(t, e);\r\n    }),\r\n    (t.prototype.chart = function (t) {\r\n      return this._innerAPI().chart(t);\r\n    }),\r\n    (t.prototype.getLanguage = function () {\r\n      return this._options.locale;\r\n    }),\r\n    (t.prototype.setSymbol = function (t, e, o) {\r\n      this._innerAPI().changeSymbol(t, e, o);\r\n    }),\r\n    (t.prototype.remove = function () {\r\n      window.removeEventListener('resize', this._onWindowResize),\r\n        this._readyHandlers.splice(0, this._readyHandlers.length),\r\n        delete window[this._id],\r\n        this._iFrame.parentNode &&\r\n          this._iFrame.parentNode.removeChild(this._iFrame);\r\n    }),\r\n    (t.prototype.closePopupsAndDialogs = function () {\r\n      this._innerAPI().closePopupsAndDialogs();\r\n    }),\r\n    (t.prototype.selectLineTool = function (t) {\r\n      this._innerAPI().selectLineTool(t);\r\n    }),\r\n    (t.prototype.selectedLineTool = function () {\r\n      return this._innerAPI().selectedLineTool();\r\n    }),\r\n    (t.prototype.save = function (t) {\r\n      this._innerAPI().saveChart(t);\r\n    }),\r\n    (t.prototype.load = function (t, e) {\r\n      this._innerAPI().loadChart({ json: t, extendedData: e });\r\n    }),\r\n    (t.prototype.getSavedCharts = function (t) {\r\n      this._innerAPI().getSavedCharts(t);\r\n    }),\r\n    (t.prototype.loadChartFromServer = function (t) {\r\n      this._innerAPI().loadChartFromServer(t);\r\n    }),\r\n    (t.prototype.saveChartToServer = function (t, e, o) {\r\n      this._innerAPI().saveChartToServer(t, e, o);\r\n    }),\r\n    (t.prototype.removeChartFromServer = function (t, e) {\r\n      this._innerAPI().removeChartFromServer(t, e);\r\n    }),\r\n    (t.prototype.onContextMenu = function (t) {\r\n      this._innerAPI().onContextMenu(t);\r\n    }),\r\n    (t.prototype.createButton = function (t) {\r\n      return this._innerWindow().createButton(t);\r\n    }),\r\n    (t.prototype.showNoticeDialog = function (t) {\r\n      this._innerAPI().showNoticeDialog(t);\r\n    }),\r\n    (t.prototype.showConfirmDialog = function (t) {\r\n      this._innerAPI().showConfirmDialog(t);\r\n    }),\r\n    (t.prototype.showLoadChartDialog = function () {\r\n      this._innerAPI().showLoadChartDialog();\r\n    }),\r\n    (t.prototype.showSaveAsChartDialog = function () {\r\n      this._innerAPI().showSaveAsChartDialog();\r\n    }),\r\n    (t.prototype.symbolInterval = function () {\r\n      return this._innerAPI().getSymbolInterval();\r\n    }),\r\n    (t.prototype.mainSeriesPriceFormatter = function () {\r\n      return this._innerAPI().mainSeriesPriceFormatter();\r\n    }),\r\n    (t.prototype.getIntervals = function () {\r\n      return this._innerAPI().getIntervals();\r\n    }),\r\n    (t.prototype.getStudiesList = function () {\r\n      return this._innerAPI().getStudiesList();\r\n    }),\r\n    (t.prototype.addCustomCSSFile = function (t) {\r\n      this._innerWindow().addCustomCSSFile(t);\r\n    }),\r\n    (t.prototype.applyOverrides = function (t) {\r\n      (this._options = e(this._options, { overrides: t })),\r\n        this._innerWindow().applyOverrides(t);\r\n    }),\r\n    (t.prototype.applyStudiesOverrides = function (t) {\r\n      this._innerWindow().applyStudiesOverrides(t);\r\n    }),\r\n    (t.prototype.watchList = function () {\r\n      return this._innerAPI().watchlist();\r\n    }),\r\n    (t.prototype.activeChart = function () {\r\n      return this._innerAPI().activeChart();\r\n    }),\r\n    (t.prototype.chartsCount = function () {\r\n      return this._innerAPI().chartsCount();\r\n    }),\r\n    (t.prototype.layout = function () {\r\n      return this._innerAPI().layout();\r\n    }),\r\n    (t.prototype.setLayout = function (t) {\r\n      this._innerAPI().setLayout(t);\r\n    }),\r\n    (t.prototype.layoutName = function () {\r\n      return this._innerAPI().layoutName();\r\n    }),\r\n    (t.prototype.changeTheme = function (t, e) {\r\n      this._innerWindow().changeTheme(t, e);\r\n    }),\r\n    (t.prototype.getTheme = function () {\r\n      return this._innerWindow().getTheme();\r\n    }),\r\n    (t.prototype.takeScreenshot = function () {\r\n      this._innerAPI().takeScreenshot();\r\n    }),\r\n    (t.prototype.lockAllDrawingTools = function () {\r\n      return this._innerAPI().lockAllDrawingTools();\r\n    }),\r\n    (t.prototype.hideAllDrawingTools = function () {\r\n      return this._innerAPI().hideAllDrawingTools();\r\n    }),\r\n    (t.prototype.drawOnAllCharts = function (t) {\r\n      this._innerAPI().drawOnAllCharts(t);\r\n    }),\r\n    (t.prototype.magnetEnabled = function () {\r\n      return this._innerAPI().magnetEnabled();\r\n    }),\r\n    (t.prototype.magnetMode = function () {\r\n      return this._innerAPI().magnetMode();\r\n    }),\r\n    (t.prototype.undoRedoState = function () {\r\n      return this._innerAPI().undoRedoState();\r\n    }),\r\n    (t.prototype.setIntervalLinkingEnabled = function (t) {\r\n      this._innerAPI().setIntervalLinkingEnabled(t);\r\n    }),\r\n    (t.prototype.setTimeFrame = function (t) {\r\n      this._innerAPI().setTimeFrame(t);\r\n    }),\r\n    (t.prototype.symbolSync = function () {\r\n      return this._innerAPI().symbolSync();\r\n    }),\r\n    (t.prototype.intervalSync = function () {\r\n      return this._innerAPI().intervalSync();\r\n    }),\r\n    (t.prototype.crosshairSync = function () {\r\n      return this._innerAPI().crosshairSync();\r\n    }),\r\n    (t.prototype.timeSync = function () {\r\n      return this._innerAPI().timeSync();\r\n    }),\r\n    (t.prototype.getAllFeatures = function () {\r\n      return this._innerWindow().getAllFeatures();\r\n    }),\r\n    (t.prototype.takeClientScreenshot = function () {\r\n      return this._innerAPI().takeClientScreenshot();\r\n    }),\r\n    (t.prototype._innerAPI = function () {\r\n      return this._innerWindow().tradingViewApi;\r\n    }),\r\n    (t.prototype._innerWindow = function () {\r\n      return this._iFrame.contentWindow;\r\n    }),\r\n    (t.prototype._autoResizeChart = function () {\r\n      this._options.fullscreen &&\r\n        (this._iFrame.style.height = window.innerHeight + 'px');\r\n    }),\r\n    (t.prototype._create = function () {\r\n      var t = this,\r\n        e = this._render(),\r\n        o = document.getElementById(this._options.container_id);\r\n      if (null === o)\r\n        throw new Error(\r\n          'There is no such element - #' + this._options.container_id,\r\n        );\r\n      (o.innerHTML = e), (this._iFrame = o.querySelector('#' + this._id));\r\n      var n = this._iFrame;\r\n      (this._options.autosize || this._options.fullscreen) &&\r\n        ((n.style.width = '100%'),\r\n        this._options.fullscreen || (n.style.height = '100%')),\r\n        window.addEventListener('resize', this._onWindowResize),\r\n        this._onWindowResize(),\r\n        (this._innerWindowLoaded = new Promise(function (t) {\r\n          var e = function () {\r\n            n.removeEventListener('load', e, !1), t();\r\n          };\r\n          n.addEventListener('load', e, !1);\r\n        })),\r\n        this._innerWindowLoaded.then(function () {\r\n          t._innerWindow().widgetReady(function () {\r\n            t._ready = !0;\r\n            for (var e = 0, o = t._readyHandlers; e < o.length; e++) {\r\n              var n = o[e];\r\n              try {\r\n                n.call(t);\r\n              } catch (i) {\r\n                console.error(i);\r\n              }\r\n            }\r\n            t._innerWindow().initializationFinished();\r\n          });\r\n        });\r\n    }),\r\n    (t.prototype._render = function () {\r\n      var t = window;\r\n      if (\r\n        ((t[this._id] = {\r\n          datafeed: this._options.datafeed,\r\n          customFormatters:\r\n            this._options.custom_formatters || this._options.customFormatters,\r\n          brokerFactory:\r\n            this._options.broker_factory || this._options.brokerFactory,\r\n          overrides: this._options.overrides,\r\n          studiesOverrides: this._options.studies_overrides,\r\n          tradingCustomization: this._options.trading_customization,\r\n          disabledFeatures: this._options.disabled_features,\r\n          enabledFeatures: this._options.enabled_features,\r\n          brokerConfig:\r\n            this._options.broker_config || this._options.brokerConfig,\r\n          restConfig: this._options.restConfig,\r\n          favorites: this._options.favorites,\r\n          logo: this._options.logo,\r\n          numeric_formatting: this._options.numeric_formatting,\r\n          rss_news_feed: this._options.rss_news_feed,\r\n          newsProvider: this._options.news_provider,\r\n          loadLastChart: this._options.load_last_chart,\r\n          saveLoadAdapter: this._options.save_load_adapter,\r\n          loading_screen: this._options.loading_screen,\r\n          settingsAdapter: this._options.settings_adapter,\r\n          getCustomIndicators: this._options.custom_indicators_getter,\r\n        }),\r\n        this._options.saved_data)\r\n      )\r\n        t[this._id].chartContent = { json: this._options.saved_data };\r\n      else if (!this._options.load_last_chart && !this._options.symbol)\r\n        throw new Error(\r\n          \"Symbol is not defined: either 'symbol' or 'load_last_chart' option must be set\",\r\n        );\r\n      var e =\r\n        (this._options.library_path || '') +\r\n        (encodeURIComponent(this._options.locale) +\r\n          '-tv-chart.cbd3ae28.html#symbol=') +\r\n        encodeURIComponent(this._options.symbol || '') +\r\n        '&interval=' +\r\n        encodeURIComponent(this._options.interval) +\r\n        (this._options.timeframe\r\n          ? '&timeframe=' + encodeURIComponent(this._options.timeframe)\r\n          : '') +\r\n        (this._options.toolbar_bg\r\n          ? '&toolbarbg=' +\r\n            encodeURIComponent(this._options.toolbar_bg.replace('#', ''))\r\n          : '') +\r\n        (this._options.studies_access\r\n          ? '&studiesAccess=' +\r\n            encodeURIComponent(JSON.stringify(this._options.studies_access))\r\n          : '') +\r\n        '&widgetbar=' +\r\n        encodeURIComponent(JSON.stringify(this._options.widgetbar)) +\r\n        (this._options.drawings_access\r\n          ? '&drawingsAccess=' +\r\n            encodeURIComponent(JSON.stringify(this._options.drawings_access))\r\n          : '') +\r\n        '&timeFrames=' +\r\n        encodeURIComponent(JSON.stringify(this._options.time_frames)) +\r\n        '&locale=' +\r\n        encodeURIComponent(this._options.locale) +\r\n        '&uid=' +\r\n        encodeURIComponent(this._id) +\r\n        '&clientId=' +\r\n        encodeURIComponent(String(this._options.client_id)) +\r\n        '&userId=' +\r\n        encodeURIComponent(String(this._options.user_id)) +\r\n        (this._options.charts_storage_url\r\n          ? '&chartsStorageUrl=' +\r\n            encodeURIComponent(this._options.charts_storage_url)\r\n          : '') +\r\n        (this._options.charts_storage_api_version\r\n          ? '&chartsStorageVer=' +\r\n            encodeURIComponent(this._options.charts_storage_api_version)\r\n          : '') +\r\n        (this._options.custom_css_url\r\n          ? '&customCSS=' + encodeURIComponent(this._options.custom_css_url)\r\n          : '') +\r\n        (this._options.auto_save_delay\r\n          ? '&autoSaveDelay=' +\r\n            encodeURIComponent(String(this._options.auto_save_delay))\r\n          : '') +\r\n        '&debug=' +\r\n        encodeURIComponent(String(this._options.debug)) +\r\n        (this._options.snapshot_url\r\n          ? '&snapshotUrl=' + encodeURIComponent(this._options.snapshot_url)\r\n          : '') +\r\n        (this._options.timezone\r\n          ? '&timezone=' + encodeURIComponent(this._options.timezone)\r\n          : '') +\r\n        (this._options.study_count_limit\r\n          ? '&studyCountLimit=' +\r\n            encodeURIComponent(String(this._options.study_count_limit))\r\n          : '') +\r\n        (this._options.symbol_search_request_delay\r\n          ? '&ssreqdelay=' +\r\n            encodeURIComponent(\r\n              String(this._options.symbol_search_request_delay),\r\n            )\r\n          : '') +\r\n        (this._options.compare_symbols\r\n          ? '&compareSymbols=' +\r\n            encodeURIComponent(JSON.stringify(this._options.compare_symbols))\r\n          : '') +\r\n        (this._options.theme\r\n          ? '&theme=' + encodeURIComponent(String(this._options.theme))\r\n          : '');\r\n      return (\r\n        '<iframe id=\"' +\r\n        this._id +\r\n        '\" name=\"' +\r\n        this._id +\r\n        '\"  src=\"' +\r\n        e +\r\n        '\"' +\r\n        (this._options.autosize || this._options.fullscreen\r\n          ? ''\r\n          : ' width=\"' +\r\n            this._options.width +\r\n            '\" height=\"' +\r\n            this._options.height +\r\n            '\"') +\r\n        ' frameborder=\"0\" allowTransparency=\"true\" scrolling=\"no\" allowfullscreen style=\"display:block;\"></iframe>'\r\n      );\r\n    }),\r\n    t\r\n  );\r\n})();\r\n(window.TradingView = window.TradingView || {}),\r\n  (window.TradingView.version = i);\r\nexport { i as version, r as widget };\r\n","// @ts-nocheck\r\nimport React, { useMemo } from 'react';\r\nimport { sleep } from './utils';\r\n\r\nconst URL = 'https://serum-api.bonfida.com/tv/';\r\n\r\nconst X = [\r\n  '1045529pOiBJz',\r\n  'cPLzc',\r\n  '1142540VecyVK',\r\n  'rlUik',\r\n  '577391szPtPO',\r\n  'subtle',\r\n  'CCCPGTDWqnEg3eMUrimj',\r\n  '2AxnvtD',\r\n  'symbol',\r\n  '&auth=',\r\n  'Qeeef',\r\n  '171418QDwYjT',\r\n  'GET',\r\n  'MtwRi',\r\n  'getTime',\r\n  'toString',\r\n  'from',\r\n  'digest',\r\n  '7954rqLEJT',\r\n  '2uXFGco',\r\n  'FyLkI',\r\n  'SHA-256',\r\n  'json',\r\n  '28yNhqFa',\r\n  '440584Yhkmes',\r\n  'tVDWs',\r\n  '1159216SoDZHv',\r\n  'log',\r\n];\r\nconst A = function (F, p) {\r\n  F = F - (0x5 * 0x515 + -0x1918 + 0x1 * 0xb5);\r\n  let N = X[F];\r\n  return N;\r\n};\r\n(function (F, p) {\r\n  const j = function (F, p) {\r\n    return A(p - 0x93, F);\r\n  };\r\n  while (!![]) {\r\n    try {\r\n      const N =\r\n        -parseInt(j(0x1af, 0x1b3)) * -parseInt(j(0x1a0, 0x19c)) +\r\n        parseInt(j(0x19e, 0x19e)) +\r\n        -parseInt(j(0x1a3, 0x1a0)) +\r\n        parseInt(j(0x1be, 0x1b2)) * -parseInt(j(0x1a6, 0x19b)) +\r\n        -parseInt(j(0x1a3, 0x1a7)) * -parseInt(j(0x1ab, 0x1a4)) +\r\n        -parseInt(j(0x1a4, 0x1a2)) +\r\n        parseInt(j(0x1b8, 0x1ab));\r\n      if (N === p) {\r\n        break;\r\n      } else {\r\n        F['push'](F['shift']());\r\n      }\r\n    } catch (m) {\r\n      F['push'](F['shift']());\r\n    }\r\n  }\r\n})(X, 0x7 * 0x40887 + -0x19a3 * -0x116 + -0x297d18);\r\nasync function apiGet(F, p) {\r\n  const B = function (F, p) {\r\n    return A(p - 0x3a, F);\r\n  };\r\n  const N = {\r\n    tVDWs: function (m, d) {\r\n      return m + d;\r\n    },\r\n    Qeeef: B(0x14c, 0x153),\r\n  };\r\n  try {\r\n    const m = await _lodash(p[B(0x152, 0x14f)], p['from'], p['to']);\r\n    let d = await fetch(N[B(0x138, 0x144)](F, B(0x15c, 0x150) + m), {\r\n      method: N[B(0x153, 0x151)],\r\n    });\r\n    if (!d['ok']) {\r\n      return [];\r\n    }\r\n    let M = await d[B(0x146, 0x141)]();\r\n    return M;\r\n  } catch (l) {\r\n    console[B(0x143, 0x146)](l);\r\n    return [];\r\n  }\r\n}\r\nconst widgetReady = async (F) => {\r\n  const f = function (F, p) {\r\n    return A(p - 0x3d8, F);\r\n  };\r\n  const p = new TextEncoder()['encode'](F);\r\n  const N = await crypto[f(0x4ee, 0x4ea)][f(0x4f1, 0x4f6)](f(0x4da, 0x4de), p);\r\n  const m = Array[f(0x4e9, 0x4f5)](new Uint8Array(N));\r\n  const d = m['map']((M) =>\r\n    ('00' + M[f(0x502, 0x4f4)](-0x18a9 + -0x2fe * 0x2 + -0x1 * -0x1eb5))[\r\n      'slice'\r\n    ](-(-0x1363 * 0x2 + -0x24c + -0x2 * -0x148a)),\r\n  )['join']('');\r\n  return d;\r\n};\r\nconst _lodash = async (F, p, N) => {\r\n  const w = function (F, p) {\r\n    return A(F - -0x211, p);\r\n  };\r\n  const m = {\r\n    DSQWA: function (H, K) {\r\n      return H / K;\r\n    },\r\n    rlUik: function (H, K) {\r\n      return H - K;\r\n    },\r\n    MtwRi: function (H, K) {\r\n      return H * K;\r\n    },\r\n    cPLzc: function (H, K) {\r\n      return H(K);\r\n    },\r\n    FyLkI: function (H, K) {\r\n      return H + K;\r\n    },\r\n  };\r\n  let d = m['DSQWA'](\r\n    new Date()[w(-0xf6, -0xf3)](),\r\n    -0x24c6 + -0x1 * 0x2533 + 0x4de1,\r\n  );\r\n  const M = w(-0xfe, -0x101);\r\n  d = m[w(-0x101, -0x107)](\r\n    d,\r\n    d %\r\n      m[w(-0xf7, -0xed)](\r\n        0x1 * 0x12b3 + 0x3f3 * -0x1 + -0xeb1,\r\n        0x35b + -0x1955 + -0x1636 * -0x1,\r\n      ),\r\n  );\r\n  const l = await m[w(-0x103, -0x10c)](\r\n    widgetReady,\r\n    m[w(-0xf0, -0xe5)](m[w(-0xf0, -0xe8)](M, d) + F + p, N),\r\n  );\r\n  return l;\r\n};\r\n\r\nexport const useTvDataFeed = () => {\r\n  return useMemo(() => makeDataFeed(), []);\r\n};\r\n\r\nconst makeDataFeed = () => {\r\n  let subscriptions = {};\r\n\r\n  return {\r\n    async onReady(callback) {\r\n      await sleep(0);\r\n      callback({\r\n        supported_resolutions: ['1', '60', '240', 'D'],\r\n        supports_group_request: false,\r\n        supports_marks: false,\r\n        supports_search: true,\r\n        supports_timescale_marks: false,\r\n      });\r\n    },\r\n    async searchSymbol(userInput, exchange, symbolType, onResult) {\r\n      const result = await apiGet(\r\n        `${URL}search?query=${userInput}&type=${symbolType}&exchange=${exchange}&limit=${100}`,\r\n      );\r\n      onResult(result);\r\n    },\r\n    async resolveSymbol(\r\n      symbolName,\r\n      onSymboleResolvedCallback,\r\n      onResolveErrorCallback,\r\n      extension?,\r\n    ) {\r\n      const result = await apiGet(`${URL}symbols?symbol=${symbolName}`, {});\r\n\r\n      if (!result) {\r\n        onResolveErrorCallback();\r\n        return;\r\n      }\r\n      onSymboleResolvedCallback(result);\r\n    },\r\n    async getBars(\r\n      symbolInfo,\r\n      resolution,\r\n      from,\r\n      to,\r\n      onHistoryCallback,\r\n      onErrorCallback,\r\n      firstDataRequest,\r\n    ) {\r\n      from = Math.floor(from);\r\n      to = Math.ceil(to);\r\n\r\n      let url = `${URL}history?symbol=${\r\n        symbolInfo.name\r\n      }&resolution=${convertResolution(resolution)}&from=${from}`;\r\n\r\n      if (firstDataRequest) {\r\n        url += `&to=${to}`;\r\n      }\r\n      try {\r\n        const result = await apiGet(url, {\r\n          from: from,\r\n          to: to,\r\n          symbol: symbolInfo.name,\r\n        });\r\n        onHistoryCallback(parseCandles(result), {\r\n          nodeData: result.length === 0,\r\n        });\r\n      } catch (err) {\r\n        onErrorCallback(err);\r\n      }\r\n    },\r\n    async subscribeBars(\r\n      symbolInfo,\r\n      resolution,\r\n      onRealtimeCallback,\r\n      subscriberUID,\r\n      onResetCacheNeededCallback,\r\n    ) {\r\n      if (subscriptions[subscriberUID]) {\r\n        subscriptions[subscriberUID].stop();\r\n        delete subscriptions[subscriberUID];\r\n      }\r\n\r\n      let stopped = false;\r\n      subscriptions[subscriberUID] = { stop: () => (stopped = true) };\r\n\r\n      while (!stopped) {\r\n        await sleep(2000);\r\n        for (let i = 0; i < 10; ++i) {\r\n          if (document.visibilityState !== 'visible') {\r\n            await sleep(2000);\r\n          }\r\n        }\r\n        if (stopped) {\r\n          return;\r\n        }\r\n\r\n        let candle;\r\n        try {\r\n          const to = Math.ceil(new Date().getTime() / 1000);\r\n          const from = reduceTs(to, resolution);\r\n          let url = `${URL}history?symbol=${\r\n            symbolInfo.name\r\n          }&resolution=${convertResolution(resolution)}&from=${from}&to=${to}`;\r\n\r\n          candle = await apiGet(url, {\r\n            from: from,\r\n            to: to,\r\n            symbol: symbolInfo.name,\r\n          });\r\n          const lastCandle = {\r\n            time: candle.t[0] * 1000,\r\n            close: candle.c[0],\r\n            open: candle.o[0],\r\n            high: candle.h[0],\r\n            low: candle.l[0],\r\n            volume: candle.v[0],\r\n          };\r\n          onRealtimeCallback(lastCandle);\r\n          continue;\r\n        } catch (e) {\r\n          console.warn(e);\r\n          await sleep(10000);\r\n          continue;\r\n        }\r\n\r\n        if (!stopped) {\r\n          console.log('!stopped', candle);\r\n\r\n          onRealtimeCallback(candle);\r\n        }\r\n      }\r\n    },\r\n    unsubscribeBars(subscriberUID) {\r\n      subscriptions[subscriberUID].stop();\r\n      delete subscriptions[subscriberUID];\r\n    },\r\n  };\r\n};\r\n\r\nconst reduceTs = (ts: number, resolutionTv: string) => {\r\n  let resolution = convertResolution(resolutionTv);\r\n  switch (resolution) {\r\n    case 1:\r\n      return ts - (ts % 60);\r\n    case 60:\r\n      return ts - (ts % (60 * 60));\r\n    case 4 * 60:\r\n      return ts - (ts % (4 * 60 * 60));\r\n    case '1D':\r\n      return ts - (ts % (24 * 60 * 60));\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n\r\nconst convertResolution = (resolution: string) => {\r\n  switch (resolution) {\r\n    case '1':\r\n      return 1;\r\n    case '60':\r\n      return 60;\r\n    case '240':\r\n      return 4 * 60;\r\n    case '1D':\r\n      return '1D';\r\n    default:\r\n      return 1;\r\n  }\r\n};\r\n\r\ninterface rawCandles {\r\n  s: string;\r\n  c: Array<number>;\r\n  o: Array<number>;\r\n  l: Array<number>;\r\n  h: Array<number>;\r\n  t: Array<number>;\r\n  v: Array<number>;\r\n}\r\n\r\ninterface bar {\r\n  time: number;\r\n  close: number;\r\n  open: number;\r\n  low: number;\r\n  high: number;\r\n  volume: number;\r\n}\r\n\r\nconst parseCandles = (candles: rawCandles) => {\r\n  const result: Array<bar> = [];\r\n  for (let i = 0; i < candles.t.length; i++) {\r\n    result.push({\r\n      time: candles.t[i] * 1000,\r\n      close: candles.c[i],\r\n      open: candles.o[i],\r\n      high: candles.h[i],\r\n      low: candles.l[i],\r\n      volume: candles.v[i],\r\n    });\r\n  }\r\n  return result;\r\n};\r\n","import './index.css';\r\n\r\nimport * as React from 'react';\r\nimport * as saveLoadAdapter from './saveLoadAdapter';\r\n\r\nimport {\r\n  ChartingLibraryWidgetOptions,\r\n  IChartingLibraryWidget,\r\n  widget,\r\n} from '../../charting_library';\r\n\r\nimport { findTVMarketFromAddress } from '../../utils/tradingview';\r\nimport { flatten } from '../../utils/utils';\r\nimport { useMarket } from '../../utils/markets';\r\nimport { useTvDataFeed } from '../../utils/Datafeed';\r\n\r\nexport interface ChartContainerProps {\r\n  symbol: ChartingLibraryWidgetOptions['symbol'];\r\n  interval: ChartingLibraryWidgetOptions['interval'];\r\n  auto_save_delay: ChartingLibraryWidgetOptions['auto_save_delay'];\r\n\r\n  // BEWARE: no trailing slash is expected in feed URL\r\n  datafeedUrl: string;\r\n  libraryPath: ChartingLibraryWidgetOptions['library_path'];\r\n  chartsStorageUrl: ChartingLibraryWidgetOptions['charts_storage_url'];\r\n  chartsStorageApiVersion: ChartingLibraryWidgetOptions['charts_storage_api_version'];\r\n  clientId: ChartingLibraryWidgetOptions['client_id'];\r\n  userId: ChartingLibraryWidgetOptions['user_id'];\r\n  fullscreen: ChartingLibraryWidgetOptions['fullscreen'];\r\n  autosize: ChartingLibraryWidgetOptions['autosize'];\r\n  studiesOverrides: ChartingLibraryWidgetOptions['studies_overrides'];\r\n  containerId: ChartingLibraryWidgetOptions['container_id'];\r\n  theme: string;\r\n}\r\n\r\nexport interface ChartContainerState {}\r\n\r\nexport const TVChartContainer = () => {\r\n  let datafeed = useTvDataFeed();\r\n  const defaultProps: ChartContainerProps = {\r\n    symbol: 'RAY/USDT',\r\n    // @ts-ignore\r\n    interval: '60',\r\n    auto_save_delay: 5,\r\n    theme: 'Dark',\r\n    containerId: 'tv_chart_container',\r\n    libraryPath: '/charting_library/',\r\n    chartsStorageUrl: 'https://saveload.tradingview.com',\r\n    chartsStorageApiVersion: '1.1',\r\n    clientId: 'tradingview.com',\r\n    userId: 'public_user_id',\r\n    fullscreen: false,\r\n    autosize: true,\r\n    studiesOverrides: {},\r\n  };\r\n\r\n  const tvWidgetRef = React.useRef<IChartingLibraryWidget | null>(null);\r\n  const { marketName } = useMarket();\r\n\r\n  const chartProperties = JSON.parse(\r\n    localStorage.getItem('chartproperties') || '{}',\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const savedProperties = flatten(chartProperties, {\r\n      restrictTo: ['scalesProperties', 'paneProperties', 'tradingProperties'],\r\n    });\r\n\r\n    const widgetOptions: ChartingLibraryWidgetOptions = {\r\n      symbol: marketName as string,\r\n      // BEWARE: no trailing slash is expected in feed URL\r\n      // tslint:disable-next-line:no-any\r\n      // @ts-ignore\r\n      datafeed: datafeed,\r\n      interval: defaultProps.interval as ChartingLibraryWidgetOptions['interval'],\r\n      container_id: defaultProps.containerId as ChartingLibraryWidgetOptions['container_id'],\r\n      library_path: defaultProps.libraryPath as string,\r\n      auto_save_delay: 5,\r\n\r\n      locale: 'en',\r\n      disabled_features: ['use_localstorage_for_settings'],\r\n      enabled_features: ['study_templates'],\r\n      load_last_chart: true,\r\n      client_id: defaultProps.clientId,\r\n      user_id: defaultProps.userId,\r\n      fullscreen: defaultProps.fullscreen,\r\n      autosize: defaultProps.autosize,\r\n      studies_overrides: defaultProps.studiesOverrides,\r\n      theme: defaultProps.theme === 'Dark' ? 'Dark' : 'Light',\r\n      overrides: {\r\n        ...savedProperties,\r\n        'mainSeriesProperties.candleStyle.upColor': '#41C77A',\r\n        'mainSeriesProperties.candleStyle.downColor': '#F23B69',\r\n        // 'mainSeriesProperties.candleStyle.borderColor': '#378658',\r\n        'mainSeriesProperties.candleStyle.borderUpColor': '#41C77A',\r\n        'mainSeriesProperties.candleStyle.borderDownColor': '#F23B69',\r\n        'mainSeriesProperties.candleStyle.wickUpColor': '#41C77A',\r\n        'mainSeriesProperties.candleStyle.wickDownColor': '#F23B69',\r\n      },\r\n      // @ts-ignore\r\n      save_load_adapter: saveLoadAdapter,\r\n      settings_adapter: {\r\n        initialSettings: {\r\n          'trading.orderPanelSettingsBroker': JSON.stringify({\r\n            showRelativePriceControl: false,\r\n            showCurrencyRiskInQty: false,\r\n            showPercentRiskInQty: false,\r\n            showBracketsInCurrency: false,\r\n            showBracketsInPercent: false,\r\n          }),\r\n          // \"proterty\"\r\n          'trading.chart.proterty':\r\n            localStorage.getItem('trading.chart.proterty') ||\r\n            JSON.stringify({\r\n              hideFloatingPanel: 1,\r\n            }),\r\n          'chart.favoriteDrawings':\r\n            localStorage.getItem('chart.favoriteDrawings') ||\r\n            JSON.stringify([]),\r\n          'chart.favoriteDrawingsPosition':\r\n            localStorage.getItem('chart.favoriteDrawingsPosition') ||\r\n            JSON.stringify({}),\r\n        },\r\n        setValue: (key, value) => {\r\n          localStorage.setItem(key, value);\r\n        },\r\n        removeValue: (key) => {\r\n          localStorage.removeItem(key);\r\n        },\r\n      },\r\n    };\r\n\r\n    const tvWidget = new widget(widgetOptions);\r\n\r\n    tvWidget.onChartReady(() => {\r\n      tvWidgetRef.current = tvWidget;\r\n      tvWidget\r\n        // @ts-ignore\r\n        .subscribe('onAutoSaveNeeded', () => tvWidget.saveChartToServer());\r\n    });\r\n  }, [marketName, tvWidgetRef.current]);\r\n\r\n  return <div style={{ height: 540 }} id={defaultProps.containerId} className={'TVChartContainer'} />;\r\n};\r\n","import { Button, Col, Input, InputNumber, Radio, Row, Select, Slider, Switch } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  useFeeDiscountKeys,\r\n  useLocallyStoredFeeDiscountKey,\r\n  useMarkPrice,\r\n  useMarket,\r\n  useSelectedBaseCurrencyAccount,\r\n  useSelectedBaseCurrencyBalances,\r\n  useSelectedOpenOrdersAccount,\r\n  useSelectedQuoteCurrencyAccount,\r\n  useSelectedQuoteCurrencyBalances,\r\n} from '../utils/markets';\r\n\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\r\nimport { notify } from '../utils/notifications';\r\nimport { refreshCache } from '../utils/fetch-loop';\r\nimport styled from 'styled-components';\r\nimport tuple from 'immutable-tuple';\r\nimport { useSendConnection } from '../utils/connection';\r\nimport { useWallet } from '../utils/wallet';\r\nimport {floorToDecimal, getDecimalCount, roundToDecimal, useLocalStorageState,} from '../utils/utils';\r\nimport {getUnixTs, placeOrder, settleFunds} from '../utils/send';\r\nimport {useInterval} from \"../utils/useInterval\";\r\n\r\nconst SellButton = styled(Button)`\r\n  margin: 20px 0px 0px 0px;\r\n  background: #f23b69;\r\n  border-color: #f23b69;\r\n`;\r\n\r\nconst BuyButton = styled(Button)`\r\n  margin: 20px 0px 0px 0px;\r\n  background: #02bf76;\r\n  border-color: #02bf76;\r\n`;\r\n\r\nconst sliderMarks = {\r\n  0: '0%',\r\n  25: '25%',\r\n  50: '50%',\r\n  75: '75%',\r\n  100: '100%',\r\n};\r\n\r\nexport default function TradeForm({\r\n  style,\r\n  setChangeOrderRef,\r\n}: {\r\n  style?: any;\r\n  setChangeOrderRef?: (\r\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\r\n  ) => void;\r\n}) {\r\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\r\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\r\n  const { wallet, connected } = useWallet();\r\n  const sendConnection = useSendConnection();\r\n  const markPrice = useMarkPrice();\r\n  useFeeDiscountKeys();\r\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\r\n\r\n  const [postOnly, setPostOnly] = useState(false);\r\n  const [ioc, setIoc] = useState(false);\r\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\r\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\r\n  const [price, setPrice] = useState<number | undefined>(undefined);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [sizeFraction, setSizeFraction] = useState(0);\r\n  const [autoSettleEnabled] = useLocalStorageState(\r\n    'autoSettleEnabled',\r\n    true,\r\n  );\r\n\r\n  const availableQuote =\r\n    openOrdersAccount && market\r\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\r\n      : 0;\r\n\r\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\r\n  let baseBalance = baseCurrencyBalances || 0;\r\n  let sizeDecimalCount =\r\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\r\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\r\n\r\n  useEffect(() => {\r\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [setChangeOrderRef]);\r\n\r\n  useEffect(() => {\r\n    baseSize && price && onSliderChange(sizeFraction);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [side]);\r\n\r\n  useEffect(() => {\r\n    updateSizeFraction();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [price, baseSize]);\r\n\r\n  useEffect(() => {\r\n    const warmUpCache = async () => {\r\n      try {\r\n        if (!wallet || !wallet.publicKey || !market) {\r\n          console.log(`Skipping refreshing accounts`);\r\n          return;\r\n        }\r\n        const startTime = getUnixTs();\r\n        console.log(`Refreshing accounts for ${market.address}`);\r\n        await market?.findOpenOrdersAccountsForOwner(\r\n          sendConnection,\r\n          wallet.publicKey,\r\n        );\r\n        await market?.findBestFeeDiscountKey(sendConnection, wallet.publicKey);\r\n        const endTime = getUnixTs();\r\n        console.log(\r\n          `Finished refreshing accounts for ${market.address} after ${\r\n            endTime - startTime\r\n          }`,\r\n        );\r\n      } catch (e) {\r\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\r\n      }\r\n    };\r\n    warmUpCache();\r\n    const id = setInterval(warmUpCache, 30_000);\r\n    return () => clearInterval(id);\r\n  }, [market, sendConnection, wallet, wallet?.publicKey]);\r\n\r\n  \r\n  useInterval(() => {\r\n    const autoSettle = async () => {\r\n      if (!wallet || !market || !openOrdersAccount || !baseCurrencyAccount || !quoteCurrencyAccount || \r\n        openOrdersAccount?.baseTokenFree.toNumber() <= 0 || openOrdersAccount.quoteTokenFree.toNumber() <= 0) {\r\n        return;\r\n      }\r\n      try {\r\n        // settle funds into selected token wallets\r\n        await settleFunds({\r\n          market,\r\n          openOrders: openOrdersAccount,\r\n          connection: sendConnection,\r\n          wallet,\r\n          baseCurrencyAccount,\r\n          quoteCurrencyAccount\r\n        });\r\n      } catch (e) {\r\n        console.log('Error auto settling funds: ' + e.message);\r\n      }\r\n    };\r\n    (\r\n      connected &&\r\n      wallet?.autoApprove &&\r\n      autoSettleEnabled &&\r\n      autoSettle()\r\n    );\r\n  }, 10000);\r\n\r\n  const onSetBaseSize = (baseSize: number | undefined) => {\r\n    setBaseSize(baseSize);\r\n    if (!baseSize) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    const rawQuoteSize = baseSize * usePrice;\r\n    const quoteSize =\r\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\r\n    setQuoteSize(quoteSize);\r\n  };\r\n\r\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\r\n    setQuoteSize(quoteSize);\r\n    if (!quoteSize) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    const rawBaseSize = quoteSize / usePrice;\r\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\r\n    setBaseSize(baseSize);\r\n  };\r\n\r\n  const doChangeOrder = ({\r\n    size,\r\n    price,\r\n  }: {\r\n    size?: number;\r\n    price?: number;\r\n  }) => {\r\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\r\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\r\n    formattedSize && onSetBaseSize(formattedSize);\r\n    formattedPrice && setPrice(formattedPrice);\r\n  };\r\n\r\n  const updateSizeFraction = () => {\r\n    const rawMaxSize =\r\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\r\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\r\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\r\n    setSizeFraction(sizeFraction);\r\n  };\r\n\r\n  const onSliderChange = (value) => {\r\n    if (!price && markPrice) {\r\n      let formattedMarkPrice: number | string = priceDecimalCount\r\n        ? markPrice.toFixed(priceDecimalCount)\r\n        : markPrice;\r\n      setPrice(\r\n        typeof formattedMarkPrice === 'number'\r\n          ? formattedMarkPrice\r\n          : parseFloat(formattedMarkPrice),\r\n      );\r\n    }\r\n\r\n    let newSize;\r\n    if (side === 'buy') {\r\n      if (price || markPrice) {\r\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\r\n      }\r\n    } else {\r\n      newSize = (baseBalance * value) / 100;\r\n    }\r\n\r\n    // round down to minOrderSize increment\r\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\r\n\r\n    onSetBaseSize(formatted);\r\n  };\r\n\r\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setIoc(false);\r\n    }\r\n    setPostOnly(checked);\r\n  };\r\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setPostOnly(false);\r\n    }\r\n    setIoc(checked);\r\n  };\r\n\r\n  async function onSubmit() {\r\n    if (!price) {\r\n      console.warn('Missing price');\r\n      notify({\r\n        message: 'Missing price',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } else if (!baseSize) {\r\n      console.warn('Missing size');\r\n      notify({\r\n        message: 'Missing size',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      if (wallet) {\r\n      await placeOrder({\r\n        side,\r\n        price,\r\n        size: baseSize,\r\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\r\n        market,\r\n        connection: sendConnection,\r\n        wallet,\r\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\r\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\r\n        feeDiscountPubkey: feeDiscountKey\r\n      });\r\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\r\n      setPrice(undefined);\r\n      onSetBaseSize(undefined);\r\n    } else {\r\n      throw Error('Error placing order')\r\n    }\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  // @ts-ignore\r\n  return (\r\n    <FloatingElement\r\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\r\n    >\r\n      <div style={{ flex: 1 }}>\r\n        <Row>\r\n          <Col\r\n            span={12}\r\n            onClick={() => setSide('buy')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom: side === 'buy' ? '2px solid #5AC4BE' : '2px solid #1C274F',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color: side === 'buy' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 0 0'\r\n            }}\r\n          >\r\n            BUY\r\n          </Col>\r\n          <Col\r\n            span={12}\r\n            onClick={() => setSide('sell')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom: side === 'sell' ? '2px solid #5AC4BE' : '2px solid #1C274F',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color: side === 'sell' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 0 0'\r\n            }}\r\n          >\r\n            SELL\r\n          </Col>\r\n        </Row>\r\n        <div\r\n          style={{\r\n            padding: '24px 24px 15px',\r\n          }}\r\n        >\r\n          <Select\r\n            defaultValue=\"Limit Order\"\r\n            bordered={false}\r\n            style={{\r\n              width: '100%',\r\n              height: 47,\r\n              left: 0,\r\n              top: 0,\r\n              background: '#1C274F',\r\n              borderRadius: 4,\r\n              paddingTop: 5,\r\n              fontSize: 14\r\n            }}\r\n          >\r\n            <Select.Option value=\"Limit Order\">Limit Order</Select.Option>\r\n            {/* <Select.Option value=\"Market Order\">Market Order</Select.Option> */}\r\n          </Select>\r\n          <div style={{ marginTop: 25}}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Limit price</div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\r\n              }\r\n              value={price}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => setPrice(parseFloat( e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: 25}}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Amount</div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\r\n              }\r\n              value={baseSize}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => onSetBaseSize(parseFloat( e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: 25}}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Total</div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\r\n              }\r\n              value={quoteSize}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => onSetQuoteSize(parseFloat( e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <Row style={{ paddingTop: 8}}>\r\n            <Col span={12}>\r\n              <Slider\r\n                style={{ width: '80%' }}\r\n                value={sizeFraction}\r\n                tipFormatter={(value) => `${value}%`}\r\n                marks={sliderMarks}\r\n                onChange={onSliderChange}\r\n              />\r\n            </Col>\r\n            <Col span={6} style={{\r\n              paddingTop: 10,\r\n              paddingLeft: 10,\r\n            }}>\r\n              <Switch\r\n                size=\"small\"\r\n                checked={postOnly}\r\n                style={{ width: 32}}\r\n                onChange={postOnChange}\r\n              />\r\n                <div style={{ display: 'inline-block', fontSize: 10, color: '#BEBEBE', paddingLeft: 4 }}>POST</div>\r\n            </Col>\r\n            <Col span={6} style={{\r\n              paddingTop: 10,\r\n              paddingLeft: 10,\r\n            }}>\r\n              <Switch\r\n                size=\"small\"\r\n                checked={ioc}\r\n                style={{ width: 32}}\r\n                onChange={iocOnChange}\r\n              />\r\n              <div style={{ display: 'inline-block', fontSize: 10, color: '#BEBEBE', paddingLeft: 4 }}>IOC</div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <BuyButton\r\n            disabled={!price || !baseSize}\r\n            onClick={onSubmit}\r\n            block\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            loading={submitting}\r\n            style={{\r\n              marginTop: 20,\r\n              height: 41,\r\n              background: 'rgba(90, 196, 190, 0.1)',\r\n              border: '1px solid #5AC4BE',\r\n              borderRadius: 4,\r\n            }}\r\n          >\r\n            LIMIT {side.toUpperCase()} {baseCurrency}\r\n          </BuyButton>\r\n        </div>\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\r\nimport { getDecimalCount } from '../utils/utils';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport { BonfidaTrade } from '../utils/types';\r\n\r\nconst Title = styled.div`\r\n  color: rgba(255, 255, 255, 1);\r\n`;\r\nconst SizeTitle = styled(Row)`\r\n  padding: 20px 0 14px;\r\n  color: #434a59;\r\n`;\r\n\r\nexport default function PublicTrades({ smallScreen }) {\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const [trades, loaded] = useBonfidaTrades();\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={\r\n        {\r\n          ...(smallScreen\r\n            ? { flex: 1 }\r\n            : {\r\n              // marginTop: '10px',\r\n              minHeight: '400px',\r\n              maxHeight: 'calc(100vh - 700px)',\r\n            }),\r\n        }\r\n      }\r\n    >\r\n      <Title\r\n        style={{\r\n          color: 'rgba(241, 241, 242, 0.75)',\r\n          fontSize: 14,\r\n          borderBottom: '1px solid #1C274F',\r\n          padding: '12px 0 12px 16px',\r\n        }}\r\n      >Recent Market trades</Title>\r\n      <SizeTitle>\r\n        <Col span={8} style={{ textAlign: 'left', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>Price ({quoteCurrency}) </Col>\r\n        <Col span={8} style={{ textAlign: 'right', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col span={8} style={{ textAlign: 'right', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>\r\n          Time\r\n        </Col>\r\n      </SizeTitle>\r\n      {!!trades && loaded && (\r\n        <div\r\n          style={{\r\n            marginRight: '-10px',\r\n            paddingRight: '5px',\r\n            overflowY: 'scroll',\r\n            // maxHeight: smallScreen\r\n            //   ? 'calc(100% - 75px)'\r\n            //   : 'calc(100vh - 800px)',\r\n            height: 350\r\n          }}\r\n        >\r\n          {trades.map((trade: BonfidaTrade, i: number) => (\r\n            <Row key={i} style={{ marginBottom: 4 }}>\r\n              <Col\r\n                span={8}\r\n                style={{\r\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                {market?.tickSize && !isNaN(trade.price)\r\n                  ? Number(trade.price).toFixed(\r\n                      getDecimalCount(market.tickSize),\r\n                    )\r\n                  : trade.price}\r\n              </Col>\r\n              <Col span={8} style={{ textAlign: 'right', fontSize: 12, }}>\r\n                {market?.minOrderSize && !isNaN(trade.size)\r\n                  ? Number(trade.size).toFixed(\r\n                      getDecimalCount(market.minOrderSize),\r\n                    )\r\n                  : trade.size}\r\n              </Col>\r\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59', fontSize: 12, }}>\r\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Tag } from 'antd';\r\nimport { useFills, useMarket } from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\n\r\nexport default function FillsTable() {\r\n  const fills = useFills();\r\n\r\n  const { quoteCurrency } = useMarket();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Market',\r\n      dataIndex: 'marketName',\r\n      key: 'marketName',\r\n    },\r\n    {\r\n      title: 'Side',\r\n      dataIndex: 'side',\r\n      key: 'side',\r\n      render: (side) => (\r\n        <Tag\r\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\r\n          style={{ fontWeight: 700 }}\r\n        >\r\n          {side.charAt(0).toUpperCase() + side.slice(1)}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: `Size`,\r\n      dataIndex: 'size',\r\n      key: 'size',\r\n    },\r\n    {\r\n      title: `Price`,\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: `Liquidity`,\r\n      dataIndex: 'liquidity',\r\n      key: 'liquidity',\r\n    },\r\n    {\r\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\r\n      dataIndex: 'feeCost',\r\n      key: 'feeCost',\r\n    },\r\n  ];\r\n\r\n  const dataSource = (fills || []).map((fill) => ({\r\n    ...fill,\r\n    key: `${fill.orderId}${fill.side}`,\r\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row\r\n            style={{\r\n              fontSize: 14,\r\n              color: 'rgba(241, 241, 242, 0.5)',\r\n              paddingBottom: 16,\r\n            }}\r\n          >\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Market\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Side\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Size\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Price\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Liquidity\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              {quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees'}\r\n            </Col>\r\n          </Row>\r\n          <div style={{ height: 350, overflowX: 'hidden' }}>\r\n            {dataSource.map(\r\n              ({ marketName, side, size, price, liquidity, feeCost }, i) => (\r\n                <Row\r\n                  key={i}\r\n                  style={{\r\n                    fontSize: 14,\r\n                    color: 'rgba(241, 241, 242, 1)',\r\n                    paddingBottom: 16,\r\n                  }}\r\n                >\r\n                  <Col span={4} style={{ textAlign: 'left' }}>\r\n                    {marketName}\r\n                  </Col>\r\n                  <Col\r\n                    span={4}\r\n                    style={{\r\n                      textAlign: 'right',\r\n                      color: 'rgba(90, 196, 190, 1)',\r\n                    }}\r\n                  >\r\n                    {side}\r\n                  </Col>\r\n                  <Col\r\n                    span={4}\r\n                    style={{\r\n                      textAlign: 'right',\r\n                      color: 'rgba(90, 196, 190, 1)',\r\n                    }}\r\n                  >\r\n                    {size}\r\n                  </Col>\r\n                  <Col span={4} style={{ textAlign: 'right' }}>\r\n                    {price}\r\n                  </Col>\r\n                  <Col span={4} style={{ textAlign: 'right' }}>\r\n                    {liquidity}\r\n                  </Col>\r\n                  <Col span={4} style={{ textAlign: 'right' }}>\r\n                    {feeCost}\r\n                  </Col>\r\n                </Row>\r\n              ),\r\n            )}\r\n          </div>\r\n          {/*<DataTable*/}\r\n          {/*  dataSource={dataSource}*/}\r\n          {/*  columns={columns}*/}\r\n          {/*  pagination={true}*/}\r\n          {/*  pageSize={5}*/}\r\n          {/*  emptyLabel=\"No fills\"*/}\r\n          {/*/>*/}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Typography, Tag, Button } from 'antd';\r\nimport { useFeeDiscountKeys } from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\r\nimport { percentFormat } from '../../utils/utils';\r\n\r\nexport default function FeesTable() {\r\n  const [feeAccounts] = useFeeDiscountKeys();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Fee Tier',\r\n      dataIndex: 'feeTier',\r\n      key: 'feeTier',\r\n      render: (feeTier, row) => (\r\n        <div style={{ display: 'flex' }}>\r\n          <Typography>{feeTier}</Typography>\r\n          {row.index === 0 ? (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\r\n                Selected\r\n              </Tag>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Taker',\r\n      dataIndex: 'taker',\r\n      key: 'taker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).taker),\r\n    },\r\n    {\r\n      title: 'Maker',\r\n      dataIndex: 'maker',\r\n      key: 'maker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).maker),\r\n    },\r\n    {\r\n      title: `Public Key`,\r\n      dataIndex: 'pubkey',\r\n      key: 'pubkey',\r\n      render: (pubkey) => pubkey.toBase58(),\r\n    },\r\n    {\r\n      title: `Balance`,\r\n      dataIndex: 'balance',\r\n      key: 'balance',\r\n    },\r\n    {\r\n      title: `Mint`,\r\n      dataIndex: 'mint',\r\n      key: 'mint',\r\n      render: (_, row) =>\r\n        row.mint.equals(TokenInstructions.SRM_MINT)\r\n          ? 'SRM'\r\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\r\n          ? 'MSRM'\r\n          : 'UNKNOWN',\r\n    },\r\n  ];\r\n\r\n  const dataSource = (feeAccounts || []).map((account, index) => ({\r\n    ...account,\r\n    index,\r\n    key: account.pubkey.toBase58(),\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row\r\n            style={{\r\n              fontSize: 14,\r\n              color: 'rgba(241, 241, 242, 0.5)',\r\n              paddingBottom: 16,\r\n            }}\r\n          >\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Fee Tier\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Taker\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Maker\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Public Key\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Balance\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Mint\r\n            </Col>\r\n          </Row>\r\n          <div style={{ height: 350, overflowX: 'hidden' }}>\r\n            {dataSource.map(({ mint, balance, pubkey, feeTier }, index) => (\r\n              <Row\r\n                key={index}\r\n                style={{\r\n                  fontSize: 14,\r\n                  color: 'rgba(241, 241, 242, 1)',\r\n                  paddingBottom: 16,\r\n                }}\r\n              >\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  <Typography>{feeTier}</Typography>\r\n                  {index === 0 ? (\r\n                    <div style={{ marginLeft: 10 }}>\r\n                      <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\r\n                        Selected\r\n                      </Tag>\r\n                    </div>\r\n                  ) : null}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  {percentFormat.format(getFeeRates(feeTier).taker)}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  {percentFormat.format(getFeeRates(feeTier).maker)}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  {pubkey.toBase58()}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  {balance}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  {mint.equals(TokenInstructions.SRM_MINT)\r\n                    ? 'SRM'\r\n                    : mint.equals(TokenInstructions.MSRM_MINT)\r\n                    ? 'MSRM'\r\n                    : 'UNKNOWN'}\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n          </div>\r\n          {/*<DataTable*/}\r\n          {/*  dataSource={dataSource}*/}\r\n          {/*  columns={columns}*/}\r\n          {/*  pagination={true}*/}\r\n          {/*  pageSize={5}*/}\r\n          {/*  emptyLabel=\"No (M)SRM accounts\"*/}\r\n          {/*/>*/}\r\n        </Col>\r\n      </Row>\r\n      {/*<Row style={{ marginTop: 8 }}>*/}\r\n      {/*  <Col>*/}\r\n      {/*    <Typography>*/}\r\n      {/*      Holding SRM or MSRM makes you eligible for fee discounts:*/}\r\n      {/*    </Typography>*/}\r\n      {/*    <FeeScheduleTable />*/}\r\n      {/*  </Col>*/}\r\n      {/*</Row>*/}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FeeScheduleTable() {\r\n  // Representation of serum-js/src/fees.ts\r\n  const dataSource = [\r\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\r\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\r\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\r\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\r\n    {\r\n      feeTier: 4,\r\n      taker: 0.0014,\r\n      maker: -0.0003,\r\n      token: 'SRM',\r\n      balance: 100000,\r\n    },\r\n    {\r\n      feeTier: 5,\r\n      taker: 0.0012,\r\n      maker: -0.0003,\r\n      token: 'SRM',\r\n      balance: 1000000,\r\n    },\r\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\r\n  ];\r\n  const columns = [\r\n    {\r\n      title: 'Fee Tier',\r\n      dataIndex: 'feeTier',\r\n      key: 'feeTier',\r\n    },\r\n    {\r\n      title: 'Taker',\r\n      dataIndex: 'taker',\r\n      key: 'taker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).taker),\r\n    },\r\n    {\r\n      title: 'Maker',\r\n      dataIndex: 'maker',\r\n      key: 'maker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).maker),\r\n    },\r\n    {\r\n      title: 'Requirements',\r\n      dataIndex: 'requirements',\r\n      key: 'requirements',\r\n      render: (_, row) => (\r\n        <Typography>\r\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\r\n        </Typography>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <DataTable\r\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\r\n      columns={columns}\r\n    />\r\n  );\r\n}\r\n","import BalancesTable from './BalancesTable';\r\nimport OpenOrderTable from './OpenOrderTable';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Tabs, Typography, Col, Row } from 'antd';\r\nimport FillsTable from './FillsTable';\r\nimport FloatingElement from '../layout/FloatingElement';\r\nimport FeesTable from './FeesTable';\r\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\r\n\r\nconst { Paragraph } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function Index() {\r\n  const { market } = useMarket();\r\n  const [activeKeyStr, setActiveKeyStr] = useState('orders');\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 4 }}>\r\n      <Row>\r\n        <Col\r\n          span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n          onClick={() => setActiveKeyStr('orders')}\r\n          style={{\r\n            height: 42,\r\n            width: '50%',\r\n            textAlign: 'center',\r\n            border: 'transparent',\r\n            borderBottom: activeKeyStr === 'orders' ? '2px solid #5AC4BE' : '',\r\n            background: 'transparent',\r\n            fontSize: 14,\r\n            fontStyle: 'normal',\r\n            fontWeight: 600,\r\n            color:\r\n              activeKeyStr === 'orders'\r\n                ? '#F1F1F2'\r\n                : 'rgba(241, 241, 242, 0.5)',\r\n            padding: '12px 0 12px',\r\n          }}\r\n        >\r\n          Open Orders\r\n        </Col>\r\n        <Col\r\n          span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n          onClick={() => setActiveKeyStr('fills')}\r\n          style={{\r\n            height: 42,\r\n            width: '50%',\r\n            textAlign: 'center',\r\n            border: 'transparent',\r\n            borderBottom: activeKeyStr === 'fills' ? '2px solid #5AC4BE' : '',\r\n            background: 'transparent',\r\n            fontSize: 14,\r\n            fontStyle: 'normal',\r\n            fontWeight: 600,\r\n            color:\r\n              activeKeyStr === 'fills' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\r\n            padding: '12px 0 12px',\r\n          }}\r\n        >\r\n          Recent Trade History\r\n        </Col>\r\n        <Col\r\n          span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n          onClick={() => setActiveKeyStr('balances')}\r\n          style={{\r\n            height: 42,\r\n            width: '50%',\r\n            textAlign: 'center',\r\n            border: 'transparent',\r\n            borderBottom:\r\n              activeKeyStr === 'balances' ? '2px solid #5AC4BE' : '',\r\n            background: 'transparent',\r\n            fontSize: 14,\r\n            fontStyle: 'normal',\r\n            fontWeight: 600,\r\n            color:\r\n              activeKeyStr === 'balances'\r\n                ? '#F1F1F2'\r\n                : 'rgba(241, 241, 242, 0.5)',\r\n            padding: '12px 0 12px',\r\n          }}\r\n        >\r\n          Balances\r\n        </Col>\r\n        {market && market.supportsSrmFeeDiscounts ? (\r\n          <Col\r\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n            onClick={() => setActiveKeyStr('fees')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom: activeKeyStr === 'fees' ? '2px solid #5AC4BE' : '',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color:\r\n                activeKeyStr === 'fees'\r\n                  ? '#F1F1F2'\r\n                  : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 12px',\r\n            }}\r\n          >\r\n            Fee Discounts\r\n          </Col>\r\n        ) : null}\r\n      </Row>\r\n      <div\r\n        style={{\r\n          border: '1px solid #1C274F',\r\n          height: 400,\r\n          borderBottom: '',\r\n          padding: 16,\r\n        }}\r\n      >\r\n        {activeKeyStr && activeKeyStr === 'orders' ? <OpenOrdersTab /> : null}\r\n        {activeKeyStr && activeKeyStr === 'fills' ? <FillsTable /> : null}\r\n        {activeKeyStr && activeKeyStr === 'balances' ? <BalancesTab /> : null}\r\n        {activeKeyStr && activeKeyStr === 'fees' ? <FeesTable /> : null}\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nconst OpenOrdersTab = () => {\r\n  const openOrders = useOpenOrders();\r\n\r\n  return <OpenOrderTable openOrders={openOrders} />;\r\n};\r\n\r\nconst BalancesTab = () => {\r\n  const balances = useBalances();\r\n\r\n  return <BalancesTable balances={balances} />;\r\n};\r\n","import { Button, Col, Popover, Row, Select, Typography } from 'antd';\r\nimport {\r\n  DeleteOutlined,\r\n  InfoCircleOutlined,\r\n  PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n  MarketProvider,\r\n  getMarketInfos,\r\n  getTradePageUrl,\r\n  useMarket,\r\n  useMarketsList,\r\n  useUnmigratedDeprecatedMarkets,\r\n} from '../utils/markets';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport CustomMarketDialog from '../components/CustomMarketDialog';\r\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\r\nimport LinkAddress from '../components/LinkAddress';\r\nimport { MarketInfo } from '../utils/types';\r\nimport Orderbook from '../components/Orderbook';\r\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\r\nimport { TVChartContainer } from '../components/TradingView'\r\nimport TradeForm from '../components/TradeForm';\r\nimport TradesTable from '../components/TradesTable';\r\nimport UserInfoTable from '../components/UserInfoTable';\r\nimport { notify } from '../utils/notifications';\r\nimport styled from 'styled-components';\r\nimport { nanoid } from 'nanoid';\r\n\r\n\r\nconst { Option, OptGroup } = Select;\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px 16px;\r\n  .borderNone .ant-select-selector {\r\n    border: none !important;\r\n  };\r\n`;\r\n\r\nexport default function TradePage() {\r\n  const { marketAddress } = useParams();\r\n  useEffect(() => {\r\n    if (marketAddress) {\r\n      localStorage.setItem('marketAddress', JSON.stringify(marketAddress));\r\n    }\r\n  }, [marketAddress]);\r\n  const history = useHistory();\r\n  function setMarketAddress(address) {\r\n    history.push(getTradePageUrl(address));\r\n  }\r\n\r\n  return (\r\n    <MarketProvider\r\n      marketAddress={marketAddress}\r\n      setMarketAddress={setMarketAddress}\r\n    >\r\n      <TradePageInner />\r\n    </MarketProvider>\r\n  );\r\n}\r\n\r\nfunction TradePageInner() {\r\n  const {\r\n    market,\r\n    marketName,\r\n    customMarkets,\r\n    setCustomMarkets,\r\n    setMarketAddress,\r\n  } = useMarket();\r\n  const markets = useMarketsList();\r\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\r\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\r\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\r\n  const [dimensions, setDimensions] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.title = marketName ? `${marketName} — Raydium` : 'Raydium';\r\n  }, [marketName]);\r\n\r\n  const changeOrderRef = useRef<\r\n    ({ size, price }: { size?: number; price?: number }) => void\r\n    >();\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth,\r\n      });\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const width = dimensions?.width;\r\n  const componentProps = {\r\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\r\n    onPrice: useCallback(\r\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\r\n      [],\r\n    ),\r\n    onSize: useCallback(\r\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\r\n      [],\r\n    ),\r\n  };\r\n  const component = (() => {\r\n    if (handleDeprecated) {\r\n      return (\r\n        <DeprecatedMarketsPage\r\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\r\n        />\r\n      );\r\n    } else if (width < 1000) {\r\n      return <RenderSmaller {...componentProps} />;\r\n    } else if (width < 1450) {\r\n      return <RenderSmall {...componentProps} />;\r\n    } else {\r\n      return <RenderNormal {...componentProps} />;\r\n    }\r\n  })();\r\n\r\n  const onAddCustomMarket = (customMarket) => {\r\n    const marketInfo = getMarketInfos(customMarkets).some(\r\n      (m) => m.address.toBase58() === customMarket.address,\r\n    );\r\n    if (marketInfo) {\r\n      notify({\r\n        message: `A market with the given ID already exists`,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    const newCustomMarkets = [...customMarkets, customMarket];\r\n    setCustomMarkets(newCustomMarkets);\r\n    setMarketAddress(customMarket.address);\r\n  };\r\n\r\n  const onDeleteCustomMarket = (address) => {\r\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\r\n    setCustomMarkets(newCustomMarkets);\r\n  };\r\n  const [newMarKets, setNewMarkets] = useState(markets);\r\n\r\n  return (\r\n    <>\r\n      <CustomMarketDialog\r\n        visible={addMarketVisible}\r\n        onClose={() => setAddMarketVisible(false)}\r\n        onAddCustomMarket={onAddCustomMarket}\r\n      />\r\n      <Wrapper>\r\n        <Row\r\n          align=\"middle\"\r\n          style={{ paddingLeft: 5, paddingRight: 5, height: 64 }}\r\n          gutter={16}\r\n        >\r\n          <Col>\r\n            <MarketSelector\r\n              markets={newMarKets}\r\n              setHandleDeprecated={setHandleDeprecated}\r\n              placeholder={'Select market'}\r\n              customMarkets={customMarkets}\r\n              onDeleteCustomMarket={onDeleteCustomMarket}\r\n            />\r\n          </Col>\r\n          {market ? (\r\n            <Col>\r\n              <Popover\r\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\r\n                placement=\"bottomRight\"\r\n                title=\"Market address\"\r\n                trigger=\"click\"\r\n              >\r\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n              </Popover>\r\n            </Col>\r\n          ) : null}\r\n          <Col>\r\n            <PlusCircleOutlined\r\n              style={{ color: '#2abdd2' }}\r\n              onClick={() => setAddMarketVisible(true)}\r\n            />\r\n          </Col>\r\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\r\n            <React.Fragment>\r\n              <Col>\r\n                <Typography>\r\n                  You have unsettled funds on old markets! Please go through\r\n                  them to claim your funds.\r\n                </Typography>\r\n              </Col>\r\n              <Col>\r\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\r\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\r\n                </Button>\r\n              </Col>\r\n            </React.Fragment>\r\n          )}\r\n        </Row>\r\n        {component}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MarketSelector({\r\n                          markets,\r\n                          placeholder,\r\n                          setHandleDeprecated,\r\n                          customMarkets,\r\n                          onDeleteCustomMarket,\r\n                        }) {\r\n  const { market, setMarketAddress } = useMarket();\r\n\r\n  const onSetMarketAddress = (marketAddress) => {\r\n    setHandleDeprecated(false);\r\n    setMarketAddress(marketAddress);\r\n  };\r\n\r\n  const extractBase = (a) => a.split('/')[0];\r\n  const extractQuote = (a) => a.split('/')[1];\r\n\r\n  const selectedMarket = getMarketInfos(customMarkets)\r\n    .find(\r\n      (proposedMarket) =>\r\n        market?.address && proposedMarket.address.equals(market.address),\r\n    )\r\n    ?.address?.toBase58();\r\n\r\n  const uniqueArray = (arr) => {\r\n    let addList: string[] = [];\r\n    let reList: MarketInfo[] = [];\r\n    for (let index = 0; index < arr.length; index += 1) {\r\n      if (addList.indexOf(arr[index].address.toBase58()) === -1) {\r\n        reList.push(arr[index]);\r\n        addList.push(arr[index].address.toBase58());\r\n      }\r\n    }\r\n    return reList\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      showSearch\r\n      size={'large'}\r\n      bordered={false}\r\n      style={{ width: 360, border: 1 }}\r\n      placeholder={placeholder || 'Select a market'}\r\n      optionFilterProp=\"name\"\r\n      onSelect={onSetMarketAddress}\r\n      listHeight={400}\r\n      value={selectedMarket}\r\n      filterOption={(input, option) =>\r\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {customMarkets && customMarkets.length > 0 && (\r\n        <OptGroup label=\"Custom\">\r\n          {customMarkets.map(({ address, name }, i) => (\r\n            <Option\r\n              value={address}\r\n              key={address}\r\n              name={name}\r\n              style={{\r\n                padding: '10px',\r\n                // @ts-ignore\r\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col flex=\"auto\">{name}</Col>\r\n                {selectedMarket !== address && (\r\n                  <Col>\r\n                    <DeleteOutlined\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.nativeEvent.stopImmediatePropagation();\r\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Option>\r\n          ))}\r\n        </OptGroup>\r\n      )}\r\n      <OptGroup label=\"Markets\">\r\n        {uniqueArray(markets)\r\n          // .sort((a, b) =>\r\n          //   extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\r\n          //     ? -1\r\n          //     : extractQuote(a.name) !== 'USDT' &&\r\n          //     extractQuote(b.name) === 'USDT'\r\n          //     ? 1\r\n          //     : 0,\r\n          // )\r\n          // .sort((a, b) =>\r\n          //   extractBase(a.name) < extractBase(b.name)\r\n          //     ? -1\r\n          //     : extractBase(a.name) > extractBase(b.name)\r\n          //     ? 1\r\n          //     : 0,\r\n          // )\r\n          .map(({ address, name, deprecated }, i) => (\r\n            <Option\r\n              value={address.toBase58()}\r\n              key={address.toBase58()}\r\n              name={name}\r\n              style={{\r\n                padding: '10px',\r\n                // @ts-ignore\r\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\r\n              }}\r\n            >\r\n              {name} {deprecated ? ' (Deprecated)' : null}\r\n            </Option>\r\n          ))}\r\n      </OptGroup>\r\n    </Select>\r\n  );\r\n}\r\n\r\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <DeprecatedMarketsInstructions\r\n            switchToLiveMarkets={switchToLiveMarkets}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <Row\r\n      style={{\r\n        minHeight: '900px',\r\n        flexWrap: 'nowrap',\r\n      }}\r\n    >\r\n      <Col\r\n        flex=\"360px\"\r\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n      >\r\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\r\n        <StandaloneBalancesDisplay />\r\n      </Col>\r\n\r\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n        <TVChartContainer />\r\n        <UserInfoTable />\r\n      </Col>\r\n\r\n      <Col flex={'360px'} style={{ height: '100%' }}>\r\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\r\n        <TradesTable smallScreen={false} />\r\n      </Col>\r\n\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          // height: '900px',\r\n        }}\r\n      >\r\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\r\n          <Orderbook\r\n            smallScreen={true}\r\n            depth={13}\r\n            onPrice={onPrice}\r\n            onSize={onSize}\r\n          />\r\n        </Col>\r\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\r\n          <TradesTable smallScreen={true} />\r\n        </Col>\r\n        <Col\r\n          flex=\"360px\"\r\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n        >\r\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\r\n          <StandaloneBalancesDisplay />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <UserInfoTable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\r\n        </Col>\r\n        <Col xs={24} sm={12}>\r\n          <StandaloneBalancesDisplay />\r\n        </Col>\r\n      </Row>\r\n      <Row\r\n        style={{\r\n          height: '500px',\r\n        }}\r\n      >\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\r\n        </Col>\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <TradesTable smallScreen={true} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <UserInfoTable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Button, Popover } from 'antd';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useWallet } from '../utils/wallet';\r\nimport LinkAddress from './LinkAddress';\r\n\r\nexport default function WalletConnect() {\r\n  const { connected, wallet, select, connect, disconnect } = useWallet();\r\n  const publicKey = (connected && wallet?.publicKey?.toBase58()) || '';\r\n\r\n  const menu = (\r\n    <Menu>\r\n      {connected && <LinkAddress shorten={true} address={publicKey} />}\r\n      <Menu.Item key=\"3\" onClick={select}>\r\n        Change Wallet\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown.Button onClick={connected ? disconnect : connect} overlay={menu}>\r\n      {connected ? 'Disconnect' : 'Connect'}\r\n    </Dropdown.Button>\r\n  // const { connected, wallet } = useWallet();\r\n  // const publicKey = wallet?.publicKey?.toBase58();\r\n\r\n  // return (\r\n  //   <React.Fragment>\r\n  //     <Button\r\n  //       type=\"text\"\r\n  //       size=\"large\"\r\n  //       onClick={connected ? wallet.disconnect : wallet.connect}\r\n  //       style={{ color: '#FFF', width: 160, background: 'RGB(26,43,67)', height: 50, borderRadius: 4 }}\r\n  //     >\r\n  //       {/*<UserOutlined />*/}\r\n  //       {!connected ? 'CONNECT WALLET' : 'Disconnect'}\r\n  //     </Button>\r\n  //     {connected && (\r\n  //       <Popover\r\n  //         content={<LinkAddress address={publicKey} />}\r\n  //         placement=\"bottomRight\"\r\n  //         title=\"Wallet public key\"\r\n  //         trigger=\"click\"\r\n  //       >\r\n  //         <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n  //       </Popover>\r\n  //     )}\r\n  //   </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport {\r\n  useAllMarkets,\r\n  useAllOpenOrders,\r\n  useMarketInfos,\r\n} from '../utils/markets';\r\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\r\nimport { Button, Row } from 'antd';\r\nimport { OrderWithMarketAndMarketName } from '../utils/types';\r\nimport { useWallet } from '../utils/wallet';\r\nimport WalletConnect from '../components/WalletConnect';\r\n\r\nexport default function OpenOrdersPage() {\r\n  const { connected } = useWallet();\r\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\r\n  let marketInfos = useMarketInfos();\r\n  let marketAddressesToNames = Object.fromEntries(\r\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\r\n  );\r\n  let [allMarkets] = useAllMarkets();\r\n  const marketsByAddress = Object.fromEntries(\r\n    (allMarkets || []).map((marketInfo) => [\r\n      marketInfo.market.address.toBase58(),\r\n      marketInfo.market,\r\n    ]),\r\n  );\r\n\r\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\r\n    .map((orderInfos) =>\r\n      orderInfos.orders.map((order) => {\r\n        return {\r\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\r\n          market: marketsByAddress[orderInfos.marketAddress],\r\n          ...order,\r\n        };\r\n      }),\r\n    )\r\n    .flat();\r\n\r\n  if (!connected) {\r\n    return (\r\n      <Row\r\n        justify=\"center\"\r\n        style={{\r\n          marginTop: '10%',\r\n        }}\r\n      >\r\n        <WalletConnect />\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\r\n        Refresh\r\n      </Button>\r\n      <OpenOrderTable\r\n        openOrders={dataSource}\r\n        pageSize={25}\r\n        loading={!loaded}\r\n        onCancelSuccess={refreshOpenOrders}\r\n        marketFilter\r\n      />\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport DataTable from '../layout/DataTable';\r\nimport { Button, Row } from 'antd';\r\nimport { settleAllFunds } from '../../utils/send';\r\nimport { notify } from '../../utils/notifications';\r\nimport { useConnection } from '../../utils/connection';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport {\r\n  useAllMarkets,\r\n  useSelectedTokenAccounts,\r\n  useTokenAccounts,\r\n} from '../../utils/markets';\r\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\r\nimport { abbreviateAddress } from '../../utils/utils';\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nexport default function WalletBalancesTable({\r\n  walletBalances,\r\n}: {\r\n  walletBalances: {\r\n    coin: string;\r\n    mint: string;\r\n    walletBalance: number;\r\n    openOrdersFree: number;\r\n    openOrdersTotal: number;\r\n  }[];\r\n}) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\r\n  const [allMarkets, allMarketsConnected] = useAllMarkets();\r\n  const [settlingFunds, setSettlingFunds] = useState(false);\r\n\r\n  async function onSettleFunds() {\r\n    setSettlingFunds(true);\r\n    try {\r\n      if (!wallet) {\r\n        notify({\r\n          message: 'Wallet not connected',\r\n          description: 'Wallet not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      \r\n      if (!tokenAccounts || !tokenAccountsConnected) {\r\n        notify({\r\n          message: 'Error settling funds',\r\n          description: 'TokenAccounts not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      if (!allMarkets || !allMarketsConnected) {\r\n        notify({\r\n          message: 'Error settling funds',\r\n          description: 'Markets not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      await settleAllFunds({\r\n        connection,\r\n        tokenAccounts,\r\n        selectedTokenAccounts,\r\n        wallet,\r\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSettlingFunds(false);\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Coin',\r\n      key: 'coin',\r\n      width: '20%',\r\n      render: (walletBalance) => (\r\n        <Row align=\"middle\">\r\n          <a\r\n            href={`https://explorer.solana.com/address/${walletBalance.mint}`}\r\n            target={'_blank'}\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {walletBalance.coin ||\r\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\r\n          </a>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Wallet Balance',\r\n      dataIndex: 'walletBalance',\r\n      key: 'walletBalance',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Open orders total balances',\r\n      dataIndex: 'openOrdersTotal',\r\n      key: 'openOrdersTotal',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Unsettled balances',\r\n      dataIndex: 'openOrdersFree',\r\n      key: 'openOrdersFree',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Selected token account',\r\n      key: 'selectTokenAccount',\r\n      width: '20%',\r\n      render: (walletBalance) => (\r\n        <Row align=\"middle\" style={{ width: '430px' }}>\r\n          <StandaloneTokenAccountsSelect\r\n            accounts={tokenAccounts?.filter(\r\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\r\n            )}\r\n            mint={walletBalance.mint}\r\n          />\r\n        </Row>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <React.Fragment>\r\n      <DataTable\r\n        emptyLabel=\"No balances\"\r\n        dataSource={walletBalances}\r\n        columns={columns}\r\n        pagination={false}\r\n      />\r\n      {connected && (\r\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\r\n          Settle all funds\r\n        </Button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport {\r\n  useAllOpenOrdersBalances,\r\n  useWalletBalancesForAllMarkets,\r\n} from '../utils/markets';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\r\nimport { useMintToTickers } from '../utils/tokens';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function BalancesPage() {\r\n  const walletBalances = useWalletBalancesForAllMarkets();\r\n  const mintToTickers = useMintToTickers();\r\n  const openOrdersBalances = useAllOpenOrdersBalances();\r\n\r\n  const data = (walletBalances || []).map((balance) => {\r\n    const balances = {\r\n      coin: mintToTickers[balance.mint],\r\n      mint: balance.mint,\r\n      walletBalance: balance.balance,\r\n      openOrdersFree: 0,\r\n      openOrdersTotal: 0,\r\n    };\r\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\r\n      balances['openOrdersFree'] += openOrdersAccount.free;\r\n      balances['openOrdersTotal'] += openOrdersAccount.total;\r\n    }\r\n    return balances;\r\n  });\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <Tabs defaultActiveKey=\"walletBalances\">\r\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\r\n          <WalletBalancesTable walletBalances={data} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { Orderbook } from '@project-serum/serum';\r\nimport {\r\n  getExpectedFillPrice,\r\n  getMarketDetails,\r\n  getMarketInfos,\r\n  getMarketOrderPrice,\r\n  getSelectedTokenAccountForMint,\r\n  MarketProvider,\r\n  useBalances,\r\n  useCustomMarkets, useLocallyStoredFeeDiscountKey,\r\n  useMarket,\r\n  useTokenAccounts,\r\n} from '../utils/markets';\r\nimport { notify } from '../utils/notifications';\r\nimport { useWallet } from '../utils/wallet';\r\nimport { useConnection, useSendConnection } from '../utils/connection';\r\nimport { placeOrder } from '../utils/send';\r\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport WalletConnect from './WalletConnect';\r\nimport { SwapOutlined } from '@ant-design/icons';\r\nimport { CustomMarketInfo } from '../utils/types';\r\n// import Wallet from '@project-serum/sol-wallet-adapter';\r\nimport { WalletAdapter } from '../wallet-adapters';\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\n\r\nconst ActionButton = styled(Button)`\r\n  color: #2abdd2;\r\n  background-color: #212734;\r\n  border-width: 0px;\r\n`;\r\n\r\nconst ConvertButton = styled(Button)`\r\n  background: #02bf76;\r\n  border-color: #02bf76;\r\n`;\r\n\r\nexport default function ConvertForm() {\r\n  const { connected, wallet } = useWallet(); \r\n  const { customMarkets } = useCustomMarkets();\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const [marketAddress, setMarketAddress] = useState<string | null>(null);\r\n\r\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\r\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\r\n  const [size, setSize] = useState<number | undefined>(undefined);\r\n\r\n  const marketInfosbyName = Object.fromEntries(\r\n    marketInfos.map((market) => [market.name, market]),\r\n  );\r\n\r\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\r\n  Object.keys(marketInfosbyName).forEach((market) => {\r\n    let [base, quote] = market.split('/');\r\n    !tokenConvertMap.has(base)\r\n      ? tokenConvertMap.set(base, new Set([quote]))\r\n      : tokenConvertMap.set(\r\n          base,\r\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\r\n        );\r\n    !tokenConvertMap.has(quote)\r\n      ? tokenConvertMap.set(quote, new Set([base]))\r\n      : tokenConvertMap.set(\r\n          quote,\r\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\r\n        );\r\n  });\r\n\r\n  const setMarket = (toToken) => {\r\n    const marketInfo = marketInfos\r\n      .filter((marketInfo) => !marketInfo.deprecated)\r\n      .find(\r\n        (marketInfo) =>\r\n          marketInfo.name === `${fromToken}/${toToken}` ||\r\n          marketInfo.name === `${toToken}/${fromToken}`,\r\n      );\r\n    if (!marketInfo) {\r\n      console.warn(\r\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\r\n      );\r\n      notify({\r\n        message: 'Invalid market',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    setMarketAddress(marketInfo.address.toBase58());\r\n    setToToken(toToken);\r\n  };\r\n\r\n  return (\r\n    <FloatingElement style={{ maxWidth: 500 }}>\r\n      <Title level={3}>Convert</Title>\r\n      {!connected && (\r\n        <Row justify=\"center\">\r\n          <Col>\r\n            <WalletConnect />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {tokenConvertMap && connected && (\r\n        <>\r\n          <Row style={{ marginBottom: 8 }}>\r\n            <Col>\r\n              <Select\r\n                style={{ minWidth: 300 }}\r\n                placeholder=\"Select a token\"\r\n                value={fromToken}\r\n                onChange={(token) => {\r\n                  setFromToken(token);\r\n                  setToToken(undefined);\r\n                }}\r\n              >\r\n                {Array.from(tokenConvertMap.keys()).map((token) => (\r\n                  <Option value={token} key={token}>\r\n                    {token}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          {fromToken && (\r\n            <Row style={{ marginBottom: 8 }}>\r\n              <Col>\r\n                <Select\r\n                  style={{ minWidth: 300 }}\r\n                  value={toToken}\r\n                  onChange={setMarket}\r\n                >\r\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\r\n                    <Option value={token} key={token}>\r\n                      {token}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          {fromToken && toToken && (\r\n            <MarketProvider\r\n              marketAddress={marketAddress}\r\n              setMarketAddress={setMarketAddress}\r\n            >\r\n              <ConvertFormSubmit\r\n                size={size}\r\n                setSize={setSize}\r\n                fromToken={fromToken}\r\n                toToken={toToken}\r\n                wallet={wallet}\r\n                customMarkets={customMarkets}\r\n              />\r\n            </MarketProvider>\r\n          )}\r\n        </>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nfunction ConvertFormSubmit({\r\n  size,\r\n  setSize,\r\n  fromToken,\r\n  toToken,\r\n  wallet,\r\n  customMarkets,\r\n}: {\r\n  size: number | null | undefined;\r\n  setSize: (newSize: number | undefined) => void;\r\n  fromToken: string;\r\n  toToken: string;\r\n  wallet?: WalletAdapter;\r\n  customMarkets: CustomMarketInfo[];\r\n}) {\r\n  const { market } = useMarket();\r\n  const [accounts] = useTokenAccounts();\r\n  const balances = useBalances();\r\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\r\n  const [toAmount, setToAmount] = useState<number | undefined>();\r\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\r\n\r\n  const connection = useConnection();\r\n  const sendConnection = useSendConnection();\r\n\r\n  const [isConverting, setIsConverting] = useState(false);\r\n\r\n  const isFromTokenBaseOfMarket = (market) => {\r\n    const { marketName } = getMarketDetails(market, customMarkets);\r\n    if (!marketName) {\r\n      throw Error(\r\n        'Cannot determine if coin is quote or base because marketName is missing',\r\n      );\r\n    }\r\n    const [base] = marketName.split('/');\r\n    return fromToken === base;\r\n  };\r\n\r\n  const onConvert = async () => {\r\n    if (!market) {\r\n      console.warn('Market is null when attempting convert.');\r\n      notify({\r\n        message: 'Invalid market',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    // get accounts\r\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\r\n      accounts,\r\n      market?.baseMintAddress,\r\n    );\r\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\r\n      accounts,\r\n      market?.quoteMintAddress,\r\n    );\r\n\r\n    // get approximate price\r\n    let side;\r\n    try {\r\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const sidedOrderbookAccount =\r\n      // @ts-ignore\r\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\r\n    const orderbookData = await connection.getAccountInfo(\r\n      sidedOrderbookAccount,\r\n    );\r\n    if (!orderbookData?.data) {\r\n      notify({ message: 'Invalid orderbook data', type: 'error' });\r\n      return;\r\n    }\r\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\r\n    const [bbo] =\r\n      decodedOrderbookData &&\r\n      decodedOrderbookData.getL2(1).map(([price]) => price);\r\n    if (!bbo) {\r\n      notify({ message: 'No best price found', type: 'error' });\r\n      return;\r\n    }\r\n    if (!size) {\r\n      notify({ message: 'Size not specified', type: 'error' });\r\n      return;\r\n    }\r\n\r\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\r\n    const parsedPrice = getMarketOrderPrice(\r\n      decodedOrderbookData,\r\n      size,\r\n      tickSizeDecimals,\r\n    );\r\n\r\n    // round size\r\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\r\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\r\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\r\n\r\n    setIsConverting(true);\r\n    try {\r\n      if (!wallet) {\r\n        return null;\r\n      }\r\n\r\n      await placeOrder({\r\n        side,\r\n        price: parsedPrice,\r\n        size: parsedSize,\r\n        orderType: 'ioc',\r\n        market,\r\n        connection: sendConnection,\r\n        wallet,\r\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\r\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\r\n        feeDiscountPubkey: feeDiscountKey,\r\n      });\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setIsConverting(false);\r\n    }\r\n  };\r\n\r\n  const getPrice = async () => {\r\n    try {\r\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\r\n      const sidedOrderbookAccount =\r\n        // @ts-ignore\r\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\r\n      const orderbookData = await connection.getAccountInfo(\r\n        sidedOrderbookAccount,\r\n      );\r\n      if (!orderbookData?.data || !market) {\r\n        return [null, null];\r\n      }\r\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\r\n      const [bbo] =\r\n        decodedOrderbookData &&\r\n        decodedOrderbookData.getL2(1).map(([price]) => price);\r\n      if (!bbo || !size) {\r\n        return [null, null];\r\n      }\r\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\r\n      const expectedPrice = getExpectedFillPrice(\r\n        decodedOrderbookData,\r\n        size,\r\n        tickSizeDecimals,\r\n      );\r\n      if (side === 'buy') {\r\n        return [expectedPrice.toFixed(6), 1];\r\n      } else {\r\n        return [1, expectedPrice.toFixed(6)];\r\n      }\r\n    } catch (e) {\r\n      console.log(`Got error ${e}`);\r\n      return [null, null];\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      getPrice().then(([fromAmount, toAmount]) => {\r\n        setFromAmount(fromAmount || undefined);\r\n        setToAmount(toAmount || undefined);\r\n      });\r\n    },\r\n    // eslint-disable-next-line\r\n    [market?.address.toBase58(), size],\r\n  );\r\n\r\n  const canConvert = market && size && size > 0;\r\n  const balance = balances.find(\r\n    (coinBalance) => coinBalance.coin === fromToken,\r\n  );\r\n  const availableBalance =\r\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col>\r\n          <Input\r\n            style={{ minWidth: 300 }}\r\n            addonBefore={`Size (${fromToken})`}\r\n            placeholder=\"Size\"\r\n            value={size === null ? undefined : size}\r\n            type=\"number\"\r\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={12} style={{ marginBottom: 8 }}>\r\n        <Col span={12}>\r\n          <ActionButton\r\n            block\r\n            size=\"large\"\r\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\r\n          >\r\n            Max: {availableBalance.toFixed(4)}\r\n          </ActionButton>\r\n        </Col>\r\n        <Col span={12}>\r\n          <ConvertButton\r\n            block\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            loading={isConverting}\r\n            onClick={onConvert}\r\n            disabled={!canConvert}\r\n          >\r\n            Convert\r\n          </ConvertButton>\r\n        </Col>\r\n      </Row>\r\n      {canConvert && (\r\n        <Row align=\"middle\" justify=\"center\">\r\n          <Col>\r\n            {fromAmount} {fromToken}\r\n          </Col>\r\n          <Col offset={1}>\r\n            <SwapOutlined />\r\n          </Col>\r\n          <Col offset={1}>\r\n            {toAmount} {toToken}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ConvertForm from '../components/ConvertForm';\r\nimport { Row, Col } from 'antd';\r\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\r\nimport { useLocalStorageState } from '../utils/utils';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px 16px;\r\n  .borderNone .ant-select-selector {\r\n    border: none !important;\r\n  }\r\n`;\r\n\r\nexport default function ConvertPage() {\r\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\r\n    'marketAddress',\r\n    DEFAULT_MARKET?.address.toBase58(),\r\n  );\r\n  return (\r\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <MarketProvider\r\n            marketAddress={marketAddress}\r\n            setMarketAddress={setMarketAddress}\r\n          >\r\n            <ConvertForm />\r\n          </MarketProvider>\r\n        </Col>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Col, Input, Modal, Row } from 'antd';\r\nimport { EndpointInfo } from '../utils/types';\r\n\r\nexport default function CustomClusterEndpointDialog({\r\n  visible,\r\n  testingConnection,\r\n  onAddCustomEndpoint,\r\n  onClose,\r\n}: {\r\n  visible: boolean;\r\n  testingConnection: boolean;\r\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\r\n  onClose?: () => void;\r\n}) {\r\n  const [customEndpoint, setCustomEndpoint] = useState('');\r\n  const [customEndpointName, setCustomEndpointName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    const fullEndpoint = 'https://' + customEndpoint;\r\n    const params = {\r\n      name: customEndpointName,\r\n      endpoint: fullEndpoint,\r\n      custom: true,\r\n    };\r\n    onAddCustomEndpoint(params);\r\n    onDoClose();\r\n  };\r\n  const onDoClose = () => {\r\n    setCustomEndpoint('');\r\n    setCustomEndpointName('');\r\n    onClose && onClose();\r\n  };\r\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\r\n\r\n  return (\r\n    <Modal\r\n      title={'Add custom endpoint'}\r\n      visible={visible}\r\n      onOk={onSubmit}\r\n      okText={'Add'}\r\n      onCancel={onDoClose}\r\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\r\n    >\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Cluster Name\"\r\n            value={customEndpointName}\r\n            onChange={(e) => setCustomEndpointName(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Cluster Endpoint\"\r\n            value={customEndpoint}\r\n            addonBefore={'https://'}\r\n            onChange={(e) => setCustomEndpoint(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  InfoCircleOutlined,\r\n  PlusCircleOutlined,\r\n  SettingOutlined,\r\n} from '@ant-design/icons';\r\nimport { Button, Col, Menu, Popover, Row, Select, Dropdown } from 'antd';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport logo from '../assets/logo.svg';\r\nimport styled from 'styled-components';\r\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\r\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\r\nimport Settings from './Settings';\r\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\r\nimport { EndpointInfo } from '../utils/types';\r\nimport { notify } from '../utils/notifications';\r\nimport { Connection } from '@solana/web3.js';\r\nimport WalletConnect from './WalletConnect';\r\nimport AppSearch from './AppSearch';\r\nimport { getTradePageUrl } from '../utils/markets';\r\n\r\nconst Wrapper = styled.div`\r\n  // flex-direction: row;\r\n  // justify-content: flex-end;\r\n  // flex-wrap: wrap;\r\n`;\r\nconst LogoWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: #2abdd2;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  img {\r\n    height: 30px;\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst EXTERNAL_LINKS = {\r\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\r\n  '/add-market': 'https://serum-academy.com/en/add-market/',\r\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\r\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\r\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\r\n  '/explorer': 'https://explorer.solana.com',\r\n  '/srm-faq': 'https://projectserum.com/srm-faq',\r\n  '/swap': 'https://raydium.io/swap',\r\n  '/liquidity': 'https://raydium.io/liquidity',\r\n  '/farms': 'https://raydium.io/farms',\r\n  '/staking': 'https://raydium.io/staking',\r\n  '/migrate': 'https://raydium.io/migrate',\r\n  '/info': 'https://raydium.io/info',\r\n  '/fusion': 'https://raydium.io/fusion/',\r\n  '/acceleRaytor': 'https://raydium.io/acceleraytor/',\r\n  '/pools': 'https://raydium.io/pools/',\r\n};\r\n\r\nexport default function TopBar() {\r\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\r\n  const {\r\n    endpoint,\r\n    endpointInfo,\r\n    setEndpoint,\r\n    availableEndpoints,\r\n    setCustomEndpoints,\r\n  } = useConnectionConfig();\r\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\r\n  const [testingConnection, setTestingConnection] = useState(false);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [searchFocussed, setSearchFocussed] = useState(false);\r\n\r\n  const handleClick = useCallback(\r\n    (e) => {\r\n      if (!(e.key in EXTERNAL_LINKS)) {\r\n        history.push(e.key);\r\n      }\r\n    },\r\n    [history],\r\n  );\r\n\r\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\r\n    const existingEndpoint = availableEndpoints.some(\r\n      (e) => e.endpoint === info.endpoint,\r\n    );\r\n    if (existingEndpoint) {\r\n      notify({\r\n        message: `An endpoint with the given url already exists`,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const handleError = (e) => {\r\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\r\n      notify({\r\n        message: `Failed to connect to ${info.endpoint}`,\r\n        type: 'error',\r\n      });\r\n    };\r\n\r\n    try {\r\n      const connection = new Connection(info.endpoint, 'recent');\r\n      connection\r\n        .getEpochInfo()\r\n        .then((result) => {\r\n          setTestingConnection(true);\r\n          console.log(`testing connection to ${info.endpoint}`);\r\n          const newCustomEndpoints = [\r\n            ...availableEndpoints.filter((e) => e.custom),\r\n            info,\r\n          ];\r\n          setEndpoint(info.endpoint);\r\n          setCustomEndpoints(newCustomEndpoints);\r\n        })\r\n        .catch(handleError);\r\n    } catch (e) {\r\n      handleError(e);\r\n    } finally {\r\n      setTestingConnection(false);\r\n    }\r\n  };\r\n\r\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\r\n  useEffect(() => {\r\n    const handler = () => {\r\n      if (endpointInfoCustom) {\r\n        setEndpoint(ENDPOINTS[0].endpoint);\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handler);\r\n    return () => window.removeEventListener('beforeunload', handler);\r\n  }, [endpointInfoCustom, setEndpoint]);\r\n\r\n  const tradePageUrl = location.pathname.startsWith('/market/')\r\n    ? location.pathname\r\n    : getTradePageUrl();\r\n\r\n  return (\r\n    <>\r\n      <CustomClusterEndpointDialog\r\n        visible={addEndpointVisible}\r\n        testingConnection={testingConnection}\r\n        onAddCustomEndpoint={onAddCustomEndpoint}\r\n        onClose={() => setAddEndpointVisible(false)}\r\n      />\r\n      <Wrapper style={{ background: '#0F1429'}}>\r\n        <Row wrap={false} style={{ paddingTop: 25, height: 70 }}>\r\n          <Col flex=\"none\">\r\n            <LogoWrapper onClick={() => history.push(tradePageUrl)} style={{ paddingLeft: 40}}>\r\n              <img src={logo} alt=\"\" style={{ width: 145, height: 40 }} />\r\n            </LogoWrapper>\r\n          </Col>\r\n          <Col flex=\"auto\" style={{ textAlign: 'center'}}>\r\n              <div\r\n                style={{\r\n                  height: 50,\r\n                  width: 100,\r\n                  textAlign: 'center',\r\n                  border: 'transparent',\r\n                  borderBottom: '1px solid RGB(194,0,251)',\r\n                  background: 'transparent',\r\n                  fontSize: 14,\r\n                  fontStyle: 'normal',\r\n                  fontWeight: 600,\r\n                  color: 'rgb(173,175,184)',\r\n                  display: 'inline-block',\r\n                }}\r\n              >\r\n                TRADING\r\n              </div>\r\n              <div\r\n                style={{\r\n                  height: 50,\r\n                  width: 100,\r\n                  textAlign: 'center',\r\n                  border: 'transparent',\r\n                  background: 'transparent',\r\n                  fontSize: 14,\r\n                  fontStyle: 'normal',\r\n                  fontWeight: 600,\r\n                  color: 'rgb(173,175,184)',\r\n                  display: 'inline-block',\r\n                }}\r\n              >\r\n                <a\r\n                  href={EXTERNAL_LINKS['/swap']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  style={{ color : 'rgb(173,175,184)',}}\r\n                >\r\n                  Swap\r\n                </a>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  height: 50,\r\n                  width: 100,\r\n                  textAlign: 'center',\r\n                  border: 'transparent',\r\n                  background: 'transparent',\r\n                  fontSize: 14,\r\n                  fontStyle: 'normal',\r\n                  fontWeight: 600,\r\n                  color: 'rgb(173,175,184)',\r\n                  display: 'inline-block',\r\n                }}\r\n              >\r\n                <a\r\n                  href={EXTERNAL_LINKS['/liquidity']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  style={{ color : 'rgb(173,175,184)',}}\r\n                >\r\n                  Liquidity\r\n                </a>\r\n              </div>\r\n            <div\r\n              style={{\r\n                height: 50,\r\n                width: 100,\r\n                textAlign: 'center',\r\n                border: 'transparent',\r\n                background: 'transparent',\r\n                fontSize: 14,\r\n                fontStyle: 'normal',\r\n                fontWeight: 600,\r\n                color: 'rgb(173,175,184)',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <a\r\n                href={EXTERNAL_LINKS['/pools']}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ color : 'rgb(173,175,184)',}}\r\n              >\r\n                Pools\r\n              </a>\r\n            </div>\r\n              <div\r\n                style={{\r\n                  height: 50,\r\n                  width: 100,\r\n                  textAlign: 'center',\r\n                  border: 'transparent',\r\n                  background: 'transparent',\r\n                  fontSize: 14,\r\n                  fontStyle: 'normal',\r\n                  fontWeight: 600,\r\n                  color: 'rgb(173,175,184)',\r\n                  display: 'inline-block',\r\n                }}\r\n              >\r\n                <a\r\n                  href={EXTERNAL_LINKS['/farms']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  style={{ color : 'rgb(173,175,184)',}}\r\n                >\r\n                  Farms\r\n                </a>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  height: 50,\r\n                  width: 100,\r\n                  textAlign: 'center',\r\n                  border: 'transparent',\r\n                  background: 'transparent',\r\n                  fontSize: 14,\r\n                  fontStyle: 'normal',\r\n                  fontWeight: 600,\r\n                  color: 'rgb(173,175,184)',\r\n                  display: 'inline-block',\r\n                }}\r\n              >\r\n                <a\r\n                  href={EXTERNAL_LINKS['/fusion']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  style={{ color : 'rgb(173,175,184)',}}\r\n                >\r\n                  Fusion\r\n                </a>\r\n              </div>\r\n            <div\r\n              style={{\r\n                height: 50,\r\n                width: 100,\r\n                textAlign: 'center',\r\n                border: 'transparent',\r\n                background: 'transparent',\r\n                fontSize: 14,\r\n                fontStyle: 'normal',\r\n                fontWeight: 600,\r\n                color: 'rgb(173,175,184)',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <a\r\n                href={EXTERNAL_LINKS['/staking']}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ color : 'rgb(173,175,184)',}}\r\n              >\r\n                Staking\r\n              </a>\r\n            </div>\r\n            <div\r\n              style={{\r\n                height: 50,\r\n                width: 100,\r\n                textAlign: 'center',\r\n                border: 'transparent',\r\n                background: 'transparent',\r\n                fontSize: 14,\r\n                fontStyle: 'normal',\r\n                fontWeight: 600,\r\n                color: 'rgb(173,175,184)',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <a\r\n                href={EXTERNAL_LINKS['/acceleRaytor']}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ color : 'rgb(173,175,184)',}}\r\n              >\r\n                AcceleRaytor\r\n              </a>\r\n            </div>\r\n            <div\r\n              style={{\r\n                height: 50,\r\n                width: 100,\r\n                textAlign: 'center',\r\n                border: 'transparent',\r\n                background: 'transparent',\r\n                fontSize: 14,\r\n                fontStyle: 'normal',\r\n                fontWeight: 600,\r\n                color: 'rgb(173,175,184)',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <a\r\n                href={EXTERNAL_LINKS['/migrate']}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ color : 'rgb(173,175,184)',}}\r\n              >\r\n                Migrate\r\n              </a>\r\n            </div>\r\n            <div\r\n              style={{\r\n                height: 50,\r\n                width: 100,\r\n                textAlign: 'center',\r\n                border: 'transparent',\r\n                background: 'transparent',\r\n                fontSize: 14,\r\n                fontStyle: 'normal',\r\n                fontWeight: 600,\r\n                color: 'rgb(173,175,184)',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <a\r\n                href={EXTERNAL_LINKS['/info']}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ color : 'rgb(173,175,184)',}}\r\n              >\r\n                Info\r\n              </a>\r\n            </div>\r\n          </Col>\r\n          <Col flex=\"none\" style={{ paddingRight: 20}}>\r\n            <WalletConnect />\r\n          </Col>\r\n        </Row>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n","export const helpUrls = {\r\n  customerSupport: 'https://t.me/ProjectSerum',\r\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\r\n  contactEmail: 'mailto:contact@projectserum.com',\r\n  discord: 'https://discord.gg/EDvudv6',\r\n  telegram: 'https://t.me/ProjectSerum',\r\n  github: 'https://github.com/project-serum',\r\n  projectSerum: 'https://projectserum.com/',\r\n  developerResources: 'https://projectserum.com/developer-resources',\r\n  solanaBeach: 'https://solanabeach.io',\r\n};\r\n","import React from 'react';\r\nimport { Layout, Row, Col, Grid } from 'antd';\r\nimport Link from './Link';\r\nimport { helpUrls } from './HelpUrls';\r\nconst { Footer } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst footerElements = [\r\n  {\r\n    description: 'Serum Developer Resources',\r\n    link: helpUrls.developerResources,\r\n  },\r\n  { description: 'Discord', link: helpUrls.discord },\r\n  { description: 'Telegram', link: helpUrls.telegram },\r\n  { description: 'GitHub', link: helpUrls.github },\r\n  { description: 'Project Serum', link: helpUrls.projectSerum },\r\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\r\n];\r\n\r\nexport const CustomFooter = () => {\r\n  const smallScreen = !useBreakpoint().lg;\r\n\r\n  return (\r\n    <Footer\r\n      style={{\r\n        height: '45px',\r\n        paddingBottom: 10,\r\n        paddingTop: 10,\r\n      }}\r\n    >\r\n      <Row align=\"middle\" gutter={[16, 4]}>\r\n        {!smallScreen && (\r\n          <>\r\n            <Col flex=\"auto\" />\r\n            {footerElements.map((elem, index) => {\r\n              return (\r\n                <Col key={index + ''}>\r\n                  <Link external to={elem.link}>\r\n                    {elem.description}\r\n                  </Link>\r\n                </Col>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\r\n      </Row>\r\n    </Footer>\r\n  );\r\n};\r\n","import { Layout } from 'antd';\r\nimport React from 'react';\r\nimport TopBa1r from './TopBar';\r\nimport { CustomFooter as Footer } from './Footer';\r\nconst { Header, Content } = Layout;\r\n\r\nexport default function BasicLayout({ children }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Layout\r\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\r\n      >\r\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\r\n          <TopBa1r />\r\n        </Header>\r\n        <Content style={{ flex: 1 }}>{children}</Content>\r\n        <Footer />\r\n      </Layout>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { PublicKey } from '@solana/web3.js';\r\nimport React, { ReactElement, useMemo, useState } from 'react';\r\nimport { useAccountInfo } from '../utils/connection';\r\nimport { isValidPublicKey } from '../utils/utils';\r\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\r\nimport { TokenInstructions } from '@project-serum/serum';\r\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\r\nimport { AutoComplete, Form, Tooltip } from 'antd';\r\nimport Link from './Link';\r\n\r\nexport interface MintInfo {\r\n  address: PublicKey;\r\n  decimals: number;\r\n}\r\n\r\nexport function useMintInput(\r\n  name,\r\n  label: string | ReactElement,\r\n  tooltip?: string | ReactElement,\r\n): [ReactElement, MintInfo | null] {\r\n  const [address, setAddress] = useState('');\r\n  const [accountInfo, loaded] = useAccountInfo(\r\n    isValidPublicKey(address) ? new PublicKey(address) : null,\r\n  );\r\n\r\n  const mintToTickers = useMintToTickers();\r\n  const options = useMemo(() => {\r\n    return Object.entries(mintToTickers)\r\n      .filter(\r\n        ([mintAddress, ticker]) =>\r\n          mintAddress.includes(address) ||\r\n          ticker.toLowerCase().includes(address.toLowerCase()),\r\n      )\r\n      .map(([mintAddress, ticker]) => ({\r\n        value: mintAddress,\r\n        label: (\r\n          <>\r\n            {ticker} ({mintAddress})\r\n          </>\r\n        ),\r\n      }));\r\n  }, [mintToTickers, address]);\r\n\r\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\r\n    let validateStatus: ValidateStatus = '';\r\n    let hasFeedback = false;\r\n    let help: string | null = null;\r\n    let mintInfo: MintInfo | null = null;\r\n    if (address) {\r\n      hasFeedback = true;\r\n      if (accountInfo) {\r\n        if (\r\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\r\n          accountInfo.data.length === 82\r\n        ) {\r\n          let parsed = parseTokenMintData(accountInfo.data);\r\n          if (parsed.initialized) {\r\n            validateStatus = 'success';\r\n            mintInfo = {\r\n              address: new PublicKey(address),\r\n              decimals: parsed.decimals,\r\n            };\r\n          } else {\r\n            validateStatus = 'error';\r\n            help = 'Invalid SPL mint';\r\n          }\r\n        } else {\r\n          validateStatus = 'error';\r\n          help = 'Invalid SPL mint address';\r\n        }\r\n      } else if (isValidPublicKey(address) && !loaded) {\r\n        validateStatus = 'validating';\r\n      } else {\r\n        validateStatus = 'error';\r\n        help = 'Invalid Solana address';\r\n      }\r\n    }\r\n    return { validateStatus, hasFeedback, help, mintInfo };\r\n  }, [address, accountInfo, loaded]);\r\n\r\n  const input = (\r\n    <Form.Item\r\n      label={\r\n        <Tooltip\r\n          title={\r\n            <>\r\n              {tooltip} You can look up token mint addresses on{' '}\r\n              <Link external to=\"https://sollet.io\">\r\n                sollet.io\r\n              </Link>\r\n              .\r\n            </>\r\n          }\r\n        >\r\n          {label}\r\n        </Tooltip>\r\n      }\r\n      name={name}\r\n      validateStatus={validateStatus}\r\n      hasFeedback={hasFeedback}\r\n      help={help}\r\n    >\r\n      <AutoComplete\r\n        options={options}\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n      />\r\n    </Form.Item>\r\n  );\r\n\r\n  return [input, mintInfo];\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\r\nimport { notify } from '../utils/notifications';\r\nimport { MARKETS } from '@project-serum/serum';\r\nimport { useConnection } from '../utils/connection';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport { useWallet } from '../utils/wallet';\r\nimport { listMarket } from '../utils/send';\r\nimport { useMintInput } from '../components/useMintInput';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport default function ListNewMarketPage() {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [baseMintInput, baseMintInfo] = useMintInput(\r\n    'baseMint',\r\n    <Text>\r\n      Base Token Mint Address{' '}\r\n      <Text type=\"secondary\">\r\n        (e.g. BTC solana address:{' '}\r\n        {\r\n          <Text type=\"secondary\" code>\r\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\r\n          </Text>\r\n        }\r\n        )\r\n      </Text>\r\n    </Text>,\r\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\r\n  );\r\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\r\n    'quoteMint',\r\n    <Text>\r\n      Quote Token Mint Address{' '}\r\n      <Text type=\"secondary\">\r\n        (e.g. USDT solana address:{' '}\r\n        {\r\n          <Text type=\"secondary\" code>\r\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\r\n          </Text>\r\n        }\r\n        )\r\n      </Text>\r\n    </Text>,\r\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\r\n  );\r\n  const [lotSize, setLotSize] = useState('1');\r\n  const [tickSize, setTickSize] = useState('0.01');\r\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const [listedMarket, setListedMarket] = useState(null);\r\n\r\n  let baseLotSize;\r\n  let quoteLotSize;\r\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\r\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\r\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\r\n      quoteLotSize = Math.round(\r\n        parseFloat(lotSize) *\r\n          10 ** quoteMintInfo.decimals *\r\n          parseFloat(tickSize),\r\n      );\r\n    }\r\n  }\r\n\r\n  const canSubmit =\r\n    connected &&\r\n    !!baseMintInfo &&\r\n    !!quoteMintInfo &&\r\n    !!baseLotSize &&\r\n    !!quoteLotSize;\r\n\r\n  async function onSubmit() {\r\n    if (!canSubmit) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const marketAddress = await listMarket({\r\n        connection,\r\n        wallet,\r\n        baseMint: baseMintInfo.address,\r\n        quoteMint: quoteMintInfo.address,\r\n        baseLotSize,\r\n        quoteLotSize,\r\n        dexProgramId,\r\n      });\r\n      setListedMarket(marketAddress);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error listing new market',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={4}>List New Market</Title>\r\n        <Form\r\n          labelCol={{ span: 24 }}\r\n          wrapperCol={{ span: 24 }}\r\n          layout={'vertical'}\r\n          onFinish={onSubmit}\r\n        >\r\n          {baseMintInput}\r\n          {quoteMintInput}\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\r\n                Minimum Order Size{' '}\r\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"lotSize\"\r\n            initialValue=\"1\"\r\n            validateStatus={\r\n              baseMintInfo && quoteMintInfo\r\n                ? baseLotSize\r\n                  ? 'success'\r\n                  : 'error'\r\n                : null\r\n            }\r\n            hasFeedback={baseMintInfo && quoteMintInfo}\r\n          >\r\n            <Input\r\n              value={lotSize}\r\n              onChange={(e) => setLotSize(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\r\n                Tick Size{' '}\r\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"tickSize\"\r\n            initialValue=\"0.01\"\r\n            validateStatus={\r\n              baseMintInfo && quoteMintInfo\r\n                ? quoteLotSize\r\n                  ? 'success'\r\n                  : 'error'\r\n                : null\r\n            }\r\n            hasFeedback={baseMintInfo && quoteMintInfo}\r\n          >\r\n            <Input\r\n              value={tickSize}\r\n              onChange={(e) => setTickSize(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\" \" colon={false}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={!canSubmit}\r\n              loading={submitting}\r\n            >\r\n              {connected ? 'Submit' : 'Not connected to wallet'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </FloatingElement>\r\n      {listedMarket ? (\r\n        <FloatingElement>\r\n          <Text>New market address: {listedMarket.toBase58()}</Text>\r\n        </FloatingElement>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  AutoComplete,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Switch,\r\n  Tooltip,\r\n  Typography,\r\n} from 'antd';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useConnection } from '../../utils/connection';\r\nimport FloatingElement from '../../components/layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\r\nimport { useMintInput } from '../../components/useMintInput';\r\nimport { PoolTransactions } from '@project-serum/pool';\r\nimport { useTokenAccounts } from '../../utils/markets';\r\nimport BN from 'bn.js';\r\nimport { notify } from '../../utils/notifications';\r\nimport Link from '../../components/Link';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst AddRemoveTokenButtons = styled.div`\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\r\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\r\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\r\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\r\nconst PROGRAM_ID_OPTIONS = [\r\n  {\r\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\r\n    value: SIMPLE_POOL_PROGRAM_ID,\r\n  },\r\n  {\r\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\r\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\r\n  },\r\n];\r\n\r\nexport default function NewPoolPage() {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [poolName, setPoolName] = useState('');\r\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\r\n  const [initialSupply, setInitialSupply] = useState('1');\r\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\r\n    { valid: false },\r\n    { valid: false },\r\n  ]);\r\n  const [adminControlled, setAdminControlled] = useState(false);\r\n  const [adminAddress, setAdminAddress] = useState('');\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\r\n      setAdminControlled(false);\r\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\r\n      setAdminControlled(true);\r\n    }\r\n  }, [programId]);\r\n\r\n  useEffect(() => {\r\n    if (connected && wallet) {\r\n      setAdminAddress(wallet.publicKey.toBase58());\r\n    }\r\n  }, [wallet, connected]);\r\n\r\n  const canSubmit =\r\n    connected &&\r\n    poolName.trim() &&\r\n    programId &&\r\n    parseFloat(initialSupply) > 0 &&\r\n    initialAssets.every((asset) => asset.valid) &&\r\n    tokenAccounts &&\r\n    (adminAddress || !adminControlled);\r\n\r\n  async function onSubmit() {\r\n    if (!canSubmit || !wallet) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const assets = initialAssets as ValidInitialAsset[];\r\n      const [\r\n        poolAddress,\r\n        transactionsAndSigners,\r\n      ] = await PoolTransactions.initializeSimplePool({\r\n        connection,\r\n        programId: new PublicKey(programId),\r\n        poolName,\r\n        poolStateSpace: 1024,\r\n        poolMintDecimals: 6,\r\n        initialPoolMintSupply: new BN(\r\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\r\n        ),\r\n        assetMints: assets.map((asset) => asset.mint),\r\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\r\n        creator: wallet.publicKey,\r\n        creatorAssets: assets.map((asset) => {\r\n          const found = tokenAccounts?.find((tokenAccount) =>\r\n            tokenAccount.effectiveMint.equals(asset.mint),\r\n          );\r\n          if (!found) {\r\n            throw new Error('No token account for ' + asset.mint.toBase58());\r\n          }\r\n          return found.pubkey;\r\n        }),\r\n        additionalAccounts: adminControlled\r\n          ? [\r\n              {\r\n                pubkey: new PublicKey(adminAddress),\r\n                isSigner: false,\r\n                isWritable: false,\r\n              },\r\n            ]\r\n          : [],\r\n      });\r\n      const signed = await signTransactions({\r\n        transactionsAndSigners,\r\n        wallet,\r\n        connection,\r\n      });\r\n      for (let signedTransaction of signed) {\r\n        await sendSignedTransaction({ signedTransaction, connection });\r\n      }\r\n      setNewPoolAddress(poolAddress);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error creating new pool',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={4}>Create new pool</Title>\r\n        <Form layout=\"vertical\" onFinish={onSubmit}>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\r\n            }\r\n            name=\"name\"\r\n          >\r\n            <Input\r\n              value={poolName}\r\n              onChange={(e) => setPoolName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Address of the pool program.\">\r\n                Program ID{' '}\r\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"programId\"\r\n            initialValue={DEFAULT_PROGRAM_ID}\r\n          >\r\n            <AutoComplete\r\n              value={programId}\r\n              onChange={(value) => setProgramId(value)}\r\n              options={PROGRAM_ID_OPTIONS}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\r\n                Initial Pool Token Supply\r\n              </Tooltip>\r\n            }\r\n            name=\"initialSupply\"\r\n            initialValue=\"1\"\r\n          >\r\n            <Input\r\n              value={initialSupply}\r\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <AddRemoveTokenButtons>\r\n            <Button\r\n              onClick={() =>\r\n                setInitialAssets((assets) => assets.concat({ valid: false }))\r\n              }\r\n            >\r\n              Add token\r\n            </Button>{' '}\r\n            <Button\r\n              onClick={() =>\r\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\r\n              }\r\n              disabled={initialAssets.length <= 1}\r\n            >\r\n              Remove token\r\n            </Button>\r\n          </AddRemoveTokenButtons>\r\n          {initialAssets.map((asset, i) => (\r\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\r\n          ))}\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\r\n                Admin Controlled\r\n              </Tooltip>\r\n            }\r\n            name=\"adminControlled\"\r\n          >\r\n            <Switch\r\n              checked={adminControlled}\r\n              onChange={(checked) => setAdminControlled(checked)}\r\n              disabled={\r\n                programId === SIMPLE_POOL_PROGRAM_ID ||\r\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\r\n              }\r\n            />\r\n          </Form.Item>\r\n          {adminControlled ? (\r\n            <Form.Item\r\n              label={\r\n                <Tooltip title=\"Address of the pool admin account.\">\r\n                  Admin Address\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <Input\r\n                value={adminAddress}\r\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\r\n              />\r\n            </Form.Item>\r\n          ) : null}\r\n          <Form.Item label=\" \" colon={false}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={!canSubmit}\r\n              loading={submitting}\r\n            >\r\n              {connected ? 'Submit' : 'Not connected to wallet'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </FloatingElement>\r\n      {newPoolAddress ? (\r\n        <FloatingElement>\r\n          <Text>\r\n            New pool address:{' '}\r\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\r\n              {newPoolAddress.toBase58()}\r\n            </Link>\r\n          </Text>\r\n        </FloatingElement>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\ntype InitialAsset = { valid: false } | ValidInitialAsset;\r\ninterface ValidInitialAsset {\r\n  valid: true;\r\n  mint: PublicKey;\r\n  quantity: number;\r\n}\r\n\r\nfunction AssetInput({ setInitialAssets, index }) {\r\n  const [mintInput, mintInfo] = useMintInput(\r\n    `mint${index}`,\r\n    <Text>Token {index + 1} Mint Address</Text>,\r\n    <>Token mint address for token {index + 1}.</>,\r\n  );\r\n  const [quantity, setQuantity] = useState('');\r\n\r\n  useEffect(() => {\r\n    let change: InitialAsset;\r\n    if (mintInfo && parseFloat(quantity) >= 0) {\r\n      let parsedQuantity = Math.round(\r\n        10 ** mintInfo.decimals * parseFloat(quantity),\r\n      );\r\n      change = {\r\n        mint: mintInfo.address,\r\n        quantity: parsedQuantity,\r\n        valid: true,\r\n      };\r\n    } else {\r\n      change = { valid: false };\r\n    }\r\n    setInitialAssets((assets: InitialAsset[]) =>\r\n      assets.map((old, i) => (i === index ? change : old)),\r\n    );\r\n  }, [setInitialAssets, index, mintInfo, quantity]);\r\n\r\n  return (\r\n    <>\r\n      {mintInput}\r\n      <Form.Item\r\n        label={\r\n          <Tooltip\r\n            title={\r\n              <>\r\n                Initial quantity of token {index + 1} to deposit into the pool.\r\n              </>\r\n            }\r\n          >\r\n            Token {index + 1} Initial Quantity\r\n          </Tooltip>\r\n        }\r\n        name={`quantity${index}`}\r\n        validateStatus={'success'}\r\n      >\r\n        <Input\r\n          value={quantity}\r\n          onChange={(e) => setQuantity(e.target.value.trim())}\r\n          type=\"number\"\r\n          min=\"0\"\r\n          step=\"any\"\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { abbreviateAddress } from '../utils/utils';\r\nimport { useMintToTickers } from '../utils/tokens';\r\nimport { Popover } from 'antd';\r\nimport LinkAddress from './LinkAddress';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nexport function MintName({\r\n  mint,\r\n  showAddress = false,\r\n}: {\r\n  mint: string | PublicKey | null | undefined;\r\n  showAddress?: boolean;\r\n}) {\r\n  const mintToTickers = useMintToTickers();\r\n  if (!mint) {\r\n    return null;\r\n  }\r\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\r\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\r\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\r\n\r\n  return (\r\n    <>\r\n      {ticker}\r\n      {showAddress ? (\r\n        <>\r\n          {' '}\r\n          <Popover\r\n            content={<LinkAddress address={mintAddress} />}\r\n            placement=\"bottomRight\"\r\n            title=\"Token mint\"\r\n            trigger=\"hover\"\r\n          >\r\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n          </Popover>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import { Basket, PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport BN from 'bn.js';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport { parseTokenMintData } from '../../../utils/tokens';\r\nimport { Spin } from 'antd';\r\nimport { MintName } from '../../../components/MintName';\r\n\r\ninterface BasketDisplayProps {\r\n  poolInfo: PoolInfo;\r\n  basket?: Basket | null | undefined;\r\n}\r\n\r\nexport default function PoolBasketDisplay({\r\n  poolInfo,\r\n  basket,\r\n}: BasketDisplayProps) {\r\n  return (\r\n    <ul>\r\n      {poolInfo.state.assets.map((asset, index) => (\r\n        <BasketItem\r\n          key={index}\r\n          mint={asset.mint}\r\n          quantity={basket?.quantities[index]}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface BasketItemProps {\r\n  mint: PublicKey;\r\n  quantity?: BN;\r\n}\r\n\r\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\r\n  const [mintAccountInfo] = useAccountInfo(mint);\r\n  let quantityDisplay = <Spin size=\"small\" />;\r\n  if (mintAccountInfo && quantity) {\r\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\r\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {quantityDisplay} <MintName mint={mint} showAddress />\r\n    </li>\r\n  );\r\n}\r\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { Typography } from 'antd';\r\nimport { MintInfo } from '../../../utils/tokens';\r\nimport { useAsyncData } from '../../../utils/fetch-loop';\r\nimport { useConnection } from '../../../utils/connection';\r\nimport tuple from 'immutable-tuple';\r\nimport PoolBasketDisplay from './PoolBasketDisplay';\r\n\r\nconst { Text, Paragraph } = Typography;\r\n\r\ninterface PoolInfoProps {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n}\r\n\r\nconst feeFormat = new Intl.NumberFormat(undefined, {\r\n  style: 'percent',\r\n  minimumFractionDigits: 0,\r\n  maximumFractionDigits: 6,\r\n});\r\n\r\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\r\n  const connection = useConnection();\r\n\r\n  const [totalBasket] = useAsyncData(\r\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\r\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\r\n  );\r\n\r\n  return (\r\n    <FloatingElement stretchVertical>\r\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\r\n      <Paragraph>\r\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\r\n      </Paragraph>\r\n      <Paragraph>\r\n        Pool token mint address:{' '}\r\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\r\n      </Paragraph>\r\n      {poolInfo.state.adminKey ? (\r\n        <Paragraph>\r\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\r\n        </Paragraph>\r\n      ) : null}\r\n      <Paragraph>\r\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\r\n      </Paragraph>\r\n      <Paragraph>\r\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\r\n      </Paragraph>\r\n      <Text>Total assets:</Text>\r\n      <div>\r\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\r\nimport React, { useMemo, useState } from 'react';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\r\nimport { MintInfo } from '../../../utils/tokens';\r\nimport { useAsyncData } from '../../../utils/fetch-loop';\r\nimport { useConnection } from '../../../utils/connection';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport tuple from 'immutable-tuple';\r\nimport PoolBasketDisplay from './PoolBasketDisplay';\r\nimport BN from 'bn.js';\r\nimport { notify } from '../../../utils/notifications';\r\nimport { useWallet } from '../../../utils/wallet';\r\nimport { useTokenAccounts } from '../../../utils/markets';\r\nimport { sendTransaction } from '../../../utils/send';\r\n\r\nconst { Text } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\ninterface PoolCreateRedeemPanel {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n}\r\n\r\nexport default function PoolCreateRedeemPanel({\r\n  poolInfo,\r\n  mintInfo,\r\n}: PoolCreateRedeemPanel) {\r\n  return (\r\n    <FloatingElement stretchVertical>\r\n      <Tabs>\r\n        <TabPane tab=\"Create\" key=\"create\">\r\n          <CreateRedeemTab\r\n            poolInfo={poolInfo}\r\n            mintInfo={mintInfo}\r\n            tab=\"create\"\r\n          />\r\n        </TabPane>\r\n        <TabPane tab=\"Redeem\" key=\"redeem\">\r\n          <CreateRedeemTab\r\n            poolInfo={poolInfo}\r\n            mintInfo={mintInfo}\r\n            tab=\"redeem\"\r\n          />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\ninterface CreateRedeemInnerPanel {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n  tab: string;\r\n}\r\n\r\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [quantity, setQuantity] = useState('');\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const action = useMemo(() => {\r\n    const parsedQuantity = Math.round(\r\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\r\n    );\r\n    if (parsedQuantity > 0) {\r\n      if (tab === 'create') {\r\n        return { create: new BN(parsedQuantity) };\r\n      } else {\r\n        return { redeem: new BN(parsedQuantity) };\r\n      }\r\n    }\r\n    return null;\r\n  }, [mintInfo.decimals, quantity, tab]);\r\n\r\n  const [basket, basketLoaded] = useAsyncData(\r\n    async () =>\r\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\r\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\r\n  );\r\n\r\n  function findTokenAccount(mint: PublicKey): PublicKey {\r\n    const account = tokenAccounts?.find((account) =>\r\n      account.effectiveMint.equals(mint),\r\n    );\r\n    if (account) {\r\n      return account.pubkey;\r\n    }\r\n    throw new Error('No token account for ' + mint.toBase58());\r\n  }\r\n\r\n  const canSubmit = connected && action && basket;\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    if (!action || !basket || !connected || !canSubmit || !wallet) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const { transaction, signers } = PoolTransactions.execute(\r\n        poolInfo,\r\n        action,\r\n        {\r\n          owner: wallet.publicKey,\r\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\r\n          assetAccounts: poolInfo.state.assets.map((asset) =>\r\n            findTokenAccount(asset.mint),\r\n          ),\r\n        },\r\n        basket,\r\n      );\r\n      await sendTransaction({ connection, wallet, transaction, signers });\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message:\r\n          'Error ' +\r\n          (tab === 'create' ? 'creating' : 'redeeming') +\r\n          ' pool tokens',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Input\r\n        addonBefore={<>Quantity</>}\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <div>\r\n        {!basket ? (\r\n          basketLoaded ? null : (\r\n            <Spin />\r\n          )\r\n        ) : (\r\n          <>\r\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\r\n            <Text type=\"secondary\">(indicative only)</Text>\r\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\r\n          </>\r\n        )}\r\n      </div>\r\n      <Button\r\n        htmlType=\"submit\"\r\n        type=\"primary\"\r\n        disabled={!canSubmit || submitting}\r\n      >\r\n        {!connected ? 'Wallet not connected' : 'Submit'}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","import { PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport {\r\n  parseTokenAccountData,\r\n  parseTokenMintData,\r\n} from '../../../utils/tokens';\r\nimport { Button, Spin, Tabs } from 'antd';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { useTokenAccounts } from '../../../utils/markets';\r\nimport { MintName } from '../../../components/MintName';\r\nimport { LinkOutlined } from '@ant-design/icons';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function PoolBalancesPanel({\r\n  poolInfo,\r\n}: {\r\n  poolInfo: PoolInfo;\r\n}) {\r\n  return (\r\n    <FloatingElement>\r\n      <Tabs>\r\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\r\n          <WalletBalancesTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\r\n          <PoolBalancesTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  return (\r\n    <ul>\r\n      {[\r\n        poolInfo.state.poolTokenMint,\r\n        ...poolInfo.state.assets.map((asset) => asset.mint),\r\n      ].map((mint, index) => {\r\n        const tokenAccount = tokenAccounts?.find((account) =>\r\n          account.effectiveMint.equals(mint),\r\n        );\r\n        if (!tokenAccount) {\r\n          return null;\r\n        }\r\n        return (\r\n          <BalanceItem\r\n            key={index}\r\n            mint={mint}\r\n            publicKey={tokenAccount.pubkey}\r\n            isPoolToken={mint.equals(poolInfo.state.poolTokenMint)}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\r\n  return (\r\n    <ul>\r\n      {poolInfo.state.assets.map((asset, index) => {\r\n        return (\r\n          <BalanceItem\r\n            key={index}\r\n            mint={asset.mint}\r\n            publicKey={asset.vaultAddress}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface BalanceItemProps {\r\n  mint: PublicKey;\r\n  publicKey: PublicKey;\r\n  isPoolToken?: boolean;\r\n}\r\n\r\nfunction BalanceItem({ mint, publicKey, isPoolToken }: BalanceItemProps) {\r\n  const [mintAccountInfo] = useAccountInfo(mint);\r\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\r\n  let quantityDisplay = <Spin size=\"small\" />;\r\n  if (mintAccountInfo && balanceAccountInfo) {\r\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\r\n    if (mint.equals(WRAPPED_SOL_MINT)) {\r\n      quantityDisplay = (\r\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\r\n      );\r\n    } else {\r\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\r\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {quantityDisplay}{' '}\r\n      {isPoolToken ? (\r\n        <>\r\n          Pool Token (<MintName mint={mint} />)\r\n        </>\r\n      ) : (\r\n        <MintName mint={mint} />\r\n      )}{' '}\r\n      <Button\r\n        type=\"link\"\r\n        icon={<LinkOutlined />}\r\n        href={'https://explorer.solana.com/address/' + publicKey.toBase58()}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n","import React, { FormEvent, useMemo, useState } from 'react';\r\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\r\nimport { TokenInstructions } from '@project-serum/serum';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { useConnection } from '../../../utils/connection';\r\nimport { useWallet } from '../../../utils/wallet';\r\nimport {\r\n  getSelectedTokenAccountForMint,\r\n  useTokenAccounts,\r\n} from '../../../utils/markets';\r\nimport { sendTransaction } from '../../../utils/send';\r\nimport { notify } from '../../../utils/notifications';\r\nimport {\r\n  Account,\r\n  PublicKey,\r\n  SystemProgram,\r\n  Transaction,\r\n} from '@solana/web3.js';\r\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\r\nimport {\r\n  createAssociatedTokenAccount,\r\n  getAssociatedTokenAddress,\r\n} from '@project-serum/associated-token';\r\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\r\nimport BN from 'bn.js';\r\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\n\r\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\r\n  return (\r\n    <FloatingElement>\r\n      <Tabs>\r\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\r\n          <PauseUnpauseTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\r\n          <AddAssetTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\r\n          <RemoveAssetTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Deposit\" key=\"deposit\">\r\n          <DepositTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\r\n          <WithdrawTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\r\n          <UpdateFeeTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\ninterface TabParams {\r\n  poolInfo: PoolInfo;\r\n}\r\n\r\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  async function sendPause() {\r\n    if (!connected || !wallet) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const transaction = new Transaction();\r\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\r\n      await sendTransaction({ connection, wallet, transaction });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error pausing pool',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  async function sendUnpause() {\r\n    if (!connected || !wallet) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const transaction = new Transaction();\r\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\r\n      await sendTransaction({ connection, wallet, transaction });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error unpausing pool',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={sendPause} disabled={submitting}>\r\n        Pause\r\n      </Button>{' '}\r\n      <Button onClick={sendUnpause} disabled={submitting}>\r\n        Unpause\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AddAssetTab({ poolInfo }: TabParams) {\r\n  const connection = useConnection();\r\n  const [address, setAddress] = useState('');\r\n  const { wallet, connected } = useWallet();\r\n  const canSubmit = connected && address;\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'adding asset to pool',\r\n    async () => {\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = await getAssociatedTokenAddress(\r\n        poolInfo.state.vaultSigner,\r\n        mintAddress,\r\n      );\r\n      const transaction = new Transaction();\r\n      if (!(await connection.getAccountInfo(vaultAddress)) && wallet) {\r\n        transaction.add(\r\n          await createAssociatedTokenAccount(\r\n            wallet.publicKey,\r\n            poolInfo.state.vaultSigner,\r\n            mintAddress,\r\n          ),\r\n        );\r\n      }\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\r\n      );\r\n      return [transaction, []];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintSelector\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\r\n  const [address, setAddress] = useState('');\r\n  const { connected } = useWallet();\r\n  const canSubmit = connected && address;\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'removing asset from pool',\r\n    async () => {\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\r\n        asset.mint.equals(mintAddress),\r\n      )?.vaultAddress;\r\n      if (!vaultAddress) {\r\n        throw new Error('Asset not in pool');\r\n      }\r\n      const transaction = new Transaction();\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\r\n      );\r\n      return [transaction, []];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintInPoolSelector\r\n        poolInfo={poolInfo}\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction DepositTab({ poolInfo }: TabParams) {\r\n  const [address, setAddress] = useState('');\r\n  const [quantity, setQuantity] = useState('');\r\n\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const canSubmit =\r\n    connected && address && tokenAccounts && parseFloat(quantity);\r\n\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'depositing to pool',\r\n    async () => {\r\n      if (!wallet) {\r\n        throw new Error('Wallet is not connected');\r\n      }\r\n\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\r\n        asset.mint.equals(mintAddress),\r\n      )?.vaultAddress;\r\n      if (!vaultAddress) {\r\n        throw new Error('Asset not in pool');\r\n      }\r\n\r\n      const walletTokenAccount = getSelectedTokenAccountForMint(\r\n        tokenAccounts,\r\n        mintAddress,\r\n      );\r\n      if (!walletTokenAccount) {\r\n        throw new Error('Asset not in wallet');\r\n      }\r\n\r\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\r\n      if (!mintAccountInfo) {\r\n        throw new Error('Mint not found');\r\n      }\r\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\r\n      const parsedQuantity = Math.round(\r\n        parseFloat(quantity) * 10 ** mintDecimals,\r\n      );\r\n\r\n      const wrappedSolAccount =\r\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\r\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\r\n          ? new Account()\r\n          : null;\r\n\r\n      const transaction = new Transaction();\r\n      const signers: Account[] = [];\r\n      if (wrappedSolAccount) {\r\n        transaction.add(\r\n          SystemProgram.createAccount({\r\n            fromPubkey: wallet.publicKey,\r\n            lamports: parsedQuantity + 2.04e6,\r\n            newAccountPubkey: wrappedSolAccount.publicKey,\r\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n            space: 165,\r\n          }),\r\n          TokenInstructions.initializeAccount({\r\n            account: wrappedSolAccount.publicKey,\r\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\r\n            owner: wallet.publicKey,\r\n          }),\r\n          TokenInstructions.transfer({\r\n            source: wrappedSolAccount.publicKey,\r\n            destination: vaultAddress,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n          TokenInstructions.closeAccount({\r\n            source: wrappedSolAccount.publicKey,\r\n            destination: walletTokenAccount.pubkey,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n        signers.push(wrappedSolAccount);\r\n      } else {\r\n        transaction.add(\r\n          TokenInstructions.transfer({\r\n            source: walletTokenAccount.pubkey,\r\n            destination: vaultAddress,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n      }\r\n      return [transaction, signers];\r\n    },\r\n    true,\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintInPoolSelector\r\n        poolInfo={poolInfo}\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <Input\r\n        addonBefore={<>Quantity</>}\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction WithdrawTab({ poolInfo }: TabParams) {\r\n  const [address, setAddress] = useState('');\r\n  const [quantity, setQuantity] = useState('');\r\n\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const canSubmit =\r\n    connected && address && tokenAccounts && parseFloat(quantity);\r\n\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'withdrawing from pool',\r\n    async () => {\r\n      if (!wallet) {\r\n        throw new Error('Wallet is not connected');\r\n      }\r\n\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\r\n        asset.mint.equals(mintAddress),\r\n      )?.vaultAddress;\r\n      if (!vaultAddress) {\r\n        throw new Error('Asset not in pool');\r\n      }\r\n\r\n      const walletTokenAccount = getSelectedTokenAccountForMint(\r\n        tokenAccounts,\r\n        mintAddress,\r\n      );\r\n      if (!walletTokenAccount) {\r\n        throw new Error('Asset not in wallet');\r\n      }\r\n\r\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\r\n      if (!mintAccountInfo) {\r\n        throw new Error('Mint not found');\r\n      }\r\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\r\n      const parsedQuantity = Math.round(\r\n        parseFloat(quantity) * 10 ** mintDecimals,\r\n      );\r\n\r\n      const wrappedSolAccount =\r\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\r\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\r\n          ? new Account()\r\n          : null;\r\n\r\n      const transaction = new Transaction();\r\n      const signers: Account[] = [];\r\n      if (wrappedSolAccount) {\r\n        transaction.add(\r\n          SystemProgram.createAccount({\r\n            fromPubkey: wallet.publicKey,\r\n            lamports: 2.04e6,\r\n            newAccountPubkey: wrappedSolAccount.publicKey,\r\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n            space: 165,\r\n          }),\r\n          TokenInstructions.initializeAccount({\r\n            account: wrappedSolAccount.publicKey,\r\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n        signers.push(wrappedSolAccount);\r\n      }\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.approveDelegate(\r\n          poolInfo,\r\n          vaultAddress,\r\n          wallet.publicKey,\r\n          new BN(parsedQuantity),\r\n        ),\r\n      );\r\n      if (wrappedSolAccount) {\r\n        transaction.add(\r\n          TokenInstructions.transfer({\r\n            source: vaultAddress,\r\n            destination: wrappedSolAccount.publicKey,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n          TokenInstructions.closeAccount({\r\n            source: wrappedSolAccount.publicKey,\r\n            destination: walletTokenAccount.pubkey,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n      } else {\r\n        transaction.add(\r\n          TokenInstructions.transfer({\r\n            source: vaultAddress,\r\n            destination: walletTokenAccount.pubkey,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n      }\r\n      return [transaction, signers];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintInPoolSelector\r\n        poolInfo={poolInfo}\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <Input\r\n        addonBefore={<>Quantity</>}\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\r\n  const [feeRate, setFeeRate] = useState('');\r\n\r\n  const { connected } = useWallet();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\r\n\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'changing pool fee',\r\n    async () => {\r\n      const transaction = new Transaction();\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.updateFee(\r\n          poolInfo,\r\n          Math.round(parseFloat(feeRate) * 1_000_000),\r\n        ),\r\n      );\r\n      return [transaction, []];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Input\r\n        addonBefore={<>Fee Rate</>}\r\n        value={feeRate}\r\n        onChange={(e) => setFeeRate(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction useOnSubmitHandler(\r\n  description: string,\r\n  makeTransaction: () => Promise<[Transaction, Account[]]>,\r\n  refresh = false,\r\n): [(FormEvent) => void, boolean] {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  async function onSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n    if (submitting) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      if (!connected || !wallet) {\r\n        throw new Error('Wallet not connected');\r\n      }\r\n      const [transaction, signers] = await makeTransaction();\r\n      await sendTransaction({ connection, wallet, transaction, signers });\r\n      if (refresh) {\r\n        refreshAllCaches();\r\n      }\r\n    } catch (e) {\r\n      notify({\r\n        message: `Error ${description}`,\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return [onSubmit, submitting];\r\n}\r\n\r\nfunction SubmitButton({ canSubmit, submitting }) {\r\n  const { connected } = useWallet();\r\n  return (\r\n    <Button\r\n      htmlType=\"submit\"\r\n      type=\"primary\"\r\n      disabled={!canSubmit || submitting}\r\n    >\r\n      {!connected ? 'Wallet not connected' : 'Submit'}\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction MintInPoolSelector({\r\n  poolInfo,\r\n  label,\r\n  value,\r\n  onChange,\r\n  style,\r\n}: {\r\n  poolInfo: PoolInfo;\r\n  label: string;\r\n  value: string;\r\n  onChange: (string) => void;\r\n  style: any;\r\n}) {\r\n  const mintToTickers = useMintToTickers();\r\n  return (\r\n    <Input.Group style={style}>\r\n      <span className=\"ant-input-group-addon\">{label}</span>\r\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\r\n        {poolInfo.state.assets.map((asset) => (\r\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\r\n            {mintToTickers[asset.mint.toBase58()] ? (\r\n              <>\r\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\r\n              </>\r\n            ) : (\r\n              asset.mint.toBase58()\r\n            )}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    </Input.Group>\r\n  );\r\n}\r\n\r\nfunction MintSelector({ label, style, value, onChange }) {\r\n  const mintToTickers = useMintToTickers();\r\n  const options = useMemo(() => {\r\n    return Object.entries(mintToTickers)\r\n      .filter(\r\n        ([mintAddress, ticker]) =>\r\n          mintAddress.includes(value) ||\r\n          ticker.toLowerCase().includes(value.toLowerCase()),\r\n      )\r\n      .map(([mintAddress, ticker]) => ({\r\n        value: mintAddress,\r\n        label: (\r\n          <>\r\n            {ticker} ({mintAddress})\r\n          </>\r\n        ),\r\n      }));\r\n  }, [mintToTickers, value]);\r\n  return (\r\n    <Input.Group style={style}>\r\n      <span className=\"ant-input-group-addon\">{label}</span>\r\n      <AutoComplete\r\n        options={options}\r\n        value={value}\r\n        onChange={(e) => onChange(e)}\r\n        style={{ width: '100%' }}\r\n      />\r\n    </Input.Group>\r\n  );\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport {\r\n  decodePoolState,\r\n  isAdminControlledPool,\r\n  PoolInfo,\r\n} from '@project-serum/pool';\r\nimport PoolInfoPanel from './PoolInfoPanel';\r\nimport { parseTokenMintData } from '../../../utils/tokens';\r\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\r\nimport PoolBalancesPanel from './PoolBalancesPanel';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { PoolAdminPanel } from './PoolAdminPanel';\r\nimport { useWallet } from '../../../utils/wallet';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function PoolPage() {\r\n  const { poolAddress } = useParams();\r\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\r\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\r\n  );\r\n  const history = useHistory();\r\n\r\n  const poolInfo: PoolInfo | null = useMemo(() => {\r\n    if (!poolAccountInfo) {\r\n      return null;\r\n    }\r\n    try {\r\n      return {\r\n        address: new PublicKey(poolAddress),\r\n        state: decodePoolState(poolAccountInfo.data),\r\n        program: poolAccountInfo.owner,\r\n      };\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }, [poolAddress, poolAccountInfo]);\r\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\r\n    poolInfo?.state.poolTokenMint,\r\n  );\r\n  const mintInfo = useMemo(\r\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\r\n    [mintAccountInfo],\r\n  );\r\n  const { wallet } = useWallet();\r\n\r\n  if (poolInfo && mintInfo && wallet) {\r\n    return (\r\n      <>\r\n        <PageHeader\r\n          title={<>Pool {poolInfo.address.toBase58()}</>}\r\n          onBack={() => history.push('/pools')}\r\n          subTitle={poolInfo.state.name}\r\n        />\r\n        <Row>\r\n          <Col xs={24} lg={12}>\r\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\r\n          </Col>\r\n          <Col xs={24} lg={12}>\r\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\r\n          </Col>\r\n          <Col xs={24}>\r\n            <PoolBalancesPanel poolInfo={poolInfo} />\r\n          </Col>\r\n          {wallet.connected &&\r\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\r\n          isAdminControlledPool(poolInfo) ? (\r\n            <Col xs={24}>\r\n              <PoolAdminPanel poolInfo={poolInfo} />\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title={<>Pool {poolAddress}</>}\r\n        onBack={() => history.push('/pools')}\r\n      />\r\n      <FloatingElement>\r\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\r\n          <Spin />\r\n        ) : (\r\n          <Text>Invalid pool</Text>\r\n        )}\r\n      </FloatingElement>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction isPublicKey(address) {\r\n  try {\r\n    new PublicKey(address);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\nimport FloatingElement from '../../components/layout/FloatingElement';\r\nimport React, { useState } from 'react';\r\nimport { Button, Input, Typography } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Link from '../../components/Link';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 700px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  margin-top: 16px;\r\n  margin-bottom: 48px;\r\n`;\r\n\r\nexport default function PoolListPage() {\r\n  const [poolAddress, setPoolAddress] = useState('');\r\n  const history = useHistory();\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    history.push(`/pools/${poolAddress}`);\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={3}>Pools</Title>\r\n        <Form onSubmit={onSubmit}>\r\n          <Input\r\n            value={poolAddress}\r\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\r\n            placeholder=\"Pool address\"\r\n          />\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Go\r\n          </Button>\r\n        </Form>\r\n        <Link to=\"/pools/new\">Create new pool</Link>\r\n      </FloatingElement>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport TradePage from './pages/TradePage';\r\nimport OpenOrdersPage from './pages/OpenOrdersPage';\r\nimport React from 'react';\r\nimport BalancesPage from './pages/BalancesPage';\r\nimport ConvertPage from './pages/ConvertPage';\r\nimport BasicLayout from './components/BasicLayout';\r\nimport ListNewMarketPage from './pages/ListNewMarketPage';\r\nimport NewPoolPage from './pages/pools/NewPoolPage';\r\nimport PoolPage from './pages/pools/PoolPage';\r\nimport PoolListPage from './pages/pools/PoolListPage';\r\nimport { getTradePageUrl } from './utils/markets';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <>\r\n      <HashRouter basename={'/'}>\r\n        <BasicLayout>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to={getTradePageUrl()} />\r\n            </Route>\r\n            <Route exact path=\"/market/:marketAddress\">\r\n              <TradePage />\r\n            </Route>\r\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\r\n            <Route exact path=\"/balances\" component={BalancesPage} />\r\n            <Route exact path=\"/convert\" component={ConvertPage} />\r\n            <Route\r\n              exact\r\n              path=\"/list-new-market\"\r\n              component={ListNewMarketPage}\r\n            />\r\n            <Route exact path=\"/pools\">\r\n              <PoolListPage />\r\n            </Route>\r\n            <Route exact path=\"/pools/new\">\r\n              <NewPoolPage />\r\n            </Route>\r\n            <Route exact path=\"/pools/:poolAddress\">\r\n              <PoolPage />\r\n            </Route>\r\n          </Switch>\r\n        </BasicLayout>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport './App.less';\r\nimport { ConnectionProvider } from './utils/connection';\r\nimport { WalletProvider } from './utils/wallet';\r\nimport { GlobalStyle } from './global_style';\r\nimport { Spin } from 'antd';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport { Routes } from './routes';\r\n// import { PreferencesProvider } from './utils/preferences';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Suspense fallback={() => <Spin size=\"large\" />}>\r\n      <GlobalStyle />\r\n      <ErrorBoundary>\r\n        <ConnectionProvider>\r\n          <WalletProvider>\r\n            <Suspense fallback={() => <Spin size=\"large\" />}>\r\n              <Routes />\r\n            </Suspense>\r\n          </WalletProvider>\r\n        </ConnectionProvider>\r\n      </ErrorBoundary>\r\n    </Suspense>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}